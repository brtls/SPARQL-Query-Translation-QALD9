[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?film <http://dbpedia.org/ontology/uri> ?uri . }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?subclass db:subclass ?musical . ?musical db:Misical ?superclass . FILTER (?superclass = db:Misical) . ?musical db:musicBy db:Elton_John . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Skype> dbpedia:developer ?uri . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:SoccerClub ; dbpedia-owl:league dbpedia: Bundesliga . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor WHERE { ?movie db:director <http://dbpedia.org/resource/William_Shatner>; db:starring ?actor. }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbp:Mountain ?mountain ; dbp:elevation ?elevation . }"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a dbo:Film ; dbp:starring db:Leonardo_DiCaprio . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbpedia-owl:deathDate ?date }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "SELECT DISTINCT ?movie WHERE { ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia-resource:Minecraft dbpedia-owl:developer ?uri . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val . }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Toy_Story dbpedia-owl:runtime ?val . }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation ?bandleader . ?bandleader dbo:instrument ?trumpet . FILTER (strstarts(str(?bandleader), 'Bandleader') && strstarts(str(?trumpet), 'Trumpet')) }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/subjectOf> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?birthYear WHERE { dbpedia:Rachel_Stevens wikidata:P569 ?date . BIND(YEAR(?date) as ?birthYear) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbpedia-owl:deathCause ?uri } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?height WHERE { <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbpedia-owl:height ?height . }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Mountain dbpedia-resource:Mountain ; dbpedia-owl:locatedInArea dbpedia-resource:Italy ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbo:owner dbp:Donald_Trump. FILTER NOT EXISTS { ?uri dbo:closed ?closed } }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { dbpedia-owl:Tom_Cruise <http://dbpedia.org/ontology/spouse> ?o1 . }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia:Eurasia dbpedia-owl:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?author WHERE { <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbpedia-owl:author ?author . }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:John_Adams dbpedia-owl:birthDate ?val }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?population WHERE { dbpedia:European_Union dbpedia-owl:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbpedia-owl:currency ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { db:William_Shakespeare dbo:deathDate ?uri . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Rocket . ?uri dbo:launchSite ?launchSite . ?launchSite dbo:location db:Baikonur_Cosmodrome . }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?island WHERE { ?island a dbpedia-owl:Island ; dbpedia-owl:country ?country . FILTER(?country = <http://dbpedia.org/resource/Japan>). }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia-owl:World_of_Warcraft dbpedia-owl:developer ?uri . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Company . ?uri dbpedia-owl:industry ?industry . ?industry rdfs:label ?label . FILTER (lang(?label) = 'en' && regex(?label, 'advertising')) . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { VALUES ?types { dbpedia:Q3918 dbpedia:Q875538 } dbpedia:Angela_Merkel dbpedia:almaMater ?uri . ?uri dbpedia:type ?types . }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?type dbp:subclassOf dbp:TelevisionShow . ?uri dbp:starring dbr:Neil_Patrick_Harris . ?uri dbp:type ?type . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?film WHERE { ?film a dbpedia-owl:Film. ?film dbpedia-owl:starring <http://dbpedia.org/resource/Tom_Cruise>. }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { ?entity dbpedia:locatedInArea ?location . ?location dbpedia:Country ?country . FILTER(?entity = <http://dbpedia.org/resource/Mount_Everest>) }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:John_F._Kennedy dbpedia:deathPlace ?uri . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Brooklyn_Bridge dbpedia:crosses ?uri . }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "` tags:   PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:birthPlace <http://dbpedia.org/resource/Moscow> ; a dbo:Swimmer . }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "SELECT DISTINCT ?s1 WHERE { ?s1 <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . ?s1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> . ?s1 <http://dbpedia.org/ontology/releaseYear> ?o1 . } order by DESC(?o1) limit 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbo:mountain ?elevation . ?res dbo:continent dbo:Asia . ?res dbo:parentCountry dbo:China . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:cairo dbpedia-owl:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbpedia2: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia2:birthPlace dbpedia2:Heraklion }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?child) as ?c) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child . }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?elevation WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbpedia-owl:elevation ?elevation . }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia2:Claudia_Schiffer dbpedia:height ?val }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:Holiday ?value . FILTER regex(?value, \"^http://dbpedia.org/entity/\", \"i\") }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?birthPlace WHERE { dbo:Frank_Sinatra dbo:birthPlace ?birthPlace . }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbp:City dbp:populationTotal ?population . } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/ SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:TelevisionShow ?hasShow ; dbpedia-owl:creator ?hasCreator . ?hasCreator dbpedia-owl:subject <http://dbpedia.org/resource/Walt_Disney> . }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia2: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbpedia-owl:instanceOf dbpedia2:Sverige . ?uri dbpedia-owl:Holiday true . ?uri dbpedia-owl:country dbpedia2:Sverige . }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?netIncome WHERE { <http://dbpedia.org/resource/Apple_Inc/> dbpedia-owl:netIncome ?netIncome . ?netIncome a <http://www.w3.org/2001/XMLSchema }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { dbpedia:Abraham_Lincoln dbp:deathPlace ?uri }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?capital WHERE { dbo:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { db:Michael_Jordan dbpedia:height ?val }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:director <http://dbpedia.org/resource/Clint_Eastwood> ; db:starring <http://dbpedia.org/resource/Clint_Eastwood> . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { ?country db:currency <http://dbpedia.org/resource/West_African_CFA_franc>. }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { db:Iraq dbpedia:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?type dbp:Holiday* <http://dbpedia.org/resource/Holiday> . ?uri dbp:subclassOf ?type . }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia:PoliticalParty ; dbpedia:country db:Greece ; dbpedia:ideology db:Pro-Europeanism . }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { ?movie dbo:starring ?actor . ?actor dbo:birthDate ?date . ?movie rdfs:seeAlso <http://dbpedia.org/resource/Charmed> . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?movement WHERE { dbpedia:The_Three_Dancers dbpedia-ontology:movement ?movement . }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Actor> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace>/<http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/architect> ?uri . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:composer ?composer . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbp:Film . ?uri dbp:director db:Francis_Ford_Coppola . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "SELECT ?name WHERE { <http://dbpedia.org/resource/Adele> <http://dbpedia.org/ontology/birthName> ?name . }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/classOf> <http://dbpedia.org/ontology/Album> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbp:birthPlace dbo:Vienna . UNION ?uri dbo:deathPlace dbo:Berlin . }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbp:Bridge ; dbp:crosses dbr:Seine . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:occupation \"Musician\"@en . ?uri db:author ?x . ?y db:Book ?y . FILTER (?x = ?uri) } GROUP BY ?uri ORDER BY DESC(COUNT(?y)) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . ?uri <http://dbpedia.org/ontology/TelevisionShow> . }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "SELECT ?discoverer WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?discoverer . }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res dbp:occupation db:BandLeader. ?res dbp:instrument db:Trumpet. }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:SoccerPlayer ; dbpedia-owl:birthPlace ?birthPlace . ?birthPlace dbpedia-owl:country ?malta . ?malta rdfs:label \"Malta\"@en . }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri}"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub dbpedia-owl:subsetOf* dbpedia:ProgrammingLanguage . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Astronaut> [] . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri}"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "SELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbpedia-ontology:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?creator WHERE { dbpedia:Batman dbpedia:creator ?creator }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/capital> ?uri . ?uri <http://dbpedia.org/ontology/populationTotal> ?number . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbpedia-owl:areaTotal ?val . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?numberOfEmployees WHERE { dbpedia:IBM dbpedia-owl:numberOfEmployees ?numberOfEmployees . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?budget WHERE { <http://dbpedia.org/resource/Pulp_Fiction> dbpedia-owl:budget ?budget . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?movie WHERE { ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?film dbpedia-owl:country <http://dbpedia.org/resource/Denmark> ; a dbpedia-owl:Film . BIND(URI(CONCAT(str(?film), \"?\")) AS ?uri) }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { db:Himalayas dbpedia-owl:country ?uri . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { <http://dbpedia.org/resource/Angela_Merkel> dbpedia-owl:almaMater ?res . ?res rdf:type dbpedia-owl:University . }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . }"
    }
]