[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Allen_Lane"
        ]
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?film <http://dbpedia.org/ontology/uri> ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?subclass db:subclass ?musical . ?musical db:Misical ?superclass . FILTER (?superclass = db:Misical) . ?musical db:musicBy db:Elton_John . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Skype> dbpedia:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Skype_Technologies"
        ]
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:SoccerClub ; dbpedia-owl:league dbpedia: Bundesliga . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor WHERE { ?movie db:director <http://dbpedia.org/resource/William_Shatner>; db:starring ?actor. }",
        "answers": [
            "http://dbpedia.org/resource/DeForest_Kelley",
            "http://dbpedia.org/resource/George_Takei",
            "http://dbpedia.org/resource/James_Doohan",
            "http://dbpedia.org/resource/Leonard_Nimoy",
            "http://dbpedia.org/resource/Nichelle_Nichols",
            "http://dbpedia.org/resource/Walter_Koenig",
            "http://dbpedia.org/resource/William_Shatner"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbp:Mountain ?mountain ; dbp:elevation ?elevation . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a dbo:Film ; dbp:starring db:Leonardo_DiCaprio . }",
        "answers": [
            "33"
        ]
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbpedia-owl:deathDate ?date }",
        "answers": [
            "1986-02-28"
        ]
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?movie WHERE { ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }",
        "answers": [
            "http://dbpedia.org/resource/Boom!_(film)",
            "http://dbpedia.org/resource/Divorce_His,_Divorce_Hers",
            "http://dbpedia.org/resource/Doctor_Faustus_(1967_film)",
            "http://dbpedia.org/resource/Hammersmith_Is_Out",
            "http://dbpedia.org/resource/The_Comedians_(1967_film)",
            "http://dbpedia.org/resource/The_Sandpiper",
            "http://dbpedia.org/resource/The_Taming_of_the_Shrew_(1967_film)",
            "http://dbpedia.org/resource/The_V.I.P.s_(film)",
            "http://dbpedia.org/resource/Under_Milk_Wood_(1972_film)",
            "http://dbpedia.org/resource/Who's_Afraid_of_Virginia_Woolf%3F_(film)"
        ]
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia-resource:Minecraft dbpedia-owl:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Mojang_Studios"
        ]
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val . }",
        "answers": [
            "60.0"
        ]
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n' and '",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Toy_Story dbpedia-owl:runtime ?val . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation ?bandleader . ?bandleader dbo:instrument ?trumpet . FILTER (strstarts(str(?bandleader), 'Bandleader') && strstarts(str(?trumpet), 'Trumpet')) }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/subjectOf> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?birthYear WHERE { dbpedia:Rachel_Stevens wikidata:P569 ?date . BIND(YEAR(?date) as ?birthYear) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbpedia-owl:deathCause ?uri } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Execution_by_hanging"
        ]
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?height WHERE { <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbpedia-owl:height ?height . }",
        "answers": [
            "106.07"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Mountain dbpedia-resource:Mountain ; dbpedia-owl:locatedInArea dbpedia-resource:Italy ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Alfred_Kleiner"
        ]
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbo:owner dbp:Donald_Trump. FILTER NOT EXISTS { ?uri dbo:closed ?closed } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { dbpedia-owl:Tom_Cruise <http://dbpedia.org/ontology/spouse> ?o1 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia:Eurasia dbpedia-owl:populationTotal ?val . }",
        "answers": [
            "5360351985"
        ]
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?author WHERE { <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbpedia-owl:author ?author . }",
        "answers": [
            "http://dbpedia.org/resource/Sigmund_Freud"
        ]
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:John_Adams dbpedia-owl:birthDate ?val }",
        "answers": [
            "1735-10-30"
        ]
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?population WHERE { dbpedia:European_Union dbpedia-owl:populationTotal ?population . }",
        "answers": [
            "446828803"
        ]
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbpedia-owl:currency ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Renminbi"
        ]
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { db:William_Shakespeare dbo:deathDate ?uri . }",
        "answers": [
            "1616-04-23"
        ]
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Rocket . ?uri dbo:launchSite ?launchSite . ?launchSite dbo:location db:Baikonur_Cosmodrome . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?island WHERE { ?island a dbpedia-owl:Island ; dbpedia-owl:country ?country . FILTER(?country = <http://dbpedia.org/resource/Japan>). }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia-owl:World_of_Warcraft dbpedia-owl:developer ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Company . ?uri dbpedia-owl:industry ?industry . ?industry rdfs:label ?label . FILTER (lang(?label) = 'en' && regex(?label, 'advertising')) . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { VALUES ?types { dbpedia:Q3918 dbpedia:Q875538 } dbpedia:Angela_Merkel dbpedia:almaMater ?uri . ?uri dbpedia:type ?types . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?type dbp:subclassOf dbp:TelevisionShow . ?uri dbp:starring dbr:Neil_Patrick_Harris . ?uri dbp:type ?type . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?film WHERE { ?film a dbpedia-owl:Film. ?film dbpedia-owl:starring <http://dbpedia.org/resource/Tom_Cruise>. }",
        "answers": [
            "http://dbpedia.org/resource/A_Few_Good_Men",
            "http://dbpedia.org/resource/All_the_Right_Moves_(film)",
            "http://dbpedia.org/resource/American_Made_(film)",
            "http://dbpedia.org/resource/Born_on_the_Fourth_of_July_(film)",
            "http://dbpedia.org/resource/Cocktail_(1988_film)",
            "http://dbpedia.org/resource/Collateral_(film)",
            "http://dbpedia.org/resource/Days_of_Thunder",
            "http://dbpedia.org/resource/Edge_of_Tomorrow",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Far_and_Away__Far_and_Away__1",
            "http://dbpedia.org/resource/Interview_with_the_Vampire_(film)",
            "http://dbpedia.org/resource/Jack_Reacher_(film)",
            "http://dbpedia.org/resource/Jack_Reacher:_Never_Go_Back",
            "http://dbpedia.org/resource/Jerry_Maguire__Jerry_Maguire__1",
            "http://dbpedia.org/resource/Knight_and_Day__Knight_and_Day__1",
            "http://dbpedia.org/resource/Legend_(1985_film)",
            "http://dbpedia.org/resource/Lions_for_Lambs",
            "http://dbpedia.org/resource/Losin'_It",
            "http://dbpedia.org/resource/Magnolia_(film)__Magnolia__1",
            "http://dbpedia.org/resource/Minority_Report_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_One",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_Two",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Fallout",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Ghost_Protocol",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Rogue_Nation",
            "http://dbpedia.org/resource/Mission:_Impossible_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_2",
            "http://dbpedia.org/resource/Mission:_Impossible_III",
            "http://dbpedia.org/resource/Oblivion_(2013_film)",
            "http://dbpedia.org/resource/Rain_Man",
            "http://dbpedia.org/resource/Risky_Business",
            "http://dbpedia.org/resource/Rock_of_Ages_(2012_film)",
            "http://dbpedia.org/resource/Taps_(film)",
            "http://dbpedia.org/resource/The_Color_of_Money",
            "http://dbpedia.org/resource/The_Firm_(1993_film)",
            "http://dbpedia.org/resource/The_Last_Samurai",
            "http://dbpedia.org/resource/The_Mummy_(2017_film)",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/Top_Gun:_Maverick",
            "http://dbpedia.org/resource/Top_Gun",
            "http://dbpedia.org/resource/Valkyrie_(film)",
            "http://dbpedia.org/resource/Vanilla_Sky",
            "http://dbpedia.org/resource/War_of_the_Worlds_(2005_film)"
        ]
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { ?entity dbpedia:locatedInArea ?location . ?location dbpedia:Country ?country . FILTER(?entity = <http://dbpedia.org/resource/Mount_Everest>) }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:John_F._Kennedy dbpedia:deathPlace ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Brooklyn_Bridge dbpedia:crosses ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n` tags:   PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:birthPlace <http://dbpedia.org/resource/Moscow> ; a dbo:Swimmer . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?s1 WHERE { ?s1 <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . ?s1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> . ?s1 <http://dbpedia.org/ontology/releaseYear> ?o1 . } order by DESC(?o1) limit 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbo:mountain ?elevation . ?res dbo:continent dbo:Asia . ?res dbo:parentCountry dbo:China . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:cairo dbpedia-owl:populationTotal ?val . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbpedia2: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia2:birthPlace dbpedia2:Heraklion }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?child) as ?c) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child . }",
        "answers": [
            "3"
        ]
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?elevation WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbpedia-owl:elevation ?elevation . }",
        "answers": [
            "44.8",
            "44.8056"
        ]
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n' and '",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia2:Claudia_Schiffer dbpedia:height ?val }",
        "answers": [
            "1.8"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:Holiday ?value . FILTER regex(?value, \"^http://dbpedia.org/entity/\", \"i\") }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Art_rock",
            "http://dbpedia.org/resource/Experimental_music",
            "http://dbpedia.org/resource/Glam_rock",
            "http://dbpedia.org/resource/Noise_rock",
            "http://dbpedia.org/resource/Proto-punk",
            "http://dbpedia.org/resource/Rock_music"
        ]
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?birthPlace WHERE { dbo:Frank_Sinatra dbo:birthPlace ?birthPlace . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbp:City dbp:populationTotal ?population . } ORDER BY ?population LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/ SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:TelevisionShow ?hasShow ; dbpedia-owl:creator ?hasCreator . ?hasCreator dbpedia-owl:subject <http://dbpedia.org/resource/Walt_Disney> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia2: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbpedia-owl:instanceOf dbpedia2:Sverige . ?uri dbpedia-owl:Holiday true . ?uri dbpedia-owl:country dbpedia2:Sverige . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?netIncome WHERE { <http://dbpedia.org/resource/Apple_Inc/> dbpedia-owl:netIncome ?netIncome . ?netIncome a <http://www.w3.org/2001/XMLSchema }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { dbpedia:Abraham_Lincoln dbp:deathPlace ?uri }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?capital WHERE { dbo:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Canada"
        ]
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { db:Michael_Jordan dbpedia:height ?val }",
        "answers": [
            "1.9812"
        ]
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:director <http://dbpedia.org/resource/Clint_Eastwood> ; db:starring <http://dbpedia.org/resource/Clint_Eastwood> . }",
        "answers": [
            "http://dbpedia.org/resource/A_Perfect_World",
            "http://dbpedia.org/resource/Absolute_Power_(film)",
            "http://dbpedia.org/resource/Blood_Work_(film)",
            "http://dbpedia.org/resource/Cry_Macho_(film)",
            "http://dbpedia.org/resource/Dirty_Harry_(film_series)",
            "http://dbpedia.org/resource/Firefox_(film)",
            "http://dbpedia.org/resource/Gran_Torino",
            "http://dbpedia.org/resource/Heartbreak_Ridge",
            "http://dbpedia.org/resource/High_Plains_Drifter",
            "http://dbpedia.org/resource/Honkytonk_Man",
            "http://dbpedia.org/resource/Million_Dollar_Baby__Million_Dollar_Baby__1",
            "http://dbpedia.org/resource/Pale_Rider",
            "http://dbpedia.org/resource/Play_Misty_for_Me",
            "http://dbpedia.org/resource/Space_Cowboys",
            "http://dbpedia.org/resource/Sudden_Impact",
            "http://dbpedia.org/resource/The_Bridges_of_Madison_County_(film)",
            "http://dbpedia.org/resource/The_Eiger_Sanction_(film)",
            "http://dbpedia.org/resource/The_Mule_(2018_film)",
            "http://dbpedia.org/resource/The_Outlaw_Josey_Wales__The_Outlaw_Josey_Wales__1",
            "http://dbpedia.org/resource/The_Rookie_(1990_film)",
            "http://dbpedia.org/resource/True_Crime_(1999_film)",
            "http://dbpedia.org/resource/Unforgiven",
            "http://dbpedia.org/resource/White_Hunter_Black_Heart"
        ]
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { ?country db:currency <http://dbpedia.org/resource/West_African_CFA_franc>. }",
        "answers": [
            "http://dbpedia.org/resource/Benin",
            "http://dbpedia.org/resource/Burkina_Faso",
            "http://dbpedia.org/resource/Colonial_Mauritania",
            "http://dbpedia.org/resource/Colony_of_Niger",
            "http://dbpedia.org/resource/Economic_Community_of_West_African_States",
            "http://dbpedia.org/resource/French_Dahomey",
            "http://dbpedia.org/resource/French_Togoland",
            "http://dbpedia.org/resource/Guinea-Bissau",
            "http://dbpedia.org/resource/History_of_Togo",
            "http://dbpedia.org/resource/Ivory_Coast",
            "http://dbpedia.org/resource/Mali",
            "http://dbpedia.org/resource/Niger",
            "http://dbpedia.org/resource/People's_Republic_of_Benin",
            "http://dbpedia.org/resource/Republic_of_Dahomey",
            "http://dbpedia.org/resource/Republic_of_Upper_Volta",
            "http://dbpedia.org/resource/Senegal",
            "http://dbpedia.org/resource/Senegambia_Confederation",
            "http://dbpedia.org/resource/Togo"
        ]
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { db:Iraq dbpedia:populationTotal ?val . }",
        "answers": [
            "40462701"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?type dbp:Holiday* <http://dbpedia.org/resource/Holiday> . ?uri dbp:subclassOf ?type . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia:PoliticalParty ; dbpedia:country db:Greece ; dbpedia:ideology db:Pro-Europeanism . }",
        "answers": [
            "http://dbpedia.org/resource/Democratic_Alignment_(2015)",
            "http://dbpedia.org/resource/Movement_of_Democratic_Socialists",
            "http://dbpedia.org/resource/Movement_of_Free_Citizens_(Greece)",
            "http://dbpedia.org/resource/PASOK_\u2013_Movement_for_Change",
            "http://dbpedia.org/resource/PASOK",
            "http://dbpedia.org/resource/Radical_Movement_of_Social_Democratic_Alliance"
        ]
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { ?movie dbo:starring ?actor . ?actor dbo:birthDate ?date . ?movie rdfs:seeAlso <http://dbpedia.org/resource/Charmed> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?movement WHERE { dbpedia:The_Three_Dancers dbpedia-ontology:movement ?movement . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Actor> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace>/<http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/architect> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/John_Augustus_Roebling"
        ]
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:composer ?composer . }",
        "answers": [
            "http://dbpedia.org/resource/Ramin_Djawadi"
        ]
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbp:Film . ?uri dbp:director db:Francis_Ford_Coppola . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?name WHERE { <http://dbpedia.org/resource/Adele> <http://dbpedia.org/ontology/birthName> ?name . }",
        "answers": [
            "Adele Laurie Blue Adkins"
        ]
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/classOf> <http://dbpedia.org/ontology/Album> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . } ORDER BY ?date LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Czech_koruna"
        ]
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbp:birthPlace dbo:Vienna . UNION ?uri dbo:deathPlace dbo:Berlin . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbp:Bridge ; dbp:crosses dbr:Seine . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:occupation \"Musician\"@en . ?uri db:author ?x . ?y db:Book ?y . FILTER (?x = ?uri) } GROUP BY ?uri ORDER BY DESC(COUNT(?y)) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . ?uri <http://dbpedia.org/ontology/TelevisionShow> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n' and '",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?discoverer WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?discoverer . }",
        "answers": [
            "http://dbpedia.org/resource/Giuseppe_Piazzi"
        ]
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res dbp:occupation db:BandLeader. ?res dbp:instrument db:Trumpet. }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n` and `",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . }",
        "answers": [
            "http://dbpedia.org/resource/Pretty_Woman",
            "http://dbpedia.org/resource/Runaway_Bride_(film)"
        ]
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Ottawa"
        ]
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:SoccerPlayer ; dbpedia-owl:birthPlace ?birthPlace . ?birthPlace dbpedia-owl:country ?malta . ?malta rdfs:label \"Malta\"@en . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri}",
        "answers": [
            "http://dbpedia.org/resource/Yaound\u00e9"
        ]
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub dbpedia-owl:subsetOf* dbpedia:ProgrammingLanguage . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Astronaut> [] . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri}",
        "answers": [
            "http://dbpedia.org/resource/Seth_MacFarlane"
        ]
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbpedia-ontology:populationTotal ?population . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?creator WHERE { dbpedia:Batman dbpedia:creator ?creator }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/capital> ?uri . ?uri <http://dbpedia.org/ontology/populationTotal> ?number . }",
        "answers": [
            "453558"
        ]
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbpedia-owl:areaTotal ?val . }",
        "answers": [
            "34084130000"
        ]
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?numberOfEmployees WHERE { dbpedia:IBM dbpedia-owl:numberOfEmployees ?numberOfEmployees . }",
        "answers": [
            "282100"
        ]
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?budget WHERE { <http://dbpedia.org/resource/Pulp_Fiction> dbpedia-owl:budget ?budget . }",
        "answers": [
            "8.0"
        ]
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?movie WHERE { ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . ?movie <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?film dbpedia-owl:country <http://dbpedia.org/resource/Denmark> ; a dbpedia-owl:Film . BIND(URI(CONCAT(str(?film), \"?\")) AS ?uri) }",
        "answers": [
            "http://dbpedia.org/resource/A_Summer_Tale?",
            "http://dbpedia.org/resource/Afghan_Muscles?",
            "http://dbpedia.org/resource/After_the_Wedding_(2006_film)?",
            "http://dbpedia.org/resource/Ai_Weiwei:_The_Fake_Case?",
            "http://dbpedia.org/resource/Another_Round_(film)?",
            "http://dbpedia.org/resource/Antichrist_(film)__Antichrist__1?",
            "http://dbpedia.org/resource/Arn:_The_Knight_Templar?",
            "http://dbpedia.org/resource/Bag_K\u00f8benhavns_kulisser?",
            "http://dbpedia.org/resource/Barefoot_(2017_film)?",
            "http://dbpedia.org/resource/Benny's_Bathtub?",
            "http://dbpedia.org/resource/Bionicle:_Mask_of_Light?",
            "http://dbpedia.org/resource/Bornholms_stemme?",
            "http://dbpedia.org/resource/Breaking_the_Waves?",
            "http://dbpedia.org/resource/Busters_verden?",
            "http://dbpedia.org/resource/Constance_(film)?",
            "http://dbpedia.org/resource/Crying_for_Love?",
            "http://dbpedia.org/resource/De_besejrede_Pebersvende?",
            "http://dbpedia.org/resource/De_Udstillede?",
            "http://dbpedia.org/resource/Den_farlige_alder?",
            "http://dbpedia.org/resource/Den_kul\u00f8rte_Slavehandler?",
            "http://dbpedia.org/resource/Der_var_engang_en_vicev\u00e6rt?",
            "http://dbpedia.org/resource/Ditte,_Child_of_Man?",
            "http://dbpedia.org/resource/Domino_(2019_film)?",
            "http://dbpedia.org/resource/Don_Olsen_kommer_til_byen?",
            "http://dbpedia.org/resource/Driving_with_Greenland_Dogs?",
            "http://dbpedia.org/resource/Echo_(2007_film)?",
            "http://dbpedia.org/resource/Eddy_Merckx_in_the_Vicinity_of_a_Cup_of_Coffee?",
            "http://dbpedia.org/resource/Eksperimentet?",
            "http://dbpedia.org/resource/En_slem_Dreng?",
            "http://dbpedia.org/resource/Eye_of_the_Eagle_(1997_film)?",
            "http://dbpedia.org/resource/Familien_Pille_som_Spejdere?",
            "http://dbpedia.org/resource/Family_Matters_(film)?",
            "http://dbpedia.org/resource/Farlig_Ungdom?",
            "http://dbpedia.org/resource/Fidibus?",
            "http://dbpedia.org/resource/Five_Get_into_Trouble_(film)?",
            "http://dbpedia.org/resource/Flee_(film)?",
            "http://dbpedia.org/resource/Flickering_Lights?",
            "http://dbpedia.org/resource/Fr\u00e6kke_Frida_og_de_frygtl\u00f8se_spioner?",
            "http://dbpedia.org/resource/Frk._M\u00f8llers_jubil\u00e6um?",
            "http://dbpedia.org/resource/Frode_og_alle_de_andre_r\u00f8dder__Frode_og_alle_de_andre_r\u00f8dder__1?",
            "http://dbpedia.org/resource/Gasolin'_(film)?",
            "http://dbpedia.org/resource/Ghost_Train_International?",
            "http://dbpedia.org/resource/Giv_Gud_en_chance_om_s\u00f8ndagen?",
            "http://dbpedia.org/resource/Goutte_d'Or_(film)?",
            "http://dbpedia.org/resource/Help!_I'm_a_Fish?",
            "http://dbpedia.org/resource/Herberg_for_Hjeml\u00f8se?",
            "http://dbpedia.org/resource/His_New_Grey_Trousers?",
            "http://dbpedia.org/resource/H\u00f8jt_paa_en_kvist?",
            "http://dbpedia.org/resource/Holes_in_the_Soup?",
            "http://dbpedia.org/resource/Human_Remains_(film)?",
            "http://dbpedia.org/resource/Ik\u00edngut?",
            "http://dbpedia.org/resource/Jag_\u00e4r_din_krigare?",
            "http://dbpedia.org/resource/Jeg_har_elsket_og_levet?",
            "http://dbpedia.org/resource/Journey_to_Saturn?",
            "http://dbpedia.org/resource/K\u00e6rlighed_og_Mobilisering?",
            "http://dbpedia.org/resource/Karla's_World?",
            "http://dbpedia.org/resource/Khartoum_Offside?",
            "http://dbpedia.org/resource/Kira's_Reason:_A_Love_Story?",
            "http://dbpedia.org/resource/Klown_Forever?",
            "http://dbpedia.org/resource/K\u00f8benhavn,_Kalundborg_og_-_%3F?",
            "http://dbpedia.org/resource/Koko-di_Koko-da?",
            "http://dbpedia.org/resource/Kun_en_Tigger?",
            "http://dbpedia.org/resource/Little_Brother,_Big_Trouble:_A_Christmas_Adventure?",
            "http://dbpedia.org/resource/L\u00f8vejagten?",
            "http://dbpedia.org/resource/Manslaughter_(2005_film)?",
            "http://dbpedia.org/resource/Margrete:_Queen_of_the_North?",
            "http://dbpedia.org/resource/Matador_(Danish_TV_series)?",
            "http://dbpedia.org/resource/Melody_of_Murder?",
            "http://dbpedia.org/resource/Minor_Mishaps?",
            "http://dbpedia.org/resource/Monas_verden?",
            "http://dbpedia.org/resource/Murderous_Trance?",
            "http://dbpedia.org/resource/Murk_(film)?",
            "http://dbpedia.org/resource/Nation_Estate?",
            "http://dbpedia.org/resource/Next_Stop_Paradise_(1980_film)?",
            "http://dbpedia.org/resource/N\u00f8ddebo_Pr\u00e6steg\u00e5rd_(1934_film)?",
            "http://dbpedia.org/resource/N\u00f8ddebo_Pr\u00e6steg\u00e5rd_(1974_film)?",
            "http://dbpedia.org/resource/Nordhavets_m\u00e6nd?",
            "http://dbpedia.org/resource/Nynne?",
            "http://dbpedia.org/resource/O'_Horten?",
            "http://dbpedia.org/resource/Pelle_the_Conqueror?",
            "http://dbpedia.org/resource/Pervert_Park?",
            "http://dbpedia.org/resource/Princess_(2006_film)?",
            "http://dbpedia.org/resource/Pusher_(film_series)?",
            "http://dbpedia.org/resource/Regel_nr._1?",
            "http://dbpedia.org/resource/Reptilicus?",
            "http://dbpedia.org/resource/Return_to_Sender_(2004_film)?",
            "http://dbpedia.org/resource/Samson_&_Sally?",
            "http://dbpedia.org/resource/Sekstet?",
            "http://dbpedia.org/resource/Smiling_in_a_War_Zone?",
            "http://dbpedia.org/resource/Something_Better_to_Come?",
            "http://dbpedia.org/resource/Songs_from_the_Second_Floor?",
            "http://dbpedia.org/resource/Sons_of_the_Soil?",
            "http://dbpedia.org/resource/Speed_Sisters?",
            "http://dbpedia.org/resource/Speed_Walking?",
            "http://dbpedia.org/resource/Stealing_Rembrandt?",
            "http://dbpedia.org/resource/Stjerneskud?",
            "http://dbpedia.org/resource/Stolen_Spring_(film)?",
            "http://dbpedia.org/resource/Storm_(2009_film)?",
            "http://dbpedia.org/resource/Str\u00f8mer?",
            "http://dbpedia.org/resource/Sun_over_Denmark?",
            "http://dbpedia.org/resource/Sunes_familie?",
            "http://dbpedia.org/resource/Supervoksen?",
            "http://dbpedia.org/resource/Susanne_(1950_film)?",
            "http://dbpedia.org/resource/Teddy_Bear_(2012_film)?",
            "http://dbpedia.org/resource/Terribly_Happy?",
            "http://dbpedia.org/resource/That's_Me,_Too?",
            "http://dbpedia.org/resource/The_Crimson_Circle_(1960_film)?",
            "http://dbpedia.org/resource/The_Forbidden_Team?",
            "http://dbpedia.org/resource/The_House_of_the_Spirits_(film)?",
            "http://dbpedia.org/resource/The_Inheritance_(2003_film)?",
            "http://dbpedia.org/resource/The_King's_Choice?",
            "http://dbpedia.org/resource/The_Lego_Ninjago_Movie?",
            "http://dbpedia.org/resource/The_Mahabharata_(1989_film)?",
            "http://dbpedia.org/resource/The_Monastery:_Mr._Vig_and_the_Nun?",
            "http://dbpedia.org/resource/The_Perfect_Human?",
            "http://dbpedia.org/resource/The_Red_Meadows?",
            "http://dbpedia.org/resource/The_Thralls?",
            "http://dbpedia.org/resource/The_Viking_Watch_of_the_Danish_Seaman?",
            "http://dbpedia.org/resource/The_White_Slave_Trade?",
            "http://dbpedia.org/resource/Those_Blasted_Kids?",
            "http://dbpedia.org/resource/Torremolinos_73?",
            "http://dbpedia.org/resource/Valhalla_(1986_film)?",
            "http://dbpedia.org/resource/Vildledt_Elskov?",
            "http://dbpedia.org/resource/We_Meet_at_Tove's?",
            "http://dbpedia.org/resource/Webmaster_(film)?",
            "http://dbpedia.org/resource/What_No_One_Knows?",
            "http://dbpedia.org/resource/You_Are_Not_Alone_(film)?"
        ]
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { db:Himalayas dbpedia-owl:country ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/India",
            "http://dbpedia.org/resource/Kashmir"
        ]
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n' and '",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { <http://dbpedia.org/resource/Angela_Merkel> dbpedia-owl:almaMater ?res . ?res rdf:type dbpedia-owl:University . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Bob_Ogle",
            "http://dbpedia.org/resource/Paul_Murry"
        ]
    }
]