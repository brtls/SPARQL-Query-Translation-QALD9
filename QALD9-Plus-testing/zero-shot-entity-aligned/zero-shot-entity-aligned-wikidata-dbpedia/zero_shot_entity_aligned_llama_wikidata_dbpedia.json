[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>. FILTER (?uri != <http://dbpedia.org/resource/Stanley_Kubrick>) }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbpedia2: <http://dbpedia.org/ontology/> SELECT DISTINCT ?musical WHERE { ?musical dbpedia2:Musical . ?musical dbpedia2:musicBy <http://dbpedia.org/resource/Elton_John> . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { dbpedia:Skype dbpedia:developer ?uri . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:SoccerClub dbpedia:Bundesliga . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor WHERE { ?movie dbpedia:director <http://dbpedia.org/resource/William_Shatner> ; dbpedia:starring ?actor . }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/starring> dbpedia:Leonardo_DiCaprio . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date . }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "SELECT ?movie WHERE { ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT DISTINCT ?developer WHERE { dbpedia2:Minecraft dbpedia:developer ?developer . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?label WHERE { dbr:Elvis_Presley dbo:album ?uri . ?uri dbo:releaseDate ?date . ?uri dbo:recordLabel ?label . } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Toy_Story dbpedia-ontology:runtime ?val . }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ontology:occupation dbpedia-resource:Bandleader ; dbpedia-ontology:instrument dbpedia-resource:Trumpet . }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/resource/> PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?year WHERE { dbp:Rachel_Stevens db:birthYear ?date . BIND(YEAR(?date) as ?year) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?cause (COUNT(DISTINCT ?s) AS ?count) WHERE { ?s dbpedia-owl:deathCause ?cause . } GROUP BY ?cause ORDER BY DESC(?count) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?height WHERE { <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbpedia-owl:height ?height . }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia:Mountain ; dbpedia:locatedInArea dbpedia:Italy ; dbpedia:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/property/> SELECT ?company WHERE { dbpedia2:Donald_Trump dbo:owner ?company . }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?o1 WHERE { db:Tom_Cruise db:spouse ?o1 . }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Eurasia> dbpedia-owl:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?author WHERE { <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbpedia-ontology:author ?author . }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/John_Adams> dbpedia-owl:birthDate ?val }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?population WHERE { dbpedia:European_Union dbpedia-owl:populationTotal ?population . FILTER isLiteral(?population) }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Shakespeare> dbpedia-owl:deathDate ?uri . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbp:Rocket | rdfs:label ?launchSiteLabel . FILTER (regex(?launchSiteLabel, \"Baikonur\", \"i\")). ?uri dbp:launchSite ?launchSite . ?launchSite rdfs:label ?launchSiteLabel . FILTER (?launchSiteLabel = ?launchSiteLabel). }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { dbpedia-owl:World_of_Warcraft dbpedia-owl:developer ?developer . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Company dbo:industry dbo:Advertising . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { VALUES ?types { dbpedia-owl:almaMater } <http://dbpedia.org/resource/Angela_Merkel> dbpedia-owl:almaMater ?uri . ?uri a ?types . }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX owl: <http://www.w3.org/2002/07/owl/> SELECT ?uri WHERE { ?type owl:sameAs <http://www.wikidata.org/entity/Q15416> . ?uri owl:sameAs ?uriWD . ?uriWD wdt:P161 <http://www.wikidata.org/entity/Q485310> . ?type dbpedia-owl:type dbpedia-owl:TelevisionShow . ?uri rdf:type ?type . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film dbpedia:starring <http://dbpedia.org/resource/Tom_Cruise>. FILTER(STRSTARTS(str(?film), \"http://dbpedia.org/resource/\")) }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?country WHERE { dbpedia:Mount_Everest dbpedia-owl:locatedInArea ?country . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/#> SELECT ?deathPlace WHERE { ?s dbpedia-owl:deathPlace ?deathPlace . ?deathPlace dbpedia-owl:resource <http://dbpedia.org/resource/John_F._Kennedy> . ?deathPlace rdfs:label ?deathPlaceLabel . FILTER regex(?deathPlaceLabel, \"Texas\", \"i\") . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri . }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Swimmer true . ?uri dbpedia-owl:birthPlace ?birthPlace . FILTER (strstarts(str(?birthPlace), \"http://dbpedia.org/resource/Moscow\")) }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dcterms: <http://purl.org/dc/terms/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?s1 WHERE { ?s1 dcterms:subject dbpedia:Alec_Guinness . ?s1 foaf:maker dbpedia:Alec_Guinness . ?s1 dcterms:issued ?o1 . } order by DESC(?o1) limit 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res db:Mountain/db:height ?elevation . ?res db:country db:adminstrativeRegion db:Q2 . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbr:Cairo dbo:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri db:birthPlace <http://www.wikidata.org/entity/Q160544> . }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { dbpedia:Benjamin_Franklin dbpedia:child ?uri . }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?elevation WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbo:elevation ?elevation . OPTIONAL { ?elevation dbo:unitOfMeasurement ?unit . } }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?country WHERE { dbpedia:Mecca dbpedia:country ?country }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbo: Claudia_Schiffer dbo:height ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbpediaowl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpediaowl:Holiday ?value . }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "SELECT DISTINCT ?birthPlace WHERE { <http://dbpedia.org/resource/Frank_Sinatra> <http://dbpedia.org/ontology/birthPlace> ?birthPlace . }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:city ?city ; dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:TelevisionShow dbpedia:creator <http://dbpedia.org/resource/Walt_Disney> . }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Holiday> ?holiday; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden>. }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ont: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { dbpedia:Apple_Inc. dbpedia-ont:netIncome ?uri . }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia2:Abraham_Lincoln dbpedia:deathPlace ?uri }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?capital WHERE { <http://dbpedia.org/resource/Himalayas> dbpedia-owl:country ?country . ?country dbpedia-owl:capital ?capital . }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbpedia2: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia2:Michael_Jordan dbpedia2:height ?val . }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?film dbpedia-owl:directedBy <http://dbpedia.org/resource/Clint_Eastwood> . ?film dbpedia-owl:starring ?actor . FILTER(?film = <http://dbpedia.org/resource/Clint_Eastwood>) }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?subject WHERE { ?subject rdfs:subclassOf* dbpedia-owl:Country; dbpedia-owl:currency <http://dbpedia.org/resource/West_African_CFA_franc> }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Iraq dbpedia-owl:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?type owl:subClassOf* dbpedia:Holiday . ?uri dbpedia:P31 ?type . }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:PoliticalParty ?party ; dbpedia-owl:country dbpedia-resource:Greece . FILTER EXISTS { ?uri dbpedia-owl:ideology ?ideology } }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT DISTINCT ?movement WHERE { dbp:author ?author. ?author dbp:movement ?movement. ?resource dbpedia.org/resource/The_Three_Dancers ?author. }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "SELECT DISTINCT ?actor WHERE { ?actor <http://dbpedia.org/ontology/ontology_type> <http://dbpedia.org/ontology/Actor> . ?actor <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?designer WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:architect ?designer . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "SELECT DISTINCT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?composer . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film a dbo:Film ; dbo:director ?director . ?director dbo:subject <http://dbpedia.org/resource/Francis_Ford_Coppola> . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbpedia:adele dbpedia-owl:birthName ?name }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?album ?date WHERE { ?album a dbo:Album . ?album dbo:artist <http://dbpedia.org/resource/Queen_(band)> . ?album dbo:releaseDate ?date . GROUP BY ?album ?date HAVING (COUNT(?album) = 1) FILTER (?date < 1970-01-01) } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { { ?uri db:birthPlace db:Vienna . { SELECT ?uri WHERE { ?uri db:deathPlace db:Berlin . }} } UNION { ?uri db:deathPlace db:Berlin . { SELECT ?uri WHERE { ?uri db:birthPlace db:Vienna . }} } UNION { ?uri db:birthPlace db:Vienna . { SELECT ?uri WHERE { ?uri db:deathPlace db:Berlin . }} } }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Bridge [ dbpedia-owl:crosses ?s ; dbpedia-owl:crosses http://dbpedia.org/resource/Seine ] . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ontology:occupation dbpedia-ontology:Musician ; dbpedia-ontology:author ?book . FILTER NOT EXISTS { ?uri dbpedia-ontology:occupation ?other . FILTER NOT EXISTS { ?other dbpedia-ontology:author ?uri } } . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?book)) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbp:Writer []. ?uri dbp:award ?award. ?award wikibase:reference <http://www.wikidata.org/entity/Q37922>. }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "SELECT DISTINCT ?discoverer WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?discoverer . }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX <http://dbpedia.org/ontology/> <http://dbpedia.org/ontology/> PREFIX <http://dbpedia.org/resource/> <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> . ?res <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> . }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/BasketballPlayer> . ?uri <http://dbpedia.org/ontology/height> ?height . FILTER(?height > 200) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Film . ?uri dbpedia-owl:starring dbpedia-resource:Julia_Roberts . ?uri dbpedia-owl:starring dbpedia-resource:Richard_Gere . FILTER(BOUND(?uri)) }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:SoccerPlayer ?birthPlace . ?birthPlace dbpedia-owl:birthPlace <http://dbpedia.org/resource/Malta> . }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbpedia-owl:ProgrammingLanguage . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Astronaut ?astronaut . { ?uri dbo:nationality <http://dbpedia.org/resource/Russia> . } UNION { ?uri dbo:nationality <http://dbpedia.org/resource/United_States> . } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Seth_MacFarlane> . }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbpedia-ont: <http://dbpedia.org/ontology/> SELECT ?creator WHERE { dbpedia-ont:Batman dbpedia-ont:creator ?creator . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?number WHERE { dbpedia-owl:capital wikidata:P36 ?capital . ?capital dbpedia-owl:populationTotal ?number . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbpedia-owl:areaTotal ?val . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?numberOfEmployees WHERE { db:IBM dbo:numberOfEmployees ?numberOfEmployees . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?budget WHERE { dbpedia:Movie <http://dbpedia.org/resource/Pulp_Fiction> . ?movie dbpedia-owl:budget ?budget . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film_uri WHERE { ?film_uri dbpedia:starring ?actor_uri . ?actor_uri dbpedia:actor ?jesse_eisenberg_uri . ?jesse_eisenberg_uri dbpedia:actorName \"Jesse Eisenberg\" . ?film_uri a dbpedia:Film . }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:country http://dbpedia.org/resource/Denmark . ?uri dbpedia:type dbpedia:Film . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?country WHERE { dbpedia:Country ?uri . dbpedia-owl:Himalayas dbpedia-owl:country ?uri . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/class/Country> <http://dbpedia.org/ontology/class/SubclassOf> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/ontology/areaTotal> ?area . FILTER(regex(str(?uri), \"/entity/Q6256\") || regex(str(?uri), \"/dbpedia.org/resource/\")) } ORDER BY DESC(?area) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { dbpedia:Angela_Merkel dbpedia-owl:almaMater ?res . ?res a dbpedia-owl:Organization . }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX dbpedia-ns: <http://dbpedia.org/ontology/> SELECT ?creator WHERE { dbpedia-ns:Goofy <http://dbpedia.org/ontology/creator> ?creator . }"
    }
]