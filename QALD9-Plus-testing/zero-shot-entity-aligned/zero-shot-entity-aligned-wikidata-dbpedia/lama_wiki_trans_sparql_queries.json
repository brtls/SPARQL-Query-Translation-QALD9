[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> dbpedia:founder ?o1 . }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?work WHERE { ?work dbpedia-ontology:director <http://dbpedia.org/resource/Stanley_Kubrick> . FILTER lang(?work) = 'en' }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Musical ?class ; dbpedia:musicBy <http://dbpedia.org/resource/Elton_John> . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Skype> dbpedia-owl:developer ?uri . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:SoccerClub dbpedia-owl:league <http://dbpedia.org/resource/Bundesliga> . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?movie db:director <http://dbpedia.org/resource/William_Shatner> ; db:starring ?uri . }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Mountain ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?film) AS ?c) WHERE { ?film dbo:starring <http://dbpedia.org/resource/Leonardo_DiCaprio> . ?film a dbo:Film . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbpedia-owl:deathDate ?date . }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Film . ?uri dbo:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri dbo:starring <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { <http://dbpedia.org/resource/Minecraft> dbpedia-owl:developer <http://dbpedia.org/ontology/developer> . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> dbpedia-owl:budget ?val . }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "prefix dbpedia-ontology: <http://dbpedia.org/ontology/>` `prefix dbpedia: <http://dbpedia.org/resource/>` `prefix dbpedia-owl: <http://dbpedia.org/ontology/>` `SELECT ?label ?releaseDate WHERE {` ` ?album a dbpedia-ontology:Album .` ` ?album dbpedia-ontology:releaseDate ?releaseDate .` ` ?album dbpedia-ontology:recordLabel ?label .` ` ?artist a dbpedia-owl:Artist .` ` ?artist dbpedia-owl:recordLabel ?album .` ` ?artist dbpedia:Elvis_Presley .` ` FILTER (?releaseDate = (MIN(?releaseDate)) )` ` FILTER (?artist = dbpedia:Elvis_Presley)` ` BIND(?label AS ?firstAlbum)` `}"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbp:Toy_Story dbp:runtime ?val }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbo:Bandleader ?bandleader . ?uri dbo:instrument dbo:Trumpet . ?bandleader rdfs:label ?label . FILTER (regex(?label, \"trumpet\", \"i\")) }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film a dbpedia-owl:Film . ?film foaf:starring <http://dbpedia.org/resource/Julia_Roberts> . ?film foaf:madeBy <http://dbpedia.org/resource/Garry_Marshall> . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?birthYear WHERE { dbpedia:Rachel_Stevens db:birthYear ?birthYear . ?s wdt:P569 ?date . BIND(YEAR(?date) AS ?birthYear) FILTER(?s = wd:Q241665) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri (COUNT(DISTINCT ?s) AS ?count) WHERE { ?s dbpedia-owl:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(?count) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?num WHERE { dbpedia:Yokohama_Marine_Tower dbpedia-ontology:height ?num . }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Mountain ; dbpedia-owl:locatedInArea dbpedia:Italy ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a db:Business . dbp:Donald_Trump db:owner ?uri }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?o1 WHERE { dbpedia-owl:Tom_Cruise dbpedia-owl:spouse ?o1 . }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Eurasia dbpedia-ontology:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?author WHERE { ?book dbpedia-owl:author ?author . ?book dbpedia: <http://dbpedia.org/resource/The_Interpretation_of_Dreams> . }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { ?s dbo:birthDate ?val . }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Union> dbo:populationTotal ?uri . }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Shakespeare> dbpedia-owl:deathDate ?uri . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Rocket . ?rocket dbo:launchSite <http://dbpedia.org/resource/Baikonur_Cosmodrome> . }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:Island ?country . ?country db:country dbr:Japan . }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { dbpedia:World_of_Warcraft dbo:developer ?developer . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbpedia2: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia2:Company dbpedia2:industry <http://dbpedia.org/resource/Advertising> . FILTER regex(str(?uri), \"http://dbpedia.org/resource\") . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { VALUES ?types { db:University db:University } db:Angela_Merkel db:almaMater* ?uri . ?uri rdf:type ?types . }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?type dbpedia-owl:subclassOf dbpedia-owl:TelevisionShow . ?uri dbpedia-owl:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . ?uri dbpedia-owl:type ?type . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> . }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "SELECT ?country WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/locatedInArea> ?country . ?country <http://dbpedia.org/ontology/Country> ?value . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:John_F._Kennedy dbo:deathPlace ?uri . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri . }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:birthPlace <http://dbpedia.org/resource/Moscow> . FILTER (isLiteral(?uri) || ?uri a dbpedia-owl:Swimmer) }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> WITH <http://dbpedia.org> BIND(MAX((?s1|dbpedia:releaseDate)^xsd:dateTime) AS ?maxDate) SELECT DISTINCT ?s1 WHERE { ?s1 dbpedia:Film . ?s1 dbpedia:starring <http://dbpedia.org/resource/Alec_Guinness> . ?s1 dbpedia:releaseDate ?o1 . FILTER (?o1 = ?maxDate) } ORDER BY DESC(?maxDate) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbpedia-owl:type dbpedia-owl:Mountain . ?res dbpedia-owl:elevation ?elevation . ?res dbpedia-owl:continent dbpedia-owl:Continent . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Cairo dbo:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:birthPlace <http://dbpedia.org/resource/Heraklion> . }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { db:Benjamin_Franklin dbpedia:child ?uri . }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?elevation WHERE { dbpedia: D\u00fcsseldorf_Airport dbpedia-owl:elevation ?elevation . }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?res WHERE { dbpedia:Mecca dbpedia-owl:country ?res . }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> <http://dbpedia.org/ontology/height> ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:HOLIDAY ?property . }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> dbpedia-owl:genre ?uri . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Frank_Sinatra dbpedia-owl:birthPlace ?uri }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia:City ?population . ?c dbpedia:City ?pc . FILTER(?population < ?pc) } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/resource/> PREFIX dbr: <http://dbpedia.org/page/> SELECT DISTINCT ?uri WHERE { ?uri db:TelevisionShow ?creator . ?creator dbo:creator dbr:Walt_Disney . }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?holiday WHERE { ?holiday a dbo:Holiday. ?holiday dbo:country <http://dbpedia.org/ontology/country/Sweden>. }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "SELECT ?uri WHERE { dbpedia:Apple_Inc. dbpedia:netIncome ?uri . }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?uri }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia-resource:Himalayas dbpedia-owl:country ?country . ?country dbpedia-owl:capital ?uri . }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?country . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:director <http://dbpedia.org/resource/Clint_Eastwood> ; dbo:starring <http://dbpedia.org/resource/Clint_Eastwood> . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> . }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Iraq dbpedia-ontology:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?type dbo:subClassOf* dbo:Holiday . ?uri rdf:type ?type . }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/#> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:PoliticalParty true ; dbpedia-owl:country dbpedia-resource:Greece ; dbpedia-owl:ideology dbpedia-resource:Pro-Europeanism . }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?date WHERE { ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Charmed> . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:The_Three_Dancers db:author ?author . ?author db:movement ?uri . }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "SELECT DISTINCT ?actor WHERE { ?actor a <http://dbpedia.org/ontology/Actor> . ?actor <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?architect WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> ^ <http://dbpedia.org/ontology/architect> ?architect . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Film ?film. ?film dbpedia-owl:director ?director. ?director dbpedia-owl:director <http://dbpedia.org/resource/Francis_Ford_Coppola>. }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?name WHERE { dbpedia:Adele dbpedia:birthName ?name. }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/class/Wikidata/Q482994> <http://dbpedia.org/ontology/Album> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER(?uri <http://dbpedia.org/ontology/isFirstAlbum> \"true\") } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbo:birthPlace dbo:cityOfBirth http://dbpedia.org/resource/Vienna . ?uri dbo:deathPlace dbo:cityOfDeath http://dbpedia.org/resource/Berlin . }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/#> SELECT ?uri WHERE { ?uri dbpedia-owl:Bridge ; dbpedia-owl:crosses <http://dbpedia.org/resource/Seine> . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:occupation db:Musician . ?x rdf:type db:Book ; db:author ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/TelevisionShow> . { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . } UNION { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . } }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbpedia-owl:Writer . ?uri dbo:award dbo:Nobel_Prize_in_Literature . }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "SELECT DISTINCT ?discoverer WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?discoverer . }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbo:occupation <http://dbpedia.org/resource/Bandleader> . ?res dbo:instrument <http://dbpedia.org/resource/Trumpet> . }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri dbpedia:BasketballPlayer . ?uri dbpedia:height ?height . FILTER(?height > 200) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . FILTER(BIND((COUNT(DISTINCT ?starring) = 2), ?flag) AS ?flag) }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?capital WHERE { dbpedia:Canada dbo:capital ?capital. }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:SoccerPlayer dbo:birthPlace ?birthPlace . ?birthPlace dbo:country ?country . FILTER (strstarts(str(?country), \"http://dbpedia.org/resource/Malta\")) }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> dbpedia-owl:capital ?uri }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbpedia-owl:ProgrammingLanguage . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Astronaut> . OPTIONAL { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> . } OPTIONAL { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> . } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?creator WHERE { dbpedia:Family_Guy wdt:P170 ?creator. }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?population WHERE { wd:Q1489 dbpedia-owl:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?creator WHERE { dbpedia-owl:Batman dbpedia-owl:creator ?creator . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { ?capital a <http://dbpedia.org/ontology/Place> ; dbpedia-owl:country <http://dbpedia.org/resource/Australia> ; dbpedia-owl:populationTotal ?number . FILTER (?capital = <http://dbpedia.org/resource/Canberra>) }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbpedia-owl:areaTotal ?val . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?employees WHERE { db:IBM db:numberOfEmployees ?employees . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?value WHERE { ?dbpedia <http://dbpedia.org/ontology/budget> ?value . ?dbpedia wikidata:P2130 <http://www.wikidata.org/entity/Q104123> . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . ?film rdf:type <http://dbpedia.org/ontology/Film> . BIND(URI(CONCAT(\"http://dbpedia.org/resource/\", ?film)) AS ?uri) }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film dbo:country <http://dbpedia.org/resource/Denmark> . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Himalayas> dbpedia-owl:country ?country . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?country_uri WHERE { ?country_uri dbpedia-owl:country ?country . ?country dbpedia-owl:areaTotal ?area . ?max_country dbpedia-owl:areaTotal ?max_area . FILTER (?country IN (SELECT ?country FROM { ?country dbpedia-owl:areaTotal ?area } ORDER BY DESC(?area) LIMIT 1) AND ?area = ?max_area) OPTIONAL { ?country dbpedia-owl:name ?name } }"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?almaMater WHERE { <http://dbpedia.org/resource/Angela_Merkel> dbo:almaMater ?almaMater . ?almaMater rdf:type dbo:University . }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . }"
    }
]