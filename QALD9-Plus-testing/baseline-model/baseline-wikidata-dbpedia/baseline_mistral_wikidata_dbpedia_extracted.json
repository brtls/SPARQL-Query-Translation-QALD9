[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?founder WHERE {   dbr:Penguin_Books dbp:founder ?founder. }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query_kg2": "SELECT ?film WHERE {   ?film dbo:director dbr:Stanley_Kubrick. }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?musical ?musicalLabel WHERE {   ?musical dbo:musicComposer dbr:Elton_John .   ?musical rdf:type dbo:MusicalWork .   ?musical rdfs:label ?musicalLabel .   FILTER (lang(?musicalLabel) = 'en') }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?developer WHERE {   dbr:Skype dbp:developer ?developer . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?club ?clubLabel WHERE {   ?club dbo:league dbr:Bundesliga .   ?club rdfs:label ?clubLabel .   FILTER (lang(?clubLabel) = \"en\") }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT DISTINCT ?actor ?actorLabel WHERE {   ?movie dbo:director dbr:William_Shatner .   ?movie dbo:starring ?actor .   ?actor rdfs:label ?actorLabel .   FILTER(LANG(?actorLabel) = 'en') }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?mountain ?elevation WHERE {   ?mountain a dbo:Mountain .   ?mountain dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT (COUNT(?film) AS ?numberOfFilms) WHERE {   dbr:Leonardo_DiCaprio dbo:starring ?film . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?date WHERE {   dbr:Olof_Palme dbp:deathDate ?date. }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?movie ?movieLabel WHERE {   ?movie dbo:starring dbr:Elizabeth_Taylor.   ?movie dbo:starring dbr:Richard_Burton.   ?movie rdfs:label ?movieLabel.   FILTER (lang(?movieLabel) = 'en'). }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?developer WHERE {   dbr:Minecraft dbo:developer ?developer . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?budget WHERE {   dbr:The_Lego_Movie dbp:budget ?budget . }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema  SELECT ?label WHERE {   dbr:Elvis_Presley dbo:musicalArtist ?artist .   ?artist dbo:firstAlbum ?album .   ?album rdfs:label ?label .   FILTER (lang(?label) = 'en') }"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?runtime WHERE {     dbr:Toy_Story dbo:runtime ?runtime. }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbc: <http://dbpedia.org/resource/Category:>  SELECT ?trumpetPlayer WHERE {   ?trumpetPlayer dbo:occupation dbr:Trumpet_player ;                  dbo:occupation dbr:Bandleader . }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?film WHERE {   ?film dbo:director dbr:Garry_Marshall ;         dbo:starring dbr:Julia_Roberts . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?birthYear WHERE {   dbr:Rachel_Stevens dbo:birthDate ?birthDate.   BIND(year(?birthDate) AS ?birthYear) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?cause ?deaths WHERE {   ?cause a dbo:CauseOfDeath;          dbo:numberOfDeaths ?deaths. } ORDER BY DESC(?deaths) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?height WHERE {   dbr:Yokohama_Marine_Tower dbo:height ?height. }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query_kg2": "<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?mountain ?height WHERE {   ?mountain a dbo:Mountain ;             dbo:location dbr:Italy ;             dbp:elevation ?height . } ORDER BY DESC(?height) LIMIT 1 </sparql>"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?supervisor WHERE {   dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor. }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?business WHERE {   dbr:Donald_Trump dbo:mainBusiness ?business. }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?spouse WHERE {   res:Tom_Cruise dbo:spouse ?spouse. }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   dbr:Eurasia dbo:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?author WHERE {   dbr:The_Interpretation_of_Dreams dbo:author ?author . }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?birthDate WHERE {   res:John_Adams dbo:birthDate ?birthDate. }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   res:European_Union dbo:populationTotal ?population. }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?currency WHERE {     dbr:China dbo:currency ?currency. }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?deathDate WHERE {   dbr:William_Shakespeare dbo:deathDate ?deathDate . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?rocket ?rocketLabel WHERE {   ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome ;           rdfs:label ?rocketLabel .   FILTER (lang(?rocketLabel) = 'en') }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?island ?islandLabel WHERE {   ?island dbo:location dbr:Japan ;           rdf:type dbo:Island .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?developer WHERE {   dbr:World_of_Warcraft dbp:developer ?developer . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?company ?companyLabel WHERE {   ?company rdf:type dbo:Company .   ?company dbo:industry dbr:Advertising .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?university ?universityLabel WHERE {   dbr:Angela_Merkel dbo:almaMater ?university .   ?university rdfs:label ?universityLabel .   FILTER (lang(?universityLabel) = 'en') }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?tvShow WHERE {   dbr:Neil_Patrick_Harris dbo:starring ?tvShow.   ?tvShow a dbo:TelevisionShow. }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?movie ?movieLabel WHERE {   ?movie dbo:starring res:Tom_Cruise .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" } }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?countryLabel WHERE {   dbr:Mount_Everest dbo:locationCountry ?country.   ?country rdfs:label ?countryLabel.   FILTER (lang(?countryLabel) = \"en\") }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?location WHERE {   dbr:John_F._Kennedy_assassination dbp:location ?location . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?river WHERE {   dbr:Brooklyn_Bridge dbo:crosses ?river . }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?swimmer ?swimmerLabel WHERE {   ?swimmer dbo:birthPlace dbr:Moscow .   ?swimmer a dbo:Swimmer .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?movie ?movieLabel WHERE {   dbr:Alec_Guinness dbo:starring ?movie .   ?movie dbp:releaseDate ?releaseDate . } ORDER BY DESC(?releaseDate) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?mountain ?elevation WHERE {   ?mountain dbo:elevation ?elevation .   ?mountain a dbo:Mountain . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   dbr:Cairo dbo:populationTotal ?population. }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?person ?personLabel WHERE {   ?person dbo:birthPlace dbr:Heraklion .   ?person rdfs:label ?personLabel .   FILTER (lang(?personLabel) = 'en') }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT (COUNT(?child) AS ?numChildren) WHERE {   dbr:Benjamin_Franklin dbo:child ?child. }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?elevation WHERE {   ?airport dbo:wikiPageID 100527.   ?airport dbp:elevation ?elevation. }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?countryLabel WHERE {   <http://dbpedia.org/resource/Mecca> dbo:country ?country .   ?country rdfs:label ?countryLabel .   FILTER (lang(?countryLabel) = 'en') }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?height WHERE {   dbr:Claudia_Schiffer dbo:height ?height. }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?holiday ?holidayLabel WHERE {   ?holiday rdf:type dbo:Holiday ;            rdfs:label ?holidayLabel .   FILTER(LANG(?holidayLabel) = 'en') }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?genre WHERE {   dbr:Lou_Reed dbo:musicGenre ?genre. }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?birthPlace WHERE {   dbr:Frank_Sinatra dbo:birthPlace ?birthPlace . }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?city ?population WHERE {   ?city a dbo:City ;         dbp:populationTotal ?population . } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema  SELECT ?show ?showLabel WHERE {   ?show dbo:creator dbr:Walt_Disney .   ?show rdf:type dbo:TelevisionShow .   ?show rdfs:label ?showLabel .   FILTER (lang(?showLabel) = 'en') }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?holiday ?holidayLabel WHERE {   ?holiday dbo:country dbr:Sweden ;            rdfs:label ?holidayLabel .   FILTER (lang(?holidayLabel) = 'en') } ORDER BY ?holidayLabel"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?netIncome WHERE {   dbr:Apple_Inc. dbo:netIncome ?netIncome. }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?placeOfDeath WHERE {   dbr:Abraham_Lincoln dbp:deathPlace ?placeOfDeath . }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT DISTINCT ?country ?capital WHERE {   dbr:Himalayas dbo:location ?country.   ?country dbo:capital ?capital. }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?country WHERE {   dbr:Limerick_Lake dbp:location ?country . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?height WHERE {   dbr:Michael_Jordan dbo:height ?height. }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT DISTINCT ?film WHERE {   ?film dbo:starring dbr:Clint_Eastwood ;         dbo:director dbr:Clint_Eastwood . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?country WHERE {   dbr:West_African_CFA_franc dbo:currencyOf ?country . }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query_kg2": "<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE {   ?country dbo:populationTotal ?population .   ?country dbo:wikiPageID 15953 . } </sparql>"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?holiday ?holidayLabel WHERE {   ?holiday dbo:type dbr:Holiday .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?party ?partyLabel WHERE {   ?party a dbo:PoliticalParty ;          dbo:country dbr:Greece ;          dbp:position dbpedia-owl:pro-European .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/>  SELECT ?actor ?actorName ?birthday WHERE {   dbr:Charmed_(TV_series) dbo:starring ?actor .   ?actor foaf:name ?actorName .   ?actor dbp:birthDate ?birthday . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movement WHERE {   dbr:The_Three_Dancers dbo:author ?painter .   ?painter dbo:movement ?movement . }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?actor ?actorLabel WHERE {   ?actor dbo:birthPlace dbr:Germany .   ?actor a dbo:Actor .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?designer WHERE {   dbr:Brooklyn_Bridge dbo:designer ?designer . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?writer WHERE {   dbr:Game_of_Thrones_(TV_series) dbo:musicComposer ?writer . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?movie WHERE {   ?movie dbo:director dbr:Francis_Ford_Coppola . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?birthName WHERE {   dbr:Adele dbp:birthName ?birthName . }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX foaf: <http://xmlns.com/foaf/0.1/>  SELECT ?album ?albumLabel WHERE {   dbr:Queen_(band) dbo:album ?album .   ?album dct:date ?date .   FILTER NOT EXISTS {     ?otherAlbum dct:date ?otherDate .     dbr:Queen_(band) dbo:album ?otherAlbum .     FILTER (?otherDate < ?date)   }   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?currencyLabel WHERE {   dbr:Czech_Republic dbo:currency ?currency.   ?currency rdfs:label ?currencyLabel.   FILTER (lang(?currencyLabel) = 'en') }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?person WHERE {   ?person dbo:birthPlace dbr:Vienna .   ?person dbo:deathPlace dbr:Berlin . }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?bridge ?bridgeLabel WHERE {   ?bridge dbo:crosses dbr:Seine .   ?bridge rdfs:label ?bridgeLabel .   FILTER (lang(?bridgeLabel) = 'en') }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?musician (COUNT(?book) AS ?bookCount) WHERE {   ?musician dbo:occupation dbr:Musician .   ?musician dbo:author ?book . } GROUP BY ?musician ORDER BY DESC(?bookCount) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?show ?showLabel WHERE {   ?show dbo:creator dbr:John_Cleese .   ?show rdf:type dbo:TelevisionShow .   ?show rdfs:label ?showLabel .   FILTER (lang(?showLabel) = 'en') }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?writer ?writerLabel WHERE {   ?writer dbo:award dbr:Nobel_Prize_in_Literature .   ?writer dbo:occupation dbr:Writer .   ?writer rdfs:label ?writerLabel .   FILTER (lang(?writerLabel) = 'en') } ORDER BY ?writerLabel"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?discoverer WHERE {   dbr:Ceres_(dwarf_planet) dbp:discoverer ?discoverer. }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query_kg2": "<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?bandleader ?bandleaderLabel WHERE {   ?bandleader dbo:instrument dbr:Trumpet ;               dbo:occupation dbr:Bandleader .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } </sparql>"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?player ?height WHERE {   ?player rdf:type dbo:BasketballPlayer .   ?player dbp:height ?height .   FILTER (?height > 2.0) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?film WHERE {   ?film dbo:starring dbr:Julia_Roberts .   ?film dbo:starring dbr:Richard_Gere . }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?capital WHERE {   res:Canada dbo:capital ?capital . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?player ?playerLabel WHERE {   ?player dbo:birthPlace dbr:Malta .   ?player a dbo:SoccerPlayer .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?capital WHERE {   dbr:Cameroon dbo:capital ?capital . }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT (COUNT(?language) AS ?count) WHERE {   ?language rdf:type dbo:ProgrammingLanguage . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?cosmonaut ?name WHERE {   ?cosmonaut a dbo:Cosmonaut .   ?cosmonaut dbp:name ?name . }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Family_Guy dbo:creator ?creator. }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   res:Mexico_City dbo:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Batman dbp:creator ?creator . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   res:Australia dbo:capital ?capital .   ?capital dbp:populationTotal ?population . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?area WHERE {   res:North_Rhine-Westphalia dbo:areaTotal ?area. }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema  SELECT ?employees WHERE {   ?company dbo:numberOfEmployees ?employees .   ?company rdfs:label \"IBM\"@en . } LIMIT 1"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?budget WHERE {   dbr:Pulp_Fiction dbp:budget ?budget . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movie ?movieLabel WHERE {   dbr:Jesse_Eisenberg dbo:starring ?movie .   ?movie rdfs:label ?movieLabel .   FILTER(LANG(?movieLabel) = \"en\") }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?movie ?movieLabel WHERE {   ?movie dct:subject dbr:Category:Danish_films ;          rdf:type dbo:Film .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?country WHERE {   dbr:Himalayas dbo:country ?country. }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?country ?area WHERE {   ?country dbo:area ?area . } ORDER BY DESC(?area) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?almaMater WHERE {   res:Angela_Merkel dbo:almaMater ?almaMater. }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Goofy dbp:creator ?creator. }"
    }
]