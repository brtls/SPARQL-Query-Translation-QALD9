[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema The URI `res:Penguin_Books` would be replaced with `wd:Q201399` which is the Wikidata ID for Penguin Books. Here is the complete SPARQL query for KG2 (Wikidata): < sparql > PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?uri WHERE { wd:Q201399 wdt:P112 ?uri }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P57 wd:Stanley_Kubrick. BIND (wkt:label(?uri) AS ?title) }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX schema: <http://schema.org/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q522697; schema:composer wd:Q6104 }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Skype wdt:P108 ?uri. }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P1476 wd:Q105163. ?uri wdt:P355 wd:Q1249. }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x wdt:P57 wd:Q18326 ; wdt:P161 ?uri }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "SELECT ?mountain WHERE { ?mountain wdt:P31 wd:Q30474. SERVICE wikibase:en { ?mountain rdfs:label ?label. FILTER(LANG(?label) = 'en'). } OPTIONAL { ?mountain wdt:P2046 ?elevation. } FILTER (!bound(?elevation) || ?elevation > 0). ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1 }"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "SELECT (COUNT(DISTINCT ?item) AS ?c) WHERE { ?item a <http://www.wikidata.org/prop/direct/P31> . ?item wdt:P161 wd:Q42790 . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q34202> <http://www.wikidata.org/prop/direct/P570> ?date }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P345 wd:Q143246 ; wdt:P345 wd:Q133617 . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX wd: <https://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q673 wd:P51 ?uri }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?n WHERE { wd:Q163488 (wdt:P31|wdt:P161) ?item . ?item wdt:P288 wd:Q163488 . ?item wdt:P301 ?n . }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?x wdt:P175 wd:Elvis_Presley. ?x wdt:P132 ?uri. ?x wdt:P577 ?y. FILTER (lang(?y) = 'en' || !bound(?y)). FILTER (lang(?x) = 'en' || !bound(?x)). FILTER (lang(?uri) = 'en' || !bound(?uri)). } ORDER BY ASC(?y) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?runtime WHERE { wd:Toy_Story wdt:P312 ?runtime }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 \"bandleader\" ; wdt:P1303 \"trumpet\" . }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/ontology <http://www.wikidata.org/property/P179> <http://www.wikidata.org/entity/Q15117> ; <http://www.wikidata.org/property/P57> <http://www.wikidata.org/entity/Q149103> }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> The resource name in Wikidata is typically an entity ID. Given that we are dealing with Rachel Stevens, who is also known as Rachel Stevens (singer), we need to find her Wikidata entity ID. Let's assume her Wikidata ID is Q... (for example, Q123456). Here is the modified SPARQL query for KG2 (Wikidata): <sparql> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q123456 wdt:P569 ?uri }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "SELECT ?x (COUNT(DISTINCT ?uri) AS ?count) WHERE { ?uri wdt:P810 ?x . SERVICE wikibase:labels { bd:serviceParam wikibase:language \"en\". } } GROUP BY ?x ORDER BY DESC(?count) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { wd:Yokohama_Marine_Tower wdt:P2047 ?num }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8303 ; wdt:P131 wd:Italy ; wdt:P2043 ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "PREFIX wdt: <http://www.w3.org/2002/07/owl PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Albert_Einstein wdt:P69 ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?business WHERE { wd:Q42313 wdt:P31 ?class. ?class wdt:P136 ?business. FILTER(STRSTARTS(STR(?business), \"http://www.wikidata.org/entity/\")) }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?Author WHERE { wd:Q12849135 wdt:P50 ?Author. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q187026 wdt:P569 ?date }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> We will use the same query pattern as KG1, but with the Wikidata prefixes and the correct property for population. Here is the final, complete SPARQL query within the tags '<sparql>' and '</sparql>': <sparql> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?europop WHERE { wd:European_Union wdt:P1082 ?europop }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:China wdt:P38 ?uri }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?x WHERE { dbr:William_Shakespeare dbo:deathDate ?x }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a wd:P220 ; wd:P150 Q595 }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:World_of_Warcraft wdt:P80 ?uri }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q483521 ; wdt:P512 ?industry . FILTER (regex(str(?industry), \"advertising\", \"i\")) UNION ?uri wdt:P31 wd:Q483521 FILTER (regex(str(?uri), \"advertising company\", \"i\")) UNION ?uri wdt:P278 ?industry FILTER (regex(str(?industry), \"advertising\", \"i\")) }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?university WHERE { wd:Angela_Merkel wdt:P69 ?university }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/prop/direct/P31> ; <http://www.wikidata.org/prop/direct/P179> <http://www.wikidata.org/entity/Q114870> ; <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q783992> }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/entity/statement/Q5> ; <http://www.wikidata.org/prop/direct/P114> <http://www.wikidata.org/entity/Q7397> . }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> The query will look like this: SELECT ?uri WHERE { wd:Mount_Everest wdt:P30 ?uri . FILTER (owl:type(?uri, wd:Q142)) }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "SELECT ?uri WHERE { <http://www.wikidata.org/entity/Q919> <http://www.wikidata.org/prop/direct/P20> ?uri }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Brooklyn_Bridge wdt:P138 ?uri }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://schema.org/Person> ; <http://schema.org/birthPlace> <http://www.wikidata.org/entity/Q491665> . FILTER regex(str(?uri), \"swimmer\") }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wdt:P577 ?date ; wdt:P161 wd:Q37967 ; a wdt:P31 wd:Q11424 }"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?item WHERE { ?item wdt:P2045 ?elevation; a wdt:P31. FILTER (?elevation > 0) ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1 }"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q5 ; wdt:P20 wd:Q1493. }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { wd:Q90 wdt:P25 ?uri }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>), and knowing that Wikidata's prefixes are P for property and Q for item/resource, we can infer how to translate the query. For Wikidata, the query to find the elevation of D\u00fcsseldorf Airport would involve using the property for elevation (P1567) and the item for D\u00fcsseldorf Airport (Q7484). Therefore, the SPARQL query for KG2 (Wikidata) would be: <sparql> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?ele WHERE { wd:Q7484 wdt:P1567 ?ele }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Mecca wdt:P17 ?uri }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?height WHERE { wd:Q747768 wdt:P2047 ?height }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX ps: <http://www.wikidata.org/prop/statement/> PREFIX pr: <http://www.wikidata.org/prop/reference/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?h WHERE { ?h wdt:P31 wd:Q89. FILTER(LANG(?h) = 'en') }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?place WHERE { wd:Frank_Sinatra wdt:P20 ?place }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q515 ; wdt:P1082 ?pop }"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q11460; wdt:P179 wd:Q2912 }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "SELECT DISTINCT ?item WHERE { ?item a Q38996; P17 Q8426. }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "SELECT DISTINCT ?ni WHERE { wd:Q94 wdt:P166 ?ni }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Abraham_Lincoln wdt:P20 ?uri. }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q13475> <http://www.wikidata.org/prop/direct/P17> ?country . ?country <http://www.wikidata.org/prop/direct/P36> ?uri }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Limerick_Lake wdt:P17 ?uri }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?num WHERE { wd:Q10296 wdt:P2048 ?num }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "SELECT ?film WHERE { ?film <http://www.w3.org/2002/07/owl <http://www.w3.org/2002/07/owl }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX wikibase: <http://wikiba.se/ontology PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/> PREFIX pq: <http://www.wikidata.org/prop/qualifier/> PREFIX v: <http://www.wikidata.org/value/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT ?country WHERE { ?country wdt:P38 wd:Q427969. ?country wdt:P915 wd:Q427969. }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?pIraq WHERE { wd:Q145 (wdt:P1082) ?pIraq . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35673. FILTER(LANG(?uri) = \"\") }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/entity/Q1348420> ; <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q198> ; <http://www.wikidata.org/prop/direct/P158> <http://www.wikidata.org/entity/Q319387>. }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q1503 wd:P161 ?actor . ?actor wd:P569 ?date }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX schema: <http://schema.org/> PREFIX res: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { res:Q123456 (wdt:P170) ?person . ?person (wdt:P31) ?uri }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { VALUES ?place { wd:Q183 wdt:P27 wd:Q183 } ?uri a wdt:P31 wd:Q5 . ?uri wdt:P27 ?place . BIND(wd:Q183 AS ?place) UNION { ?uri wdt:P27 ?place . ?place wdt:P17 wd:Q183 . } }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Brooklyn_Bridge wdt:P101 ?uri }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?composer WHERE { wd:Game_of_Thrones wdt:P166 ?work. ?work wdt:P175 ?composer. }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wdt:P577 ; wdt:P57 wd:Q278` ?uri wdt:P111 wd:Q349 }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?bn WHERE { wd:Q7383 wdt:P735 ?bn }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P180 ?album . ?uri wdt:P175 wd:Q1131 . ?uri wdt:P577 ?d . } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q30 wdt:P38 ?uri }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P20 wd:Q658` (Vienna) ; wdt:P20 wd:Q912` (Berlin) }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "SELECT DISTINCT ?item WHERE { ?item a <http://schema.org/Bridge> ; <http://www.wikidata.org/prop/direct/P204> <http://www.wikidata.org/entity/Q150> . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q5 . ?x wdt:P50 ?uri . ?x a wdt:P31 wd:Q21591 . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/entity/Q914900> ; <http://www.wikidata.org/prop/direct/P50> <http://www.wikidata.org/entity/Q38378> . }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a wdt:P50 ; wdt:P166 wd:Q1063683 . }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q34024> wdt:P142 ?uri }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wdt:Q637608 ; wdt:P130 wdt:Q197390 . }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/prop/direct/P31> ; <http://www.wikidata.org/prop/direct/P2048> ?n FILTER ( ?n > 2.0 ) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wdt:P577 ?date ; wdt:P161 wd:Q1519 ; wdt:P161 wd:Q16466 . }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q30 wdt:P36 ?uri }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { wd:Cameroon wdt:P36 ?uri }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <https://www.wikidata.org/wiki/Q8081> { ?uri <https://www.wikidata.org/wiki/Property:P27> <https://www.wikidata.org/wiki/Q159> } UNION { ?uri <https://www.wikidata.org/wiki/Property:P27> <https://www.wikidata.org/wiki/Q142> } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Family_Guy wdt:P50 ?uri }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?Mexico_City WHERE { wd:Q4146 wdt:P1082 ?Mexico_City . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Batman wdt:P50 ?uri }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?num WHERE { wd:Australia wdt:P36 ?capital. ?capital wdt:P1082 ?num. }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?tarea WHERE { wd:North_Rhine-Westphalia ?p ?tarea . FILTER regex(str(?p), \"area\") . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "SELECT DISTINCT ?number WHERE { <http://www.wikidata.org/entity/Q73> <http://www.wikidata.org/prop/direct/P1103> ?number }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?n WHERE { wd:Q162016 wdt:P301 ?n }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?film WHERE { ?film a <http://www.wikidata.org/entity-schema/Film> . ?film <http://www.wikidata.org/prop/direct/P179> <http://www.wikidata.org/entity/Q110> . }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q114870> ; ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q146> . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { <https://www.wikidata.org/wiki/Q30> wdt:P17 ?uri }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX wdt: <https://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q6256 ; wdt:P217 ?n . } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
    }
]