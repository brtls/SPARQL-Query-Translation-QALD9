[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?founder WHERE {   dbr:Penguin_Books dbp:founder ?founder. }",
        "answers": [
            "",
            "John Lane",
            "Richard Lane",
            "http://dbpedia.org/resource/Allen_Lane"
        ]
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?film WHERE {   dbr:Stanley_Kubrick dbo:director ?film . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?developer WHERE {   dbr:Skype dbp:developer ?developer. }",
        "answers": [
            "Skype Technologies"
        ]
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?club ?clubLabel WHERE {   ?club dbo:league dbr:Bundesliga .   ?club rdfs:label ?clubLabel .   FILTER (lang(?clubLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX foaf: <http://xmlns.com/foaf/0.1/>  SELECT DISTINCT ?actor WHERE {   ?film dbo:director dbr:William_Shatner .   ?film dbo:starring ?actor . }",
        "answers": [
            "http://dbpedia.org/resource/DeForest_Kelley",
            "http://dbpedia.org/resource/George_Takei",
            "http://dbpedia.org/resource/James_Doohan",
            "http://dbpedia.org/resource/Leonard_Nimoy",
            "http://dbpedia.org/resource/Nichelle_Nichols",
            "http://dbpedia.org/resource/Walter_Koenig",
            "http://dbpedia.org/resource/William_Shatner"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?mountain ?elevation WHERE {   ?mountain a dbo:Mountain ;             dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Nooitgedacht_Glacial_Pavements",
            "http://dbpedia.org/resource/Magaliesberg"
        ]
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT (COUNT(DISTINCT ?film) AS ?filmCount) WHERE {   ?film dbo:starring res:Leonardo_DiCaprio . }",
        "answers": [
            "33"
        ]
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?date WHERE {   dbr:Olof_Palme dbo:deathDate ?date . }",
        "answers": [
            "1986-02-28"
        ]
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movie WHERE {   ?movie dbo:starring dbr:Elizabeth_Taylor .   ?movie dbo:starring dbr:Richard_Burton . }",
        "answers": [
            "http://dbpedia.org/resource/Boom!_(film)",
            "http://dbpedia.org/resource/Divorce_His,_Divorce_Hers",
            "http://dbpedia.org/resource/Doctor_Faustus_(1967_film)",
            "http://dbpedia.org/resource/Hammersmith_Is_Out",
            "http://dbpedia.org/resource/The_Comedians_(1967_film)",
            "http://dbpedia.org/resource/The_Sandpiper",
            "http://dbpedia.org/resource/The_Taming_of_the_Shrew_(1967_film)",
            "http://dbpedia.org/resource/The_V.I.P.s_(film)",
            "http://dbpedia.org/resource/Under_Milk_Wood_(1972_film)",
            "http://dbpedia.org/resource/Who's_Afraid_of_Virginia_Woolf%3F_(film)"
        ]
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema  SELECT ?developer WHERE {   dbr:Minecraft dbo:developer ?developer . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?budget WHERE {   ?movie dbo:title \"The Lego Movie\"@en ;          dbp:budget ?budget . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?label WHERE {   dbr:Elvis_Presley dbo:artist ?album .   ?album dbp:firstAlbum ?firstAlbum .   ?firstAlbum rdfs:label ?label .   FILTER (lang(?label) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?runtime WHERE {   dbr:Toy_Story dbo:runtime ?runtime. }",
        "answers": [
            "4860"
        ]
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?trumpetPlayer ?trumpetPlayerLabel WHERE {   ?trumpetPlayer dbo:instrument dbr:Trumpet ;                  dbo:position ?position .   ?position dbp:name \"Bandleader\"@en .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?film ?filmLabel WHERE {   ?film dct:subject dbc:Films_directed_by_Garry_Marshall ;         dbo:starring dbr:Julia_Roberts .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?birthYear WHERE {   dbr:Rachel_Stevens dbo:birthDate ?birthDate .   BIND(YEAR(?birthDate) AS ?birthYear) }",
        "answers": [
            "1978"
        ]
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?causeOfDeath (COUNT(?person) AS ?count) WHERE {   ?person dbo:causeOfDeath ?causeOfDeath . } GROUP BY ?causeOfDeath ORDER BY DESC(?count) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?height WHERE {   res:Yokohama_Marine_Tower dbo:height ?height. }",
        "answers": [
            "106.07"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?mountain ?elevation WHERE {   ?mountain dbo:country dbr:Italy ;             dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "Ca.",
            "http://dbpedia.org/resource/Neves-Stausee"
        ]
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?supervisor WHERE {   dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor. }",
        "answers": [
            "http://dbpedia.org/resource/Alfred_Kleiner"
        ]
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?business WHERE {   dbr:Donald_Trump dbo:occupation ?business. }",
        "answers": [
            "http://dbpedia.org/resource/Business_career_of_Donald_Trump",
            "http://dbpedia.org/resource/Media_career_of_Donald_Trump",
            "http://dbpedia.org/resource/Political_career_of_Donald_Trump"
        ]
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?spouse WHERE {   res:Tom_Cruise dbo:spouse ?spouse. }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   dbr:Eurasia dbp:populationEstimate ?population . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?author WHERE {   dbr:The_Interpretation_of_Dreams dbo:author ?author. }",
        "answers": [
            "http://dbpedia.org/resource/Sigmund_Freud"
        ]
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?birthDate WHERE {   dbr:John_Adams dbo:birthDate ?birthDate. }",
        "answers": [
            "1735-10-30"
        ]
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT (SUM(xsd:integer(?population)) AS ?totalPopulation) WHERE {   ?country dbo:populationTotal ?population .   ?country dbo:country ?europeanUnion .   ?europeanUnion dbp:name \"European Union\"@en . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?deathDate WHERE {   dbr:William_Shakespeare dbo:deathDate ?deathDate . }",
        "answers": [
            "1616-04-23"
        ]
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?rocket ?rocketLabel WHERE {   ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome ;           rdfs:label ?rocketLabel .   FILTER (lang(?rocketLabel) = 'en') } ORDER BY ?rocketLabel",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?island ?islandLabel WHERE {   ?island dbo:location dbr:Japan .   ?island a dbo:Island .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?developerLabel WHERE {   dbr:World_of_Warcraft dbo:developer ?developer.   ?developer rdfs:label ?developerLabel.   FILTER (lang(?developerLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?company ?companyLabel WHERE {   ?company rdf:type dbo:Company .   ?company dbo:industry ?industry .   ?industry dbp:name \"Advertising\"@en .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/>  SELECT ?university WHERE {   dbr:Angela_Merkel dbo:almaMater ?university. }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?tvShow ?tvShowLabel WHERE {   ?tvShow dbo:starring dbr:Neil_Patrick_Harris .   ?tvShow rdf:type dbo:TelevisionShow .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movie WHERE {   ?movie dbo:starring dbr:Tom_Cruise. }",
        "answers": [
            "http://dbpedia.org/resource/A_Few_Good_Men",
            "http://dbpedia.org/resource/All_the_Right_Moves_(film)",
            "http://dbpedia.org/resource/American_Made_(film)",
            "http://dbpedia.org/resource/Born_on_the_Fourth_of_July_(film)",
            "http://dbpedia.org/resource/Cocktail_(1988_film)",
            "http://dbpedia.org/resource/Collateral_(film)",
            "http://dbpedia.org/resource/Days_of_Thunder",
            "http://dbpedia.org/resource/Edge_of_Tomorrow",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Far_and_Away__Far_and_Away__1",
            "http://dbpedia.org/resource/Interview_with_the_Vampire_(film)",
            "http://dbpedia.org/resource/Jack_Reacher_(film)",
            "http://dbpedia.org/resource/Jack_Reacher:_Never_Go_Back",
            "http://dbpedia.org/resource/Jerry_Maguire__Jerry_Maguire__1",
            "http://dbpedia.org/resource/Knight_and_Day__Knight_and_Day__1",
            "http://dbpedia.org/resource/Legend_(1985_film)",
            "http://dbpedia.org/resource/Lions_for_Lambs",
            "http://dbpedia.org/resource/Losin'_It",
            "http://dbpedia.org/resource/Magnolia_(film)__Magnolia__1",
            "http://dbpedia.org/resource/Minority_Report_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_One",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_Two",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Fallout",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Ghost_Protocol",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Rogue_Nation",
            "http://dbpedia.org/resource/Mission:_Impossible_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_2",
            "http://dbpedia.org/resource/Mission:_Impossible_III",
            "http://dbpedia.org/resource/Oblivion_(2013_film)",
            "http://dbpedia.org/resource/Rain_Man",
            "http://dbpedia.org/resource/Risky_Business",
            "http://dbpedia.org/resource/Rock_of_Ages_(2012_film)",
            "http://dbpedia.org/resource/Taps_(film)",
            "http://dbpedia.org/resource/The_Color_of_Money",
            "http://dbpedia.org/resource/The_Firm_(1993_film)",
            "http://dbpedia.org/resource/The_Last_Samurai",
            "http://dbpedia.org/resource/The_Mummy_(2017_film)",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/Top_Gun:_Maverick",
            "http://dbpedia.org/resource/Top_Gun",
            "http://dbpedia.org/resource/Valkyrie_(film)",
            "http://dbpedia.org/resource/Vanilla_Sky",
            "http://dbpedia.org/resource/War_of_the_Worlds_(2005_film)"
        ]
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?country WHERE {   ?mountEverest dbo:location ?country .   ?mountEverest dbp:name \"Mount Everest\"@en . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?place WHERE {   dbr:John_F._Kennedy_assassination dbp:location ?place . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?river WHERE {   res:Brooklyn_Bridge dbo:crosses ?river . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?swimmer ?swimmerName WHERE {   ?swimmer dbo:birthPlace dbr:Moscow .   ?swimmer dbo:type dbr:Swimmer .   ?swimmer dbp:name ?swimmerName . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dct: <http://purl.org/dc/terms/>  SELECT ?movie ?movieLabel WHERE {   dbr:Alec_Guinness dbo:starring ?movie .   ?movie dct:date ?date . } ORDER BY DESC(?date) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?mountain ?elevation WHERE {   ?mountain dbo:elevation ?elevation .   ?mountain a dbo:Mountain . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
        "answers": [
            "8848.86",
            "http://dbpedia.org/resource/Alpide_belt"
        ]
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   dbr:Cairo dbo:populationTotal ?population. }",
        "answers": [
            "10100166"
        ]
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?person ?personLabel WHERE {   ?person dbo:birthPlace dbr:Heraklion .   ?person rdfs:label ?personLabel .   FILTER (lang(?personLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT (COUNT(?child) AS ?numberOfChildren) WHERE {   res:Benjamin_Franklin dbo:child ?child . }",
        "answers": [
            "3"
        ]
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?elevation WHERE {   res:D\u00fcsseldorf_Airport dbo:elevation ?elevation. }",
        "answers": [
            "44.8",
            "44.8056"
        ]
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-prop: <http://dbpedia.org/property/>  SELECT ?height WHERE {   dbpedia:Claudia_Schiffer dbpedia-owl:height ?height . }",
        "answers": [
            "1.8"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?holiday ?holidayLabel WHERE {   ?holiday a dbo:Holiday .   ?holiday dbp:celebrated dbr:World .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?genreLabel WHERE {   dbr:Lou_Reed dbo:genre ?genre .   ?genre rdfs:label ?genreLabel .   FILTER (lang(?genreLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?birthPlace WHERE {   dbr:Frank_Sinatra dbo:birthPlace ?birthPlace. }",
        "answers": [
            "http://dbpedia.org/resource/Hoboken,_New_Jersey"
        ]
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?city ?population WHERE {   ?city a dbo:City ;         dbp:populationTotal ?population . } ORDER BY ASC(?population) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Chagan_(closed_city)",
            "0"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema  SELECT ?tvShow ?tvShowLabel WHERE {   ?tvShow dbo:creator dbr:Walt_Disney .   ?tvShow rdf:type dbo:TelevisionShow .   ?tvShow rdfs:label ?tvShowLabel .   FILTER (lang(?tvShowLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?holiday ?holidayLabel WHERE {   ?holiday dbo:country dbr:Sweden ;            dbp:language dbr:Swedish .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?netIncome WHERE {   res:Apple_Inc. dbo:netIncome ?netIncome . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?place WHERE {   dbr:Abraham_Lincoln dbo:deathPlace ?place } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?country ?capital WHERE {   dbr:Himalayas dbo:location ?country .   ?country dbo:capital ?capital . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?countryLabel WHERE {   dbr:Limerick_Lake dbo:country ?country .   ?country rdfs:label ?countryLabel .   FILTER (lang(?countryLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?height WHERE {   dbr:Michael_Jordan dbo:height ?height . }",
        "answers": [
            "1.9812"
        ]
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?film WHERE {   ?film dbo:director dbr:Clint_Eastwood ;         dbo:starring dbr:Clint_Eastwood . }",
        "answers": [
            "http://dbpedia.org/resource/A_Perfect_World",
            "http://dbpedia.org/resource/Absolute_Power_(film)",
            "http://dbpedia.org/resource/Blood_Work_(film)",
            "http://dbpedia.org/resource/Cry_Macho_(film)",
            "http://dbpedia.org/resource/Dirty_Harry_(film_series)",
            "http://dbpedia.org/resource/Firefox_(film)",
            "http://dbpedia.org/resource/Gran_Torino",
            "http://dbpedia.org/resource/Heartbreak_Ridge",
            "http://dbpedia.org/resource/High_Plains_Drifter",
            "http://dbpedia.org/resource/Honkytonk_Man",
            "http://dbpedia.org/resource/Million_Dollar_Baby__Million_Dollar_Baby__1",
            "http://dbpedia.org/resource/Pale_Rider",
            "http://dbpedia.org/resource/Play_Misty_for_Me",
            "http://dbpedia.org/resource/Space_Cowboys",
            "http://dbpedia.org/resource/Sudden_Impact",
            "http://dbpedia.org/resource/The_Bridges_of_Madison_County_(film)",
            "http://dbpedia.org/resource/The_Eiger_Sanction_(film)",
            "http://dbpedia.org/resource/The_Mule_(2018_film)",
            "http://dbpedia.org/resource/The_Outlaw_Josey_Wales__The_Outlaw_Josey_Wales__1",
            "http://dbpedia.org/resource/The_Rookie_(1990_film)",
            "http://dbpedia.org/resource/True_Crime_(1999_film)",
            "http://dbpedia.org/resource/Unforgiven",
            "http://dbpedia.org/resource/White_Hunter_Black_Heart"
        ]
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT DISTINCT ?country ?countryLabel WHERE {   ?country dbo:currency dbr:West_African_CFA_franc.   ?country dbp:name ?countryLabel.   FILTER (lang(?countryLabel) = 'en') } ORDER BY ?countryLabel",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   res:Iraq dbo:populationTotal ?population. }",
        "answers": [
            "40462701"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?holiday ?holidayLabel WHERE {   ?holiday a dbo:Holiday .   ?holiday rdfs:label ?holidayLabel .   FILTER (lang(?holidayLabel) = 'en') } ORDER BY ?holidayLabel",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?party ?partyLabel WHERE {   ?party dct:subject dbr:Category:Pro-Europeanism ;          dbo:country dbr:Greece ;          dbo:type dbr:Political_party .   ?party rdfs:label ?partyLabel .   FILTER (lang(?partyLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?actor ?birthday WHERE {   dbr:Charmed_%28TV_series%29 dbo:starring ?actor .   ?actor dbp:birthDate ?birthday . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?movement WHERE {   ?painting dbp:title \"The Three Dancers\"@en .   ?painting dbo:author ?painter .   ?painter dbo:movement ?movement . }",
        "answers": [
            "http://dbpedia.org/resource/Cubism",
            "http://dbpedia.org/resource/Surrealism"
        ]
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?designer WHERE {   dbr:Brooklyn_Bridge dbp:designer ?designer. }",
        "answers": [
            "http://dbpedia.org/resource/John_Augustus_Roebling"
        ]
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?composer ?composerLabel WHERE {   dbr:Game_of_Thrones dbo:composer ?composer .   ?composer rdfs:label ?composerLabel .   FILTER (lang(?composerLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?movie ?movieLabel WHERE {   ?movie dbo:director dbr:Francis_Ford_Coppola .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?album ?albumLabel WHERE {   dbr:Queen_(band) dbp:firstAlbum ?album .   ?album rdfs:label ?albumLabel .   FILTER (lang(?albumLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?currency WHERE {   dbr:Czech_Republic dbo:currency ?currency. }",
        "answers": [
            "http://dbpedia.org/resource/Czech_koruna"
        ]
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX foaf: <http://xmlns.com/foaf/0.1/>  SELECT ?person ?personLabel WHERE {   ?person dbo:birthPlace dbr:Vienna .   ?person dbo:deathPlace dbr:Berlin .   ?person foaf:name ?personLabel . }",
        "answers": [
            "http://dbpedia.org/resource/Adolf_Klein",
            "Adolf Klein",
            "http://dbpedia.org/resource/Eduard_von_Winterstein",
            "Eduard von Winterstein",
            "http://dbpedia.org/resource/Emil_Justitz",
            "Emil Justitz",
            "http://dbpedia.org/resource/Erik_Jan_Hanussen",
            "Erik Jan Hanussen",
            "http://dbpedia.org/resource/Eva_Schmidt-Kolmer",
            "Eva Schmidt-Kolmer",
            "http://dbpedia.org/resource/Guido_von_List",
            "Guido von List",
            "http://dbpedia.org/resource/Hans_Fidesser",
            "Hans Fidesser",
            "http://dbpedia.org/resource/Heinrich_Belohlavek",
            "Heinrich Belohlavek",
            "http://dbpedia.org/resource/Hugo_Flink",
            "Hugo Flink",
            "http://dbpedia.org/resource/Josephine_Pagay",
            "Josephine Pagay",
            "http://dbpedia.org/resource/Karl_Etlinger",
            "Karl Etlinger",
            "http://dbpedia.org/resource/Karl_Hellmer",
            "Karl Hellmer",
            "http://dbpedia.org/resource/La_Jana_(actress)",
            "La Jana",
            "http://dbpedia.org/resource/Luise_Begas-Parmentier",
            "Luise Begas-Parmentier",
            "http://dbpedia.org/resource/Mathilde_Danegger",
            "Mathilde Danegger",
            "http://dbpedia.org/resource/Michael_von_Newlinsky",
            "Michael von Newlinsky",
            "http://dbpedia.org/resource/Richard_Thurnwald",
            "Richard Thurnwald",
            "http://dbpedia.org/resource/Robert_Bodanzky",
            "Robert Bodanzky",
            "http://dbpedia.org/resource/Steffie_Spira",
            "Steffie Spira",
            "http://dbpedia.org/resource/Therese_Gr\u00fcnbaum",
            "Therese Gr\u00fcnbaum",
            "http://dbpedia.org/resource/Tom_Seidmann-Freud",
            "Tom Seidmann-Freud"
        ]
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?bridge ?bridgeLabel WHERE {   ?bridge dbo:crosses dbr:Seine .   ?bridge rdfs:label ?bridgeLabel .   FILTER (lang(?bridgeLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns  SELECT ?musician (COUNT(?book) AS ?bookCount) WHERE {   ?musician rdf:type dbo:MusicalArtist .   ?musician dbp:books ?book . } GROUP BY ?musician ORDER BY DESC(?bookCount) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?show ?showLabel WHERE {   ?show dbo:creator dbr:John_Cleese .   ?show a dbo:TelevisionShow .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?writer ?writerLabel WHERE {   ?writer dbo:award dbr:Nobel_Prize_in_Literature .   ?writer rdf:type dbo:Writer .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?discoverer WHERE {   dbr:Ceres_%28dwarf_planet%29 dbo:discoverer ?discoverer . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?bandleader ?bandleaderLabel WHERE {   ?bandleader dbo:instrument dbr:Trumpet ;               dbo:occupation dbr:Bandleader .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?player ?height WHERE {   ?player a dbo:BasketballPlayer .   ?player dbp:height ?height .   FILTER (?height > 200) }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT DISTINCT ?film WHERE {   ?film dbo:starring dbr:Julia_Roberts.   ?film dbo:starring dbr:Richard_Gere.   ?film a dbo:Film. }",
        "answers": [
            "http://dbpedia.org/resource/Pretty_Woman",
            "http://dbpedia.org/resource/Runaway_Bride_(film)"
        ]
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?capital WHERE {   dbpedia:Canada dbo:capital ?capital. }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dct: <http://purl.org/dc/terms/>  SELECT ?player ?playerLabel WHERE {   ?player dct:subject dbc:Maltese_footballers ;           dbp:placeOfBirth ?place .   ?place dbo:country dbr:Malta .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT ?capital WHERE {   <http://dbpedia.org/resource/Cameroon> dbo:capital ?capital . }",
        "answers": [
            "http://dbpedia.org/resource/Yaound\u00e9"
        ]
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?cosmonaut ?cosmonautLabel WHERE {   ?cosmonaut dbo:profession dbr:Cosmonaut .   ?cosmonaut rdfs:label ?cosmonautLabel .   FILTER (lang(?cosmonautLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Family_Guy dbo:creator ?creator. }",
        "answers": [
            "http://dbpedia.org/resource/Seth_MacFarlane"
        ]
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   res:Mexico_City dbo:populationTotal ?population . } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Batman dbo:creator ?creator. }",
        "answers": [
            "http://dbpedia.org/resource/Bill_Finger",
            "http://dbpedia.org/resource/Bob_Kane"
        ]
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?population WHERE {   dbr:Canberra dbp:populationTotal ?population. }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?area WHERE {   dbr:North_Rhine-Westphalia dbo:areaTotal ?area . }",
        "answers": [
            "34084130000"
        ]
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?employees WHERE {   dbr:IBM dbp:numberOfEmployees ?employees. }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?cost WHERE {   dbr:Pulp_Fiction dbp:budget ?cost. }",
        "answers": [
            "$8\u20138.5 million"
        ]
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movie ?movieLabel WHERE {   dbr:Jesse_Eisenberg dbo:starring ?movie .   ?movie rdfs:label ?movieLabel .   FILTER (lang(?movieLabel) = 'en') }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dct: <http://purl.org/dc/terms/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?movie ?movieLabel WHERE {   ?movie dct:subject dbr:Category:Danish_films ;          dbo:country dbr:Denmark .   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/>  SELECT DISTINCT ?country WHERE {   dbr:Himalayas dbo:location ?country . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?country ?countryLabel ?area WHERE {   ?country dbo:area ?area .   ?country a dbo:Country .   FILTER(?area = MAX(?area)) } ORDER BY DESC(?area) LIMIT 1",
        "answers": [
            "50119801000000",
            "http://dbpedia.org/resource/Organization_for_Security_and_Co-operation_in_Europe"
        ]
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?almaMater WHERE {   dbr:Angela_Merkel dbo:almaMater ?almaMater. }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/>  SELECT ?creator WHERE {   dbr:Goofy dbp:creator ?creator. }",
        "answers": [
            "No answer"
        ]
    }
]