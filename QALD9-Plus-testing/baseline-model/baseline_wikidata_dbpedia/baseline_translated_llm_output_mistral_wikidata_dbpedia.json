[
    {
        "context": {
            "natural_language_question": "Who is the founder of Penguin Books?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To produce a SPARQL query for DBpedia to find the founder of Penguin Books, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?founder WHERE {\n  dbr:Penguin_Books dbo:founder ?founder.\n}\n```\n\nThis query uses the DBpedia ontology to find the founder of the resource `dbr:Penguin_Books`."
    },
    {
        "context": {
            "natural_language_question": "Which films did Stanley Kubrick direct?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to retrieve the films directed by Stanley Kubrick:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?film ?filmLabel\nWHERE {\n  dbr:Stanley_Kubrick dbo:director ?film .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query utilizes the DBpedia ontology to find the films directed by Stanley Kubrick and includes labels for the films in the desired language."
    },
    {
        "context": {
            "natural_language_question": "List all the musicals with music by Elton John.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to list all the musicals with music by Elton John:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?musical ?musicalLabel\nWHERE {\n  ?musical dbo:musicComposer dbr:Elton_John .\n  ?musical rdf:type dbo:MusicalWork .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query retrieves musical works from DBpedia where Elton John is listed as the music composer."
    },
    {
        "context": {
            "natural_language_question": "Who developed Skype?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out who developed Skype:\n\n```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?developerLabel WHERE {\n  ?skype dbo:developer ?developer .\n  ?skype dbp:name \"Skype\"@en .\n  ?developer rdfs:label ?developerLabel .\n  FILTER (lang(?developerLabel) = \"en\")\n}\n</sparql>\n```\n\nThis query searches for the developer of Skype in the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is a SPARQL query for DBpedia to retrieve a list of soccer clubs that play in the Bundesliga:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?club ?clubLabel\nWHERE {\n  ?club dbo:league dbr:Bundesliga .\n  ?club rdfs:label ?clubLabel .\n  FILTER (lang(?clubLabel) = 'en')\n}\n```\n\nThis query searches for entities (`?club`) that have the `dbo:league` property set to `dbr:Bundesliga` and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Here is the SPARQL query for DBpedia to find all actors starring in movies directed by William Shatner:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT DISTINCT ?actor ?actorLabel\nWHERE {\n  ?film dbo:director dbr:William_Shatner .\n  ?film dbo:starring ?actor .\n  ?actor rdfs:label ?actorLabel .\n  FILTER (lang(?actorLabel) = 'en')\n}\n```\n\nThis query retrieves the actors (`?actor`) and their labels (`?actorLabel`) who starred in movies (`?film`) directed by William Shatner (`dbr:William_Shatner`). The filter ensures that the actor labels are in English."
    },
    {
        "context": {
            "natural_language_question": "What is the highest mountain?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is a SPARQL query for DBpedia to find the highest mountain:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?mountain ?elevation\nWHERE {\n  ?mountain a dbo:Mountain ;\n           dbp:elevation ?elevation .\n}\nORDER BY DESC(?elevation)\nLIMIT 1\n```\n\nThis query will retrieve the highest mountain from DBpedia by selecting mountains and their elevations, then ordering them by elevation in descending order and limiting the result to the highest one."
    },
    {
        "context": {
            "natural_language_question": "How many films did Leonardo DiCaprio star in?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To query DBpedia for the number of films Leonardo DiCaprio starred in, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT (COUNT(?film) AS ?filmCount)\nWHERE {\n  ?film dbo:starring dbr:Leonardo_DiCaprio .\n}\n```\n\nThis query counts the number of films in which Leonardo DiCaprio is listed as a starring actor in DBpedia."
    },
    {
        "context": {
            "natural_language_question": "When was Olof Palme shot?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find out when Olof Palme was shot, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?date WHERE {\n  <http://dbpedia.org/resource/Olof_Palme> dbp:deathDate ?date.\n}\n```\n\nThis query retrieves the death date of Olof Palme from DBpedia, which corresponds to the date he was shot."
    },
    {
        "context": {
            "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find movies that star both Liz Taylor and Richard Burton:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?movie\nWHERE {\n  ?movie dbo:starring dbr:Elizabeth_Taylor .\n  ?movie dbo:starring dbr:Richard_Burton .\n}\n```\n\nThis query uses the `dbo:starring` property to find movies that have both Elizabeth Taylor and Richard Burton as actors."
    },
    {
        "context": {
            "natural_language_question": "Who developed Minecraft?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find out who developed Minecraft:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?developer WHERE {\n  dbr:Minecraft dbp:developer ?developer .\n}\n```\n\nThis query searches for the developer of Minecraft in the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "How much did the Lego Movie cost?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is a SPARQL query for DBpedia to find out how much \"The Lego Movie\" cost.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?budget\nWHERE {\n  dbr:The_Lego_Movie dbp:budget ?budget.\n}\n```\n\nThis query retrieves the budget for \"The Lego Movie\" from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "For which label did Elvis record his first album?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the label under which Elvis recorded his first album:\n\n```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nSELECT ?label WHERE {\n  dbr:Elvis_Presley dbo:recordLabel ?label .\n  ?album dbo:artist dbr:Elvis_Presley ;\n         dbo:recordLabel ?label ;\n         dbo:releaseDate ?date .\n  FILTER NOT EXISTS {\n    ?otherAlbum dbo:artist dbr:Elvis_Presley ;\n                dbo:recordLabel ?label ;\n                dbo:releaseDate ?otherDate .\n    FILTER (?otherDate < ?date)\n  }\n}\n</sparql>\n```\n\nThis query will retrieve the label of the first album recorded by Elvis Presley from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Give me the runtime of Toy Story.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for retrieving the runtime of the movie \"Toy Story\" from DBpedia.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?runtime WHERE {\n  dbr:Toy_Story dbp:runtime ?runtime .\n}\n```\n\nThis query selects the runtime of \"Toy Story\" from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to retrieve a list of all trumpet players who were bandleaders:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT ?trumpetPlayer ?name\nWHERE {\n  ?trumpetPlayer rdf:type dbo:MusicalArtist ;\n                 dbo:genre dbr:Trumpet ;\n                 dbo:occupation dbr:Bandleader .\n  ?trumpetPlayer dbp:name ?name .\n}\n```\n\nThis query retrieves musicians who play the trumpet and are also bandleaders, along with their names."
    },
    {
        "context": {
            "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the films directed by Garry Marshall in which Julia Roberts starred:\n\n```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?film\nWHERE {\n  ?film dbo:director dbr:Garry_Marshall ;\n        dbo:starring dbr:Julia_Roberts .\n}\n</sparql>\n```\n\nThis query uses DBpedia's ontology to find films that have both Garry Marshall as the director and Julia Roberts as a starring actor."
    },
    {
        "context": {
            "natural_language_question": "In which year was Rachel Stevens born?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the year in which Rachel Stevens was born:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?year WHERE {\n  dbr:Rachel_Stevens dbp:birthDate ?date .\n  BIND(year(?date) AS ?year)\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the most frequent cause of death?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the most frequent cause of death:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?cause (COUNT(?death) AS ?count)\nWHERE {\n  ?death dbo:cause ?cause.\n}\nGROUP BY ?cause\nORDER BY DESC(?count)\nLIMIT 1\n```\n\nThis query will retrieve the cause of death that occurs most frequently according to the data available in DBpedia."
    },
    {
        "context": {
            "natural_language_question": "How high is the Yokohama Marine Tower?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Below is the SPARQL query for DBpedia to find out how high the Yokohama Marine Tower is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?height\nWHERE {\n  dbr:Yokohama_Marine_Tower dbp:height ?height.\n}\n```\n\nThis query retrieves the height of the Yokohama Marine Tower from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What is the highest mountain in Italy?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the highest mountain in Italy:\n\n```sparql\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?mountain ?height WHERE {\n  ?mountain dbo:mountainRange dbr:Alps ;\n            dbo:location dbr:Italy ;\n            dbp:elevation ?height .\n}\nORDER BY DESC(?height)\nLIMIT 1\n</sparql>\n```\n\nThis query retrieves the highest mountain in Italy by ordering the mountains by their elevation in descending order and limiting the result to the top one."
    },
    {
        "context": {
            "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find the doctoral supervisor of Albert Einstein using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?supervisor\nWHERE {\n  dbr:Albert_Einstein dbo:doctoralAdvisor ?supervisor.\n}\n```\n\nThis query will retrieve the doctoral supervisor of Albert Einstein from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "What is Donald Trump's main business?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Let's translate the natural language question \"What is Donald Trump's main business?\" into a SPARQL query for DBpedia.\n\nHere's the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT ?business\nWHERE {\n  dbr:Donald_Trump dbo:occupation ?business .\n}\n```\n\nThis query asks for the occupations associated with Donald Trump, which might include his main business."
    },
    {
        "context": {
            "natural_language_question": "Who has Tom Cruise been married to?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find out who Tom Cruise has been married to using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?spouse WHERE {\n  dbr:Tom_Cruise dbo:spouse ?spouse.\n}\n```\n\nHere is the query formatted within the tags:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?spouse WHERE {\n  dbr:Tom_Cruise dbo:spouse ?spouse.\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "How many people live in Eurasia?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find out how many people live in Eurasia using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?population WHERE {\n  dbr:Eurasia dbo:populationTotal ?population .\n}\n```\n\nThis query retrieves the total population of Eurasia from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Who is the author of the interpretation of dreams?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find the author of \"The Interpretation of Dreams\":\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?author WHERE {\n  dbr:The_Interpretation_of_Dreams dbo:author ?author.\n}\n```\n\nThis query retrieves the author of \"The Interpretation of Dreams\" from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "When was John Adams born?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the birth date of John Adams:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?birthDate WHERE {\n  dbr:John_Adams dbp:birthDate ?birthDate.\n}\n```\n\nThis query uses the DBpedia ontology to retrieve the birth date of John Adams."
    },
    {
        "context": {
            "natural_language_question": "how much is the total population of european union?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find the total population of the European Union, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?population WHERE {\n  dbr:European_Union dbo:populationEstimate ?population.\n}\n```\n\nThis query selects the population estimate for the European Union from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Give me the currency of China.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the currency of China:\n\n```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?currency\nWHERE {\n  dbr:China dbo:currency ?currency.\n}\n</sparql>\n```\n\nThis query retrieves the currency associated with China from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "When was the death of Shakespeare?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the death date of Shakespeare:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?deathDate WHERE {\n  dbr:William_Shakespeare dbo:deathDate ?deathDate .\n}\n```\n\nThis query will retrieve the death date of William Shakespeare from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Which rockets were launched from Baikonur?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here's the SPARQL query for DBpedia to find rockets launched from Baikonur:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?rocket ?rocketLabel\nWHERE {\n  ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome .\n  ?rocket rdfs:label ?rocketLabel .\n  FILTER (lang(?rocketLabel) = 'en')\n}\n```\n\nThis query retrieves rockets (`?rocket`) and their labels (`?rocketLabel`) that have Baikonur Cosmodrome as their launch site. The filter ensures that the labels are in English."
    },
    {
        "context": {
            "natural_language_question": "Give me all islands that belong to Japan.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To query DBpedia for all islands that belong to Japan, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?island ?islandLabel\nWHERE {\n  ?island dbo:country dbr:Japan ;\n          rdf:type dbo:Island .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query retrieves all resources of type `dbo:Island` that are located in `dbr:Japan`. The `SERVICE wikibase:label` clause is used to get the labels of the islands in the preferred language."
    },
    {
        "context": {
            "natural_language_question": "Who developed the video game World of Warcraft?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! To produce a SPARQL query for DBpedia to find out who developed the video game World of Warcraft, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?developer WHERE {\n  dbr:World_of_Warcraft dbo:developer ?developer.\n}\n```\n\nThis query uses the DBpedia ontology to find the developer of World of Warcraft."
    },
    {
        "context": {
            "natural_language_question": "Give me all companies in the advertising industry.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To retrieve all companies in the advertising industry from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?company ?companyLabel\nWHERE {\n  ?company dbo:industry dbr:Advertising .\n  ?company rdfs:label ?companyLabel .\n  FILTER (lang(?companyLabel) = 'en')\n}\nORDER BY ?companyLabel\n```\n\nThis query selects all resources (companies) that have the industry property set to \"Advertising\" and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Which university did Angela Merkel attend?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out which university Angela Merkel attended:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?university\nWHERE {\n  dbr:Angela_Merkel dbo:almaMater ?university.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To retrieve all the TV shows featuring Neil Patrick Harris from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?tvShow ?tvShowLabel\nWHERE {\n  ?tvShow dbo:starring dbr:Neil_Patrick_Harris.\n  ?tvShow a dbo:TelevisionShow.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query will search for resources classified as television shows (`dbo:TelevisionShow`) that feature Neil Patrick Harris (`dbo:starring dbr:Neil_Patrick_Harris`). The `SERVICE wikibase:label` clause is used to retrieve the labels for the TV shows."
    },
    {
        "context": {
            "natural_language_question": "Give me all movies with Tom Cruise.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To retrieve all movies with Tom Cruise from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?movie ?movieLabel\nWHERE {\n  ?movie dbo:starring res:Tom_Cruise .\n  ?movie rdf:type dbo:Film .\n  ?movie rdfs:label ?movieLabel .\n  FILTER(LANG(?movieLabel) = 'en')\n}\n```\n\n</sparql>\n\nThis query selects the movies (`?movie`) that have Tom Cruise as a starring actor (`dbo:starring res:Tom_Cruise`), ensures the resource is a film (`rdf:type dbo:Film`), and retrieves the movie's label in English (`?movieLabel`)."
    },
    {
        "context": {
            "natural_language_question": "What country is Mount Everest in?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the country where Mount Everest is located:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?country WHERE {\n  dbr:Mount_Everest dbo:location ?country.\n}\n```\n\nYou can use this query to retrieve the country of Mount Everest from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Where was JFK assassinated?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find out where JFK was assassinated:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?location WHERE {\n  dbr:John_F._Kennedy_assassination dbo:location ?location .\n}\n```\n\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "Which river does the Brooklyn Bridge cross?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Below is the SPARQL query for DBpedia to find out which river the Brooklyn Bridge crosses.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?river WHERE {\n  dbr:Brooklyn_Bridge dbp:crosses ?river.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give all swimmers that were born in Moscow.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find all swimmers born in Moscow:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?swimmer ?swimmerLabel\nWHERE {\n  ?swimmer dbo:birthPlace dbr:Moscow .\n  ?swimmer a dbo:Athlete .\n  ?swimmer dbo:sport dbr:Swimming .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What was the last movie with Alec Guinness?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the last movie with Alec Guinness:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?movie ?movieLabel\nWHERE {\n  dbr:Alec_Guinness dbo:starring ?movie .\n  ?movie dbp:releaseDate ?date .\n}\nORDER BY DESC(?date)\nLIMIT 1\n```\n\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "What is the second highest mountain on Earth?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find the second highest mountain on Earth:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?mountain ?elevation WHERE {\n  ?mountain dbo:elevation ?elevation .\n}\nORDER BY DESC(?elevation)\nLIMIT 1 OFFSET 1\n```\n\nThis query selects mountains and their elevations, orders them by elevation in descending order, and then limits the result to the second highest mountain by using `LIMIT 1 OFFSET 1`."
    },
    {
        "context": {
            "natural_language_question": "What is the population of Cairo?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the population of Cairo:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?population WHERE {\n  dbr:Cairo dbo:populationTotal ?population.\n}\n```\n\nThis query retrieves the population of Cairo from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Which people were born in Heraklion?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Given the context, we need to create a SPARQL query for DBpedia to find people who were born in Heraklion. Below is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?person ?personLabel\nWHERE {\n  ?person dbo:birthPlace dbr:Heraklion .\n  ?person rdfs:label ?personLabel .\n  FILTER (lang(?personLabel) = 'en')\n}\n```\n\nThis query selects persons who have Heraklion as their birthplace and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "How many children did Benjamin Franklin have?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out how many children Benjamin Franklin had:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT (COUNT(?child) AS ?numberOfChildren)\nWHERE {\n  dbr:Benjamin_Franklin dbp:child ?child.\n}\n```\n\nThis query retrieves the count of children associated with Benjamin Franklin from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to retrieve the elevation of D\u00fcsseldorf Airport.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?elevation\nWHERE {\n  dbr:D\u00fcsseldorf_Airport dbo:elevation ?elevation .\n}\n```\n\nThis query uses the DBpedia ontology and resource namespaces to find the elevation of D\u00fcsseldorf Airport."
    },
    {
        "context": {
            "natural_language_question": "In which country is Mecca located?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the country where Mecca is located:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?countryLabel WHERE {\n  dbr:Mecca dbo:country ?country .\n  ?country rdfs:label ?countryLabel .\n  FILTER (lang(?countryLabel) = \"en\")\n}\n```\n\nThis query retrieves the country where Mecca is located by looking up the `dbo:country` property for the resource `dbr:Mecca` and then extracting the English label for the country."
    },
    {
        "context": {
            "natural_language_question": "How tall is Claudia Schiffer?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to get the height of Claudia Schiffer:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?height WHERE {\n  dbr:Claudia_Schiffer dbp:height ?height.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Which holidays are celebrated around the world?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Below is a SPARQL query for DBpedia that retrieves information about holidays celebrated around the world:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT ?holiday ?holidayLabel\nWHERE {\n  ?holiday rdf:type dbo:Holiday .\n  ?holiday rdfs:label ?holidayLabel .\n  FILTER (lang(?holidayLabel) = 'en')\n}\nORDER BY ?holidayLabel\n```\n\nThis query selects all resources that are of type `dbo:Holiday` and retrieves their labels in English. The results are ordered by the holiday label."
    },
    {
        "context": {
            "natural_language_question": "What kind of music did Lou Reed play?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out what kind of music Lou Reed played:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?genre\nWHERE {\n  dbr:Lou_Reed dbo:genre ?genre .\n}\n</sparql>\n\nThis query retrieves the genres associated with Lou Reed from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me the birth place of Frank Sinatra.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the birth place of Frank Sinatra:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?birthPlace WHERE {\n  dbr:Frank_Sinatra dbo:birthPlace ?birthPlace\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Which city has the least inhabitants?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To find the city with the least inhabitants using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?city ?population\nWHERE {\n  ?city a dbo:City ;\n        dbo:populationTotal ?population .\n}\nORDER BY ASC(?population)\nLIMIT 1\n```\n\nThis query selects cities and their populations, sorts them in ascending order by population, and limits the result to the city with the least inhabitants."
    },
    {
        "context": {
            "natural_language_question": "Which television shows were created by Walt Disney?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find television shows created by Walt Disney:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?show ?showLabel\nWHERE {\n  ?show dbo:creator dbr:Walt_Disney .\n  ?show rdf:type dbo:TelevisionShow .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give me all Swedish holidays.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To produce a SPARQL query for DBpedia to retrieve all Swedish holidays, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?holiday ?holidayLabel\nWHERE {\n  ?holiday dbo:country dbr:Sweden ;\n           rdfs:label ?holidayLabel .\n  FILTER (lang(?holidayLabel) = 'en')\n}\n```\n\nThis query retrieves all holidays associated with Sweden from DBpedia, along with their English labels."
    },
    {
        "context": {
            "natural_language_question": "What is the net income of Apple?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to retrieve the net income of Apple.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?netIncome WHERE {\n  <http://dbpedia.org/resource/Apple_Inc.> dbo:netIncome ?netIncome.\n}\n```\n\n</sparql>\n\nThis query uses the DBpedia ontology and properties to find the net income of Apple Inc."
    },
    {
        "context": {
            "natural_language_question": "Where did Abraham Lincoln die?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out where Abraham Lincoln died:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?place WHERE {\n  dbr:Abraham_Lincoln dbo:deathPlace ?place.\n}\n```\n\nThis query retrieves the death place of Abraham Lincoln from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to get the capitals of all countries that the Himalayas run through:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?country ?capital WHERE {\n  dbr:Himalayas dbo:location ?country .\n  ?country dbo:capital ?capital .\n}\n```\n</sparql>\n\nThis query will retrieve the capitals of the countries that are located in the Himalayas region."
    },
    {
        "context": {
            "natural_language_question": "In which country is the Limerick Lake?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the country where Limerick Lake is located:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?country WHERE {\n  dbr:Limerick_Lake dbo:country ?country.\n}\n```\n\nThis query uses the DBpedia ontology and resource namespaces to find the country associated with Limerick Lake."
    },
    {
        "context": {
            "natural_language_question": "How tall is Michael Jordan?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find out how tall Michael Jordan is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?height\nWHERE {\n  res:Michael_Jordan dbo:height ?height .\n}\n```\n\nThis query retrieves the height of Michael Jordan from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find films starring Clint Eastwood that he directed himself:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT DISTINCT ?film ?filmLabel\nWHERE {\n  ?film dbo:starring dbr:Clint_Eastwood .\n  ?film dbo:director dbr:Clint_Eastwood .\n  ?film rdfs:label ?filmLabel .\n  FILTER (lang(?filmLabel) = 'en')\n}\n```\n\nThis query retrieves distinct films that have Clint Eastwood as both the starring actor and the director, and it includes the film labels in English."
    },
    {
        "context": {
            "natural_language_question": "In which countries can you pay using the West African CFA franc?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the countries where you can pay using the West African CFA franc:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?country ?countryLabel WHERE {\n  ?country dbo:currency dbr:West_African_CFA_franc.\n  ?country rdfs:label ?countryLabel.\n  FILTER (lang(?countryLabel) = 'en')\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "how much is the population Iraq?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find the population of Iraq:\n\n```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?population WHERE {\n  dbr:Iraq dbp:populationTotal ?population .\n}\n</sparql>\n```\n\nThis query uses the prefixes for DBpedia ontology (`dbo`), DBpedia properties (`dbp`), and DBpedia resources (`dbr`). It selects the population of Iraq using the `dbp:populationTotal` property."
    },
    {
        "context": {
            "natural_language_question": "Which holidays are celebrated around the world?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find holidays celebrated around the world using DBpedia, you can create a SPARQL query that retrieves instances of holidays. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT ?holiday ?label\nWHERE {\n  ?holiday rdf:type dbo:Holiday .\n  ?holiday rdfs:label ?label .\n  FILTER (lang(?label) = 'en')\n}\n```\n\nThis query searches for resources of type `dbo:Holiday` and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Which Greek parties are pro-European?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Below is the SPARQL query for DBpedia to find pro-European Greek parties:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nSELECT ?party ?partyLabel\nWHERE {\n  ?party dct:subject dbr:Category:Political_parties_in_Greece.\n  ?party dbp:position ?position.\n  FILTER(CONTAINS(LCASE(?position), \"pro-european\")).\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query searches for Greek political parties that have a \"pro-European\" position stated in DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to get the birthdays of all actors of the television show \"Charmed\":\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nSELECT ?actor ?birthday WHERE {\n  dbr:Charmed_(TV_series) dbo:starring ?actor .\n  ?actor dbp:birthDate ?birthday .\n}\n```\n\nThis query assumes that the starring actors are linked through the `dbo:starring` property and that their birthdates are stored under the `dbp:birthDate` property."
    },
    {
        "context": {
            "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! To find the artistic movement associated with the painter of \"The Three Dancers\" in DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?movement WHERE {\n  dbr:The_Three_Dancers dbp:artist ?artist .\n  ?artist dbo:movement ?movement .\n}\n```\n\nThis query retrieves the artistic movement (`?movement`) of the artist (`?artist`) who painted \"The Three Dancers\". It uses DBpedia's ontology to link the painting to its artist and then to the artistic movement."
    },
    {
        "context": {
            "natural_language_question": "Which actors were born in Germany?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here's the SPARQL query for DBpedia to find actors who were born in Germany:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?actor ?actorName WHERE {\n  ?actor dbo:birthPlace dbr:Germany .\n  ?actor dbo:occupation dbr:Actor .\n  ?actor dbp:name ?actorName .\n}\n```\n\nThis query selects actors (`?actor`) who have Germany (`dbr:Germany`) as their birthplace and lists their names (`?actorName`)."
    },
    {
        "context": {
            "natural_language_question": "Who designed the Brooklyn Bridge?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out who designed the Brooklyn Bridge:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?designer WHERE {\n  dbr:Brooklyn_Bridge dbp:designer ?designer .\n}\n```\n\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "Who wrote the Game of Thrones theme?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find out who wrote the Game of Thrones theme:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?composer WHERE {\n  dbr:Game_of_Thrones_(TV_series) dbp:themeMusicComposer ?composer.\n}\n```\n\nThis query looks for the composer of the theme music for the Game of Thrones TV series in the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to retrieve all movies directed by Francis Ford Coppola:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?movie WHERE {\n  ?movie dbo:director dbr:Francis_Ford_Coppola .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the birth name of Adele?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the birth name of Adele:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?birthName WHERE {\n  dbr:Adele dbo:birthName ?birthName .\n}\n```\n\nThis query retrieves the birth name of Adele from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What was the first Queen album?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the first Queen album:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?album ?albumLabel\nWHERE {\n  dbr:Queen_(band) dbo:genre ?genre ;\n                   dbo:album ?album .\n  ?album dbo:releaseDate ?releaseDate .\n  FILTER NOT EXISTS {\n    dbr:Queen_(band) dbo:album ?otherAlbum .\n    ?otherAlbum dbo:releaseDate ?otherReleaseDate .\n    FILTER (?otherReleaseDate < ?releaseDate)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?releaseDate\nLIMIT 1\n```\n\nThe above query will retrieve the first album of the band Queen from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What is the currency of the Czech Republic?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the currency of the Czech Republic:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?currency ?currencyLabel\nWHERE {\n  dbr:Czech_Republic dbo:currency ?currency.\n  ?currency rdfs:label ?currencyLabel.\n  FILTER (lang(?currencyLabel) = 'en')\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find all people who were born in Vienna and died in Berlin, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?person ?personLabel\nWHERE {\n  ?person dbo:birthPlace dbr:Vienna ;\n          dbo:deathPlace dbr:Berlin .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```\n\nThis query uses the `dbo:birthPlace` and `dbo:deathPlace` properties to filter people who were born in Vienna and died in Berlin, respectively. The `dbr:Vienna` and `dbr:Berlin` resources represent the cities of Vienna and Berlin in DBpedia. The `SERVICE wikibase:label` part is used to retrieve the labels of the people in the preferred language."
    },
    {
        "context": {
            "natural_language_question": "Which bridges cross the Seine?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find the bridges that cross the Seine:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?bridge ?bridgeLabel\nWHERE {\n  ?bridge dbo:crosses dbr:Seine .\n  ?bridge rdfs:label ?bridgeLabel .\n  FILTER (LANG(?bridgeLabel) = 'en')\n}\n```\n\nThis query searches for bridges (`?bridge`) that have the property `dbo:crosses` with the value `dbr:Seine` and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Which musician wrote the most books?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To find the musician who wrote the most books in DBpedia, you can use the following SPARQL query:\n\n```sparql\nSELECT ?musician (COUNT(?book) AS ?bookCount) WHERE {\n  ?musician dbo:profession dbr:Musician .\n  ?musician dbo:publication ?book .\n  ?book dbo:author ?musician .\n}\nGROUP BY ?musician\nORDER BY DESC(?bookCount)\nLIMIT 1\n```\n\nThis query selects musicians who have the profession of \"Musician\" and counts the number of publications (books) they have authored. The results are grouped by musician and ordered by the number of books in descending order, with the top result being the musician who wrote the most books."
    },
    {
        "context": {
            "natural_language_question": "Which television shows were created by John Cleese?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the television shows created by John Cleese:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT DISTINCT ?show ?showLabel\nWHERE {\n  ?show dbo:creator dbr:John_Cleese .\n  ?show a dbo:TelevisionShow .\n  ?show rdfs:label ?showLabel .\n  FILTER (LANG(?showLabel) = 'en')\n}\n```\n\nThis query selects television shows (`dbo:TelevisionShow`) that have John Cleese (`dbr:John_Cleese`) as the creator (`dbo:creator`) and retrieves their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find all writers that won the Nobel Prize in literature using the DBpedia knowledge graph, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?writer WHERE {\n  ?writer dbo:award dbr:Nobel_Prize_in_Literature .\n  ?writer a dbo:Writer .\n}\n```\n\nThis query selects all individuals (`?writer`) who have received the Nobel Prize in Literature (`dbr:Nobel_Prize_in_Literature`) and are classified as writers (`dbo:Writer`)."
    },
    {
        "context": {
            "natural_language_question": "Who discovered Ceres?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find out who discovered Ceres:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?discoverer\nWHERE {\n  dbr:Ceres_(dwarf_planet) dbp:discoverer ?discoverer.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To generate a SPARQL query for DBpedia that retrieves a list of all bandleaders who play the trumpet, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?bandleader ?bandleaderLabel\nWHERE {\n  ?bandleader dbo:instrument dbr:Trumpet ;\n              dbo:occupation dbr:Bandleader .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?bandleaderLabel\n```\n\nThis query uses DBpedia properties to find individuals who are bandleaders and play the trumpet. The `dbo:instrument` property is used to match the instrument (trumpet), and the `dbo:occupation` property is used to match the occupation (bandleader). The results are ordered by the bandleader's label."
    },
    {
        "context": {
            "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia to find all basketball players that are higher than 2 meters:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?player ?height WHERE {\n  ?player dbo:height ?height .\n  ?player dbo:profession dbr:Basketball_player .\n  FILTER (?height > 2.0)\n}\n```\n\n</sparql>\n\nThis query retrieves all basketball players from DBpedia who have a height greater than 2 meters."
    },
    {
        "context": {
            "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure! Here's the SPARQL query for DBpedia to find the films in which both Julia Roberts and Richard Gere played:\n\n```sparql\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?film ?filmLabel\nWHERE {\n  ?film dbo:starring dbr:Julia_Roberts .\n  ?film dbo:starring dbr:Richard_Gere .\n  ?film rdfs:label ?filmLabel .\n  FILTER (LANG(?filmLabel) = \"en\")\n}\n</sparql>\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the capital of Canada?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the capital of Canada:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?capital WHERE {\n  dbr:Canada dbo:capital ?capital\n}\n```\n\nThis query uses DBpedia's ontology to find the capital of Canada."
    },
    {
        "context": {
            "natural_language_question": "Which soccer players were born on Malta?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here's the SPARQL query for DBpedia to retrieve soccer players born on Malta:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?player ?playerLabel\nWHERE {\n  ?player dbo:birthPlace dbr:Malta .\n  ?player dbo:profession dbr:Soccer_player .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the capital of Cameroon?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To find the capital of Cameroon using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?capital\nWHERE {\n  dbr:Cameroon dbo:capital ?capital .\n}\n```\n\nThis query uses the DBpedia ontology to find the capital of Cameroon."
    },
    {
        "context": {
            "natural_language_question": "How many programming languages are there?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Given the context and the natural language question \"How many programming languages are there?\", here is a SPARQL query for DBpedia:\n\n```sparql\nSELECT COUNT(?language) AS ?count\nWHERE {\n  ?language rdf:type dbo:ProgrammingLanguage .\n}\n```\n\nThis query will count all instances of the `dbo:ProgrammingLanguage` class in DBpedia, providing the total number of programming languages listed in the knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me all cosmonauts.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To retrieve all cosmonauts from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?cosmonaut WHERE {\n  ?cosmonaut dbo:occupation dbr:Cosmonaut .\n}\n```\n\nThis query selects all entities (?cosmonaut) that have the occupation of \"Cosmonaut\" in the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Who created Family Guy?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! To find out who created \"Family Guy\" using DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?creatorLabel WHERE {\n  dbr:Family_Guy dbo:creator ?creator .\n  ?creator rdfs:label ?creatorLabel .\n  FILTER (lang(?creatorLabel) = 'en')\n}\n```\n\nThis query retrieves the creator of \"Family Guy\" from DBpedia and ensures that the label is in English."
    },
    {
        "context": {
            "natural_language_question": "How much is the population of mexico city ?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To retrieve the population of Mexico City from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?population WHERE {\n  <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?population.\n}\n```\n\nThis query selects the population of Mexico City using the `dbo:populationTotal` property from the DBpedia ontology."
    },
    {
        "context": {
            "natural_language_question": "Who created Batman?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find out who created Batman in DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?creator WHERE {\n  dbr:Batman dbo:creator ?creator.\n}\n```\n\nThis query retrieves the creator of Batman from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "How many people live in the capital of Australia?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To retrieve the population of the capital of Australia from DBpedia, you can use the following SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?population WHERE {\n  dbr:Canberra dbo:populationTotal ?population.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find the total area of North Rhine-Westphalia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?area WHERE {\n  res:North_Rhine-Westphalia dbo:areaTotal ?area.\n}\n```\n\nThis query retrieves the total area of North Rhine-Westphalia from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "How many employees does IBM have?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to find out how many employees IBM has:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?employees WHERE {\n  <http://dbpedia.org/resource/IBM> dbo:numberOfEmployees ?employees.\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "How much did Pulp Fiction cost?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find out how much \"Pulp Fiction\" cost, you can query for the budget of the movie. Below is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?budget\nWHERE {\n  dbr:Pulp_Fiction dbp:budget ?budget .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What movies does Jesse Eisenberg play in?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find movies that Jesse Eisenberg plays in:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?movie ?movieLabel\nWHERE {\n  dbr:Jesse_Eisenberg dbo:starring ?movie .\n  ?movie rdfs:label ?movieLabel .\n  FILTER(LANG(?movieLabel) = 'en')\n}\n```\n\nThis query retrieves movies (?movie) that Jesse Eisenberg has starred in, along with their labels in English."
    },
    {
        "context": {
            "natural_language_question": "Give me all Danish movies.",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Below is the SPARQL query for DBpedia to retrieve all Danish movies:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?movie ?movieLabel\nWHERE {\n  ?movie dbo:country dbr:Denmark ;\n         dbo:language dbr:Danish_language .\n  OPTIONAL { ?movie rdfs:label ?movieLabel }\n  FILTER (lang(?movieLabel) = 'en')\n}\n```\n\nThis query retrieves all movies that are associated with Denmark as the country and the Danish language. The `OPTIONAL` clause ensures that the movie label is retrieved if available, and the `FILTER` clause restricts the labels to English."
    },
    {
        "context": {
            "natural_language_question": "To which countries does the Himalayan mountain system extend?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Certainly! Here is the SPARQL query for DBpedia to find out which countries the Himalayan mountain system extends to:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?countryLabel WHERE {\n  dbr:Himalayas dbp:mountainRange ?country .\n  ?country rdf:type dbo:Country .\n  ?country rdfs:label ?countryLabel .\n  FILTER (lang(?countryLabel) = 'en')\n}\n```\n\nExplanation:\n- The `PREFIX` statements define the namespaces used in the query.\n- The `SELECT DISTINCT ?countryLabel` clause specifies that we want to retrieve distinct country labels.\n- The `dbr:Himalayas dbp:mountainRange ?country` pattern matches resources where the Himalayas are related to a country through the `dbp:mountainRange` property.\n- The `?country rdf:type dbo:Country` pattern ensures that the related resource is a country.\n- The `?country rdfs:label ?countryLabel` pattern retrieves the label of the country.\n- The `FILTER (lang(?countryLabel) = 'en')` clause filters the results to ensure that the labels are in English."
    },
    {
        "context": {
            "natural_language_question": "What is the largest country in the world?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To find the largest country in the world using DBpedia, you can use the following SPARQL query. This query retrieves countries with their areas and orders them in descending order to find the largest one.\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?country ?area WHERE {\n  ?country a dbo:Country ;\n           dbo:areaTotal ?area .\n}\nORDER BY DESC(?area)\nLIMIT 1\n```\n\nThis query will give you the country with the largest total area according to DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find the alma mater of Angela Merkel, you need to query the DBpedia ontology for information related to her education. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT ?almaMater\nWHERE {\n  dbr:Angela_Merkel dbo:almaMater ?almaMater .\n}\n```\n\nThis query uses the DBpedia ontology to find the alma mater of Angela Merkel by looking for the `dbo:almaMater` property associated with the resource `dbr:Angela_Merkel`."
    },
    {
        "context": {
            "natural_language_question": "Who created Goofy?",
            "sparql_query_kg1": "",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "instruction": "Given the information above, produce a SPARQL query for KG2. In your answer please hightlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'."
        },
        "sparql_query_kg2": " Sure, here's the SPARQL query for DBpedia to find out who created Goofy:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\n\nSELECT ?creator\nWHERE {\n  dbr:Goofy dbo:creator ?creator .\n}\n```"
    }
]