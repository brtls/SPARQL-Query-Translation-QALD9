[
  {
    "natural_language_question": "Who is the founder of Penguin Books?",
    "sparql_query_kg2": "PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT ?founder WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?founder . }"
  },
  {
    "natural_language_question": "Which films did Stanley Kubrick direct?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?film WHERE { dbr:Stanley_Kubrick dbo:director ?film . ?film rdfs:label ?filmLabel . FILTER(LANGMATCHES(LANG(?filmLabel), 'en')) }"
  },
  {
    "natural_language_question": "List all the musicals with music by Elton John.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Musical ; dbpedia-owl:musicBy dbpedia:Elton_John . }"
  },
  {
    "natural_language_question": "Who developed Skype?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?developer WHERE { dbr:Skype dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?soccerClub WHERE { ?soccerClub rdf:type dbpedia-owl:SoccerClub . ?soccerClub dbpprop:league dbpedia:Bundesliga . }"
  },
  {
    "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?movie ?actor WHERE { ?movie dbo:director dbr:William_Shatner . ?movie dbo:starring ?actor . }"
  },
  {
    "natural_language_question": "What is the highest mountain?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri ?elevation WHERE { ?uri a dbo:Mountain ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "How many films did Leonardo DiCaprio star in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a dbo:Film ; dbo:starring dbr:Leonardo_DiCaprio . }"
  },
  {
    "natural_language_question": "When was Olof Palme shot?",
    "sparql_query_kg2": "PREFIX es: <http://dbpedia.org/resource/> PREFIX onto: <http://dbpedia.org/ontology/> SELECT ?date WHERE { es:Olof_Palme onto:deathDate ?date . }"
  },
  {
    "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?movie WHERE { ?movie dbp:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?movie dbp:starring <http://dbpedia.org/resource/Richard_Burton> . }"
  },
  {
    "natural_language_question": "Who developed Minecraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { <http://dbpedia.org/resource/Minecraft> dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "How much did the Lego Movie cost?",
    "sparql_query_kg2": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val }"
  },
  {
    "natural_language_question": "For which label did Elvis record his first album?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?label WHERE { ?album a dbpedia-owl:Album . ?album dbpedia-owl:artist <http://dbpedia.org/resource/Elvis_Presley> . ?album dbpedia-owl:releaseDate ?date . ?album dbpedia-owl:recordLabel ?label . } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "Give me the runtime of Toy Story.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Toy_Story dbo:runtime ?val . }"
  },
  {
    "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Bandleader . ?uri dbo:instrument dbr:Trumpet . }"
  },
  {
    "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?film WHERE { ?film a dbo:Film . ?film dbo:director dbr:Garry_Marshall . ?film dbo:starring dbr:Julia_Roberts . }"
  },
  {
    "natural_language_question": "In which year was Rachel Stevens born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?year WHERE { dbpedia:Rachel_Stevens dbo:birthYear ?year. }"
  },
  {
    "natural_language_question": "What is the most frequent cause of death?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbo:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
  },
  {
    "natural_language_question": "How high is the Yokohama Marine Tower?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?height WHERE { dbr:Yokohama_Marine_Tower dbo:height ?height . }"
  },
  {
    "natural_language_question": "What is the highest mountain in Italy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri ?elevation WHERE { ?uri a dbo:Mountain ; dbo:locatedInArea dbr:Italy ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }"
  },
  {
    "natural_language_question": "What is Donald Trump's main business?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbp:owner <http://dbpedia.org/resource/Donald_Trump> . ?uri a dbo:Company . ?uri rdfs:label ?label . FILTER(langMatches(lang(?label), 'en')) . FILTER(CONTAINS(lcase(str(?label)), 'business')) . MINUS { ?uri dbp:disbanded ?disbanded . } }"
  },
  {
    "natural_language_question": "Who has Tom Cruise been married to?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?o2 WHERE { <http://dbpedia.org/resource/Tom_Cruise> dbo:spouse ?o2 . }"
  },
  {
    "natural_language_question": "How many people live in Eurasia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?val WHERE { dbr:Eurasia dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Who is the author of the interpretation of dreams?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?author WHERE { <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbo:author ?author . }"
  },
  {
    "natural_language_question": "When was John Adams born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?birthDate WHERE { dbpedia:John_Adams dbo:birthDate ?birthDate . }"
  },
  {
    "natural_language_question": "how much is the total population of european union?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { <http://dbpedia.org/resource/European_Union> dbo:populationTotal ?population . OPTIONAL { <http://dbpedia.org/resource/European_Union> dbo:populationTotal ?population . } FILTER(isNumeric(?population)) BIND(REPLACE(STR(?population), \",\", \"\") AS ?formattedPopulation) }"
  },
  {
    "natural_language_question": "Give me the currency of China.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { dbpedia:China dbpedia-owl:currency ?o1 . }"
  },
  {
    "natural_language_question": "When was the death of Shakespeare?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?deathDate WHERE { dbpedia:William_Shakespeare dbo:deathDate ?deathDate . }"
  },
  {
    "natural_language_question": "Which rockets were launched from Baikonur?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?rocket WHERE { ?rocket a dbo:Rocket . ?rocket dbo:launchSite dbpedia:BaikonurCosmodrome . }"
  },
  {
    "natural_language_question": "Give me all islands that belong to Japan.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?island WHERE { ?island a dbo:Island ; dbo:country dbr:Japan . }"
  },
  {
    "natural_language_question": "Who developed the video game World of Warcraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { dbpedia:World_of_Warcraft dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "Give me all companies in the advertising industry.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:type dbpedia:Company ; dbo:industry dbpedia:Advertising . }"
  },
  {
    "natural_language_question": "Which university did Angela Merkel attend?",
    "sparql_query_kg2": "PREFIX dbpedia2: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?almaMater WHERE { dbpedia2:Angela_Merkel dbpedia-owl:almaMater ?almaMater . }"
  },
  {
    "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?tvShow WHERE { ?tvShow a dbo:TelevisionShow . ?tvShow dbo:starring db:Neil_Patrick_Harris . }"
  },
  {
    "natural_language_question": "Give me all movies with Tom Cruise.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?film WHERE { ?film dbo:starring dbr:Tom_Cruise . }"
  },
  {
    "natural_language_question": "What country is Mount Everest in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Mount_Everest> dbo:locatedInArea ?country . }"
  },
  {
    "natural_language_question": "Where was JFK assassinated?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?deathPlace WHERE { dbr:John_F._Kennedy dbo:deathPlace ?deathPlace . }"
  },
  {
    "natural_language_question": "Which river does the Brooklyn Bridge cross?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?river WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:crosses ?river }"
  },
  {
    "natural_language_question": "Give all swimmers that were born in Moscow.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Swimmer ; dbo:birthPlace dbp:Moscow . FILTER(ISURI(?uri)) }"
  },
  {
    "natural_language_question": "What was the last movie with Alec Guinness?",
    "sparql_query_kg2": "SELECT DISTINCT ?film ?releaseDate WHERE { ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> . ?film <http://dbpedia.org/ontology/releaseDate> ?releaseDate . } ORDER BY DESC(?releaseDate) LIMIT 1"
  },
  {
    "natural_language_question": "What is the second highest mountain on Earth?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?res ?elevation WHERE { ?res a dbo:Mountain . ?res dbo:location <http://dbpedia.org/resource/Earth> . ?res dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
  },
  {
    "natural_language_question": "What is the population of Cairo?",
    "sparql_query_kg2": "SELECT ?population WHERE { <http://dbpedia.org/resource/Cairo> <http://dbpedia.org/ontology/populationTotal> ?population }"
  },
  {
    "natural_language_question": "Which people were born in Heraklion?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:Person . ?uri dbo:birthPlace dbpedia:Heraklion . }"
  },
  {
    "natural_language_question": "How many children did Benjamin Franklin have?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?uri . }"
  },
  {
    "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?elevation WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbo:elevation ?elevation . }"
  },
  {
    "natural_language_question": "In which country is Mecca located?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?res WHERE { <http://dbpedia.org/resource/Mecca> dbo:country ?res . }"
  },
  {
    "natural_language_question": "How tall is Claudia Schiffer?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?height WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> dbo:height ?height . }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:Holiday }"
  },
  {
    "natural_language_question": "What kind of music did Lou Reed play?",
    "sparql_query_kg2": "SELECT DISTINCT ?o WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?o }"
  },
  {
    "natural_language_question": "Give me the birth place of Frank Sinatra.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?birthPlace WHERE { <http://dbpedia.org/resource/Frank_Sinatra> dbo:birthPlace ?birthPlace }"
  },
  {
    "natural_language_question": "Which city has the least inhabitants?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . ?uri dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by Walt Disney?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:TelevisionShow ; dbo:creator dbr:Walt_Disney . }"
  },
  {
    "natural_language_question": "Give me all Swedish holidays.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:Holiday . ?uri dbo:country dbpedia:Sweden . }"
  },
  {
    "natural_language_question": "What is the net income of Apple?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?netIncome WHERE { dbr:Apple_Inc. dbo:netIncome ?netIncome . }"
  },
  {
    "natural_language_question": "Where did Abraham Lincoln die?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> CONSTRUCT { dbr:Abraham_Lincoln dbp:deathPlace ?place . } WHERE { dbr:Abraham_Lincoln dbp:deathPlace ?place . }"
  },
  {
    "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?capital WHERE { dbr:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }"
  },
  {
    "natural_language_question": "In which country is the Limerick Lake?",
    "sparql_query_kg2": "PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?country . }"
  },
  {
    "natural_language_question": "How tall is Michael Jordan?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Michael_Jordan> dbo:height ?val . }"
  },
  {
    "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?film WHERE { ?film dbo:director dbr:Clint_Eastwood ; dbo:starring dbr:Clint_Eastwood . }"
  },
  {
    "natural_language_question": "In which countries can you pay using the West African CFA franc?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> DESCRIBE ?s ?o WHERE { ?s dbo:currency dbpedia:West_African_CFA_franc . }"
  },
  {
    "natural_language_question": "how much is the population Iraq?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?val WHERE { dbr:Iraq dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> SELECT DISTINCT ?uri ?label WHERE { ?uri a dbo:Holiday . OPTIONAL { ?uri rdfs:label ?label . } OPTIONAL { ?uri skos:prefLabel ?label . } OPTIONAL { ?uri dbp:name ?label . } FILTER(langMatches(lang(?label), 'en')) . }"
  },
  {
    "natural_language_question": "Which Greek parties are pro-European?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:PoliticalParty ; dbo:country dbpedia:Greece ; dbo:ideology dbpedia:Pro-Europeanism . }"
  },
  {
    "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql_query_kg2": "SELECT ?birthDate WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?birthDate . }"
  },
  {
    "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?movementUri WHERE { <http://dbpedia.org/resource/The_Three_Dancers> dbp:author ?artist . ?artist dbp:movement ?movementUri . }"
  },
  {
    "natural_language_question": "Which actors were born in Germany?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Actor . { ?uri dbo:birthPlace dbr:Germany . } UNION { ?uri dbo:country dbr:Germany . } }"
  },
  {
    "natural_language_question": "Who designed the Brooklyn Bridge?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?architect WHERE { dbr:Brooklyn_Bridge dbo:architect ?architect . }"
  },
  {
    "natural_language_question": "Who wrote the Game of Thrones theme?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:composer ?composer . }"
  },
  {
    "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?film WHERE { ?film a dbo:Film . ?film dbo:director dbr:Francis_Ford_Coppola . }"
  },
  {
    "natural_language_question": "What is the birth name of Adele?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?name WHERE { <http://dbpedia.org/resource/Adele> dbp:birthName ?name . }"
  },
  {
    "natural_language_question": "What was the first Queen album?",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri a dbo:Album . ?uri dbo:artist dbr:Queen_(band) . ?uri dbo:releaseDate ?date . } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "What is the currency of the Czech Republic?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?currency WHERE { <http://dbpedia.org/resource/Czech_Republic> dbo:currency ?currency . }"
  },
  {
    "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?person WHERE { ?person dbo:birthPlace dbr:Vienna . ?person dbo:deathPlace dbr:Berlin . ?person a dbo:Person . }"
  },
  {
    "natural_language_question": "Which bridges cross the Seine?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Bridge ; dbo:crosses dbpedia:Seine . }"
  },
  {
    "natural_language_question": "Which musician wrote the most books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?musician WHERE { ?musician dbo:occupation dbr:Musician . ?work dbo:author ?musician . ?work a dbo:Book . } GROUP BY ?musician ORDER BY DESC(COUNT(?work)) LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by John Cleese?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . }"
  },
  {
    "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?writer WHERE { ?writer rdf:type dbo:Writer . ?writer dbo:award dbr:Nobel_Prize_in_Literature . }"
  },
  {
    "natural_language_question": "Who discovered Ceres?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?discoverer WHERE { dbpedia:Ceres_(dwarf_planet) dbo:discoverer ?discoverer . }"
  },
  {
    "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res a dbpedia:Bandleader . ?res dbo:instrument dbpedia:Trumpet . }"
  },
  {
    "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbpedia-owl:BasketballPlayer . ?uri dbpedia-owl:height ?height . FILTER (?height > 2.0) }"
  },
  {
    "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film rdf:type dbo:Film . ?film dbo:starring <http://dbpedia.org/resource/Julia_Roberts> . ?film dbo:starring <http://dbpedia.org/resource/Richard_Gere> . }"
  },
  {
    "natural_language_question": "What is the capital of Canada?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?o2 WHERE { dbr:Canada dbo:capital ?o2 . }"
  },
  {
    "natural_language_question": "Which soccer players were born on Malta?",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?player WHERE { ?player rdf:type dbo:SoccerPlayer . ?player dbo:birthPlace dbr:Malta . }"
  },
  {
    "natural_language_question": "What is the capital of Cameroon?",
    "sparql_query_kg2": "SELECT DISTINCT ?capital WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?capital }"
  },
  {
    "natural_language_question": "How many programming languages are there?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbo:ProgrammingLanguage }"
  },
  {
    "natural_language_question": "Give me all cosmonauts.",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Astronaut . { ?uri dbo:nationality dbr:Soviet_Union } UNION { ?uri dbo:nationality dbr:Russia } }"
  },
  {
    "natural_language_question": "Who created Family Guy?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri }"
  },
  {
    "natural_language_question": "How much is the population of mexico city ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?population WHERE { dbr:Mexico_City dbo:populationTotal ?population . }"
  },
  {
    "natural_language_question": "Who created Batman?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbr:Batman dbo:creator ?uri }"
  },
  {
    "natural_language_question": "How many people live in the capital of Australia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/Australia> dbo:capital ?uri . ?uri dbo:populationTotal ?number . }"
  },
  {
    "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
    "sparql_query_kg2": "SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/ontology/areaTotal> ?val }"
  },
  {
    "natural_language_question": "How many employees does IBM have?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?employees WHERE { dbr:IBM dbo:numberOfEmployees ?employees . }"
  },
  {
    "natural_language_question": "How much did Pulp Fiction cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/> SELECT ?value WHERE { dbpedia:Pulp_Fiction dbo:budget ?value . }"
  },
  {
    "natural_language_question": "What movies does Jesse Eisenberg play in?",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . }"
  },
  {
    "natural_language_question": "Give me all Danish movies.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:country dbr:Denmark . }"
  },
  {
    "natural_language_question": "To which countries does the Himalayan mountain system extend?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Himalayas> dbo:country ?country . }"
  },
  {
    "natural_language_question": "What is the largest country in the world?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri ?area WHERE { ?uri dbpedia-owl:areaTotal ?areaTotal . FILTER (strstarts(str(?uri), dbpedia:)) . ?uri a dbpedia-owl:Country . } GROUP BY ?uri HAVING (max(?areaTotal) as ?area) ORDER BY DESC(?area) LIMIT 1"
  },
  {
    "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/> SELECT ?res WHERE { dbpedia:Angela_Merkel dbpedia:ontology/almaMater ?res }"
  },
  {
    "natural_language_question": "Who created Goofy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> dbo:creator ?uri . }"
  }
]