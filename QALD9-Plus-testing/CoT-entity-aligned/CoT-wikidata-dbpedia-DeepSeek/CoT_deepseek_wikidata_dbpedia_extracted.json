[
  {
    "natural_language_question": "Who is the founder of Penguin Books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o2 WHERE { <http://dbpedia.org/resource/Penguin_Books> dbo:founder ?o2 . }"
  },
  {
    "natural_language_question": "Which films did Stanley Kubrick direct?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film a dbo:Film . ?film dbo:director <http://dbpedia.org/resource/Stanley_Kubrick> . }"
  },
  {
    "natural_language_question": "List all the musicals with music by Elton John.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Musical ; dbo:musicBy dbr:Elton_John . }"
  },
  {
    "natural_language_question": "Who developed Skype?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?developer WHERE { dbpedia:Skype dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:SoccerClub . ?uri dbpedia-owl:league dbpedia-owl:Bundesliga . }"
  },
  {
    "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
    "sparql_query_kg2": "PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor WHERE { ?film dbo:director <http://dbpedia.org/resource/William_Shatner> ; a dbo:Film ; dbpprop:starring ?actor . }"
  },
  {
    "natural_language_question": "What is the highest mountain?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?mountain ?elevation WHERE { ?mountain a dbpedia-owl:Mountain . ?mountain dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "How many films did Leonardo DiCaprio star in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpp: <http://dbpedia.org/property/> SELECT (COUNT(DISTINCT ?film) AS ?count) WHERE { ?film a dbo:Film . ?film dbpp:starring <http://dbpedia.org/resource/Leonardo_DiCaprio> . }"
  },
  {
    "natural_language_question": "When was Olof Palme shot?",
    "sparql_query_kg2": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
  },
  {
    "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/ontology/starring> ?uri <http://dbpedia.org/resource/Elizabeth_Taylor> . <http://dbpedia.org/ontology/starring> ?uri <http://dbpedia.org/resource/Richard_Burton> . } LIMIT 1000"
  },
  {
    "natural_language_question": "Who developed Minecraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { <http://dbpedia.org/resource/Minecraft> dbo:developer ?developer }"
  },
  {
    "natural_language_question": "How much did the Lego Movie cost?",
    "sparql_query_kg2": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val }"
  },
  {
    "natural_language_question": "For which label did Elvis record his first album?",
    "sparql_query_kg2": "prefix dbo: <http://dbpedia.org/ontology/> prefix dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?label ?date WHERE { ?album dbo:artist dbpedia:Elvis_Presley . ?album dbo:releaseDate ?date . ?album dbo:recordLabel ?label . } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "Give me the runtime of Toy Story.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Toy_Story dbo:runtime ?val }"
  },
  {
    "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Bandleader . ?uri dbo:instrument dbr:Trumpet . }"
  },
  {
    "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql_query_kg2": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?film ?title WHERE { ?film a <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?film rdfs:label ?title . }"
  },
  {
    "natural_language_question": "In which year was Rachel Stevens born?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?year WHERE { dbr:Rachel_Stevens dbpedia:birthYear ?year }"
  },
  {
    "natural_language_question": "What is the most frequent cause of death?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?cause WHERE { ?s dbo:deathCause ?cause . } GROUP BY ?cause ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
  },
  {
    "natural_language_question": "How high is the Yokohama Marine Tower?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?height WHERE { <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbo:height ?height . }"
  },
  {
    "natural_language_question": "What is the highest mountain in Italy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?mountain ?elevation WHERE { ?mountain dbo:Mountains . ?mountain dbo:locatedInArea dbr:Italy . ?mountain dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:Albert_Einstein dbpedia-owl:doctoralAdvisor ?uri }"
  },
  {
    "natural_language_question": "What is Donald Trump's main business?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?business WHERE { ?business dbo:owner <http://dbpedia.org/resource/Donald_Trump> . ?business a dbo:Organization . }"
  },
  {
    "natural_language_question": "Who has Tom Cruise been married to?",
    "sparql_query_kg2": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?spouse WHERE { db:Tom_Cruise dbo:spouse ?spouse . }"
  },
  {
    "natural_language_question": "How many people live in Eurasia?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbr:Eurasia dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Who is the author of the interpretation of dreams?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?author WHERE { dbpedia:The_Interpretation_of_Dreams dbo:author ?author . }"
  },
  {
    "natural_language_question": "When was John Adams born?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?BirthDate WHERE { dbr:John_Adams dbo:birthDate ?BirthDate . }"
  },
  {
    "natural_language_question": "how much is the total population of european union?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { dbo:European_Union dbo:populationTotal ?population . }"
  },
  {
    "natural_language_question": "Give me the currency of China.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?currency WHERE { dbr:China dbo:currency ?currency }"
  },
  {
    "natural_language_question": "When was the death of Shakespeare?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?deathDate WHERE { <http://dbpedia.org/resource/William_Shakespeare> dbo:deathDate ?deathDate . }"
  },
  {
    "natural_language_question": "Which rockets were launched from Baikonur?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?rocket WHERE { ?rocket a dbo:Rocket . ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome . }"
  },
  {
    "natural_language_question": "Give me all islands that belong to Japan.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Island ; dbo:country dbr:Japan . }"
  },
  {
    "natural_language_question": "Who developed the video game World of Warcraft?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { <http://dbpedia.org/resource/World_of_Warcraft> dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "Give me all companies in the advertising industry.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbp:industry dbr:Advertising . }"
  },
  {
    "natural_language_question": "Which university did Angela Merkel attend?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?university ?universityName WHERE { dbpedia:Angela_Merkel dbo:almaMater ?university . ?university rdfs:label ?universityName . FILTER(LANGMATCHES(LANG(?universityName), 'en')) } ORDER BY ?universityName"
  },
  {
    "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql_query_kg2": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?show WHERE { ?show a dbo:TelevisionShow . ?show dbo:starring db:Neil_Patrick_Harris . }"
  },
  {
    "natural_language_question": "Give me all movies with Tom Cruise.",
    "sparql_query_kg2": "PREFIX ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film ontology:starring <http://dbpedia.org/resource/Tom_Cruise> . ?film a ontology:Film . }"
  },
  {
    "natural_language_question": "What country is Mount Everest in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Mount_Everest> dbo:locatedInArea ?country . }"
  },
  {
    "natural_language_question": "Where was JFK assassinated?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?deathPlace WHERE { dbpedia:John_F._Kennedy dbo:deathPlace ?deathPlace . }"
  },
  {
    "natural_language_question": "Which river does the Brooklyn Bridge cross?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?river WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:crosses ?river . }"
  },
  {
    "natural_language_question": "Give all swimmers that were born in Moscow.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Swimmer ; dbo:birthPlace dbr:Moscow . }"
  },
  {
    "natural_language_question": "What was the last movie with Alec Guinness?",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?s ?releaseDate WHERE { ?s rdf:type dbo:Film . ?s dbo:starring <http://dbpedia.org/resource/Alec_Guinness> . ?s dbo:releaseDate ?releaseDate . } ORDER BY DESC(?releaseDate) LIMIT 1"
  },
  {
    "natural_language_question": "What is the second highest mountain on Earth?",
    "sparql_query_kg2": "SELECT ?mountain ?elevation WHERE { ?mountain a dbo:Mountain . ?mountain dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
  },
  {
    "natural_language_question": "What is the population of Cairo?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Cairo> dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Which people were born in Heraklion?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?person WHERE { ?person a dbo:Person . ?person dbo:birthPlace dbr:Heraklion . }"
  },
  {
    "natural_language_question": "How many children did Benjamin Franklin have?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?child) AS ?count) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?child . }"
  },
  {
    "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?elevation WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbo:elevation ?elevation . }"
  },
  {
    "natural_language_question": "In which country is Mecca located?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?country WHERE { <http://dbpedia.org/resource/Mecca> dbo:country ?country . }"
  },
  {
    "natural_language_question": "How tall is Claudia Schiffer?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?height WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> dbo:height ?height . }"
  },
  {
    "natural_language_question": "Who wrote the book The Pillars of the Earth?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Pillars_of_the_Earth> dbo:author ?uri . }"
  },
  {
    "natural_language_question": "What kind of music did Lou Reed play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?genre WHERE { <http://dbpedia.org/resource/Lou_Reed> dbo:genre ?genre . }"
  },
  {
    "natural_language_question": "Give me the birth place of Frank Sinatra.",
    "sparql_query_kg2": "SELECT ?birthPlace WHERE { <http://dbpedia.org/resource/Frank_Sinatra> dbp:birthPlace ?birthPlace }"
  },
  {
    "natural_language_question": "Which city has the least inhabitants?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?city ?population WHERE { ?city rdf:type dbo:City . ?city dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by Walt Disney?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?tvShow WHERE { ?tvShow a dbo:TelevisionShow . ?tvShow dbo:creator dbr:Walt_Disney . }"
  },
  {
    "natural_language_question": "Give me all Swedish holidays.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:Holiday . ?uri dbo:country dbpedia:Sweden . }"
  },
  {
    "natural_language_question": "What is the net income of Apple?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?netIncome WHERE { dbr:Apple_Inc. dbo:netIncome ?netIncome . }"
  },
  {
    "natural_language_question": "Where did Abraham Lincoln die?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { dbr:Abraham_Lincoln dbo:deathPlace ?place . }"
  },
  {
    "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?capital WHERE { dbr:Himalayas dbp:country ?country . ?country dbo:capital ?capital . }"
  },
  {
    "natural_language_question": "In which country is the Limerick Lake?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?country . }"
  },
  {
    "natural_language_question": "How tall is Michael Jordan?",
    "sparql_query_kg2": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { db:Michael_Jordan dbo:height ?val . }"
  },
  {
    "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbpedia: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:director dbr:Clint_Eastwood . ?uri dbpedia:starring dbr:Clint_Eastwood . }"
  },
  {
    "natural_language_question": "In which countries can you pay using the West African CFA franc?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { ?country a dbo:Country . ?country dbpedia:currency dbpedia:West_African_CFA_franc . }"
  },
  {
    "natural_language_question": "how much is the population Iraq?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbr:Iraq dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday . }"
  },
  {
    "natural_language_question": "Which Greek parties are pro-European?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:PoliticalParty ; dbo:country dbpedia:Greece ; dbo:ideology dbpedia:Pro-Europeanism . }"
  },
  {
    "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql_query_kg2": "SELECT DISTINCT ?actor ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }"
  },
  {
    "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?movement WHERE { dbr:The_Three_Dancers dbo:author ?painter . ?painter dbo:movement ?movement . }"
  },
  {
    "natural_language_question": "Which actors were born in Germany?",
    "sparql_query_kg2": "SELECT ?actor ?name WHERE { ?actor a dbpedia-owl:Actor. ?actor dbpedia-owl:birthPlace ?birthPlace. ?birthPlace a dbpedia-owl:Country. ?birthPlace rdfs:label \"Germany\"@en. OPTIONAL { ?actor foaf:name ?name. FILTER(langMatches(lang(?name), 'en')) } }"
  },
  {
    "natural_language_question": "Who designed the Brooklyn Bridge?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?designer WHERE { dbpedia:Brooklyn_Bridge dbo:architect ?designer . }"
  },
  {
    "natural_language_question": "Who wrote the Game of Thrones theme?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> dbo:composer ?composer . }"
  },
  {
    "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpprop: <http://dbpedia.org/property/> SELECT DISTINCT ?film WHERE { ?film dbpedia-owl:director dbpedia:Francis_Ford_Coppola . ?film rdf:type dbpedia-owl:Film . }"
  },
  {
    "natural_language_question": "What is the birth name of Adele?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?name WHERE { dbp:Adele dbo:birthName ?name. }"
  },
  {
    "natural_language_question": "What was the first Queen album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri ?date WHERE { ?uri a dbo:Album . ?uri dbo:artist dbpedia:Queen_(band) . ?uri dbo:releaseDate ?date . } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "What is the currency of the Czech Republic?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?currency WHERE { <http://dbpedia.org/resource/Czech_Republic> dbo:currency ?currency . }"
  },
  {
    "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?person WHERE { ?person dbo:birthPlace dbr:Vienna . ?person dbo:deathPlace dbr:Berlin . ?person a dbo:Person . }"
  },
  {
    "natural_language_question": "Which bridges cross the Seine?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?bridge WHERE { ?bridge a dbo:Bridge ; dbo:crosses dbr:Seine . }"
  },
  {
    "natural_language_question": "Which musician wrote the most books?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?musicianUri (COUNT(DISTINCT ?book) AS ?bookCount) WHERE { ?book rdf:type dbpedia-owl:Book . ?musicianUri dbpedia-owl:author ?book . ?musicianUri rdf:type dbpedia-owl:Musician . } GROUP BY ?musicianUri ORDER BY DESC(?bookCount) LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by John Cleese?",
    "sparql_query_kg2": "PREFIX dct: <http://purl.org/dc/terms/> PREFIX dc: <http://purl.org/dc/elements/1.1/> SELECT DISTINCT ?tvShow WHERE { ?tvShow a <http://dbpedia.org/ontology/TelevisionShow> . ?tvShow dct:creator <http://dbpedia.org/resource/John_Cleese> . }"
  },
  {
    "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:occupation dbr:Writer . ?uri dbo:award dbr:Nobel_Prize_in_Literature . }"
  },
  {
    "natural_language_question": "Who discovered Ceres?",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?discoverer WHERE { dbr:Ceres_(dwarf_planet) dbo:discoverer ?discoverer . }"
  },
  {
    "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?res WHERE { res:?res dbpedia-owl:occupation dbpedia:Bandleader . res:?res dbpedia-owl:instrument dbpedia:Trumpet . }"
  },
  {
    "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbpedia:BasketballPlayer . ?uri dbpedia:height ?height . FILTER (?height > 2) }"
  },
  {
    "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql_query_kg2": "SELECT DISTINCT ?film WHERE { ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . }"
  },
  {
    "natural_language_question": "What is the capital of Canada?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?o1 WHERE { dbr:Canada dbo:capital ?o1 . }"
  },
  {
    "natural_language_question": "Which soccer players were born on Malta?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?player WHERE { ?player rdf:type dbpedia-owl:SoccerPlayer . ?player dbpedia-owl:birthPlace dbpedia:Malta . }"
  },
  {
    "natural_language_question": "What is the capital of Cameroon?",
    "sparql_query_kg2": "PREFIX dbpo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?capital WHERE { <http://dbpedia.org/resource/Cameroon> dbpo:capital ?capital }"
  },
  {
    "natural_language_question": "How many programming languages are there?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub rdf:type dbo:ProgrammingLanguage . }"
  },
  {
    "natural_language_question": "Give me all cosmonauts.",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Astronaut . { ?uri dbo:nationality dbr:Russia } UNION { ?uri dbo:nationality dbr:Soviet_Union } }"
  },
  {
    "natural_language_question": "Who created Family Guy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?creator WHERE { <http://dbpedia.org/resource/Family_Guy> dbo:creator ?creator }"
  },
  {
    "natural_language_question": "How much is the population of mexico city ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?population . }"
  },
  {
    "natural_language_question": "Who created Batman?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?creator WHERE { <http://dbpedia.org/resource/Batman> dbo:creator ?creator . }"
  },
  {
    "natural_language_question": "How many people live in the capital of Australia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?number ?capitalLabel WHERE { <http://dbpedia.org/resource/Australia> dbo:capital ?capital . ?capital dbo:populationTotal ?number . ?capital rdfs:label ?capitalLabel . FILTER(lang(?capitalLabel) = 'en') FILTER(isLiteral(?number) && datatype(?number) = xsd:integer) }"
  },
  {
    "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?area WHERE { dbpedia:North_Rhine-Westphalia dbo:areaTotal ?area . }"
  },
  {
    "natural_language_question": "How many employees does IBM have?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?employees WHERE { <http://dbpedia.org/resource/IBM> dbo:numberOfEmployees ?employees . }"
  },
  {
    "natural_language_question": "How much did Pulp Fiction cost?",
    "sparql_query_kg2": "SELECT DISTINCT ?value WHERE { <http://dbpedia.org/resource/Pulp_Fiction> <http://dbpedia.org/ontology/budget> ?value . }"
  },
  {
    "natural_language_question": "What movies does Jesse Eisenberg play in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film a dbo:Film . ?film dbo:starring <http://dbpedia.org/resource/Jesse_Eisenberg> . } ORDER BY ?film"
  },
  {
    "natural_language_question": "Give me all Danish movies.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Film ; dbo:country dbr:Denmark . }"
  },
  {
    "natural_language_question": "To which countries does the Himalayan mountain system extend?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { dbpedia:Himalayas dbo:country ?country . }"
  },
  {
    "natural_language_question": "What is the largest country in the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Country . ?uri dbo:areaTotal ?area . } ORDER BY DESC(?area) LIMIT 1"
  },
  {
    "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?almaMater WHERE { dbpedia:Angela_Merkel dbo:almaMater ?almaMater . }"
  },
  {
    "natural_language_question": "Who created Goofy?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Goofy dbpedia-owl:creator ?uri . }"
  }
]