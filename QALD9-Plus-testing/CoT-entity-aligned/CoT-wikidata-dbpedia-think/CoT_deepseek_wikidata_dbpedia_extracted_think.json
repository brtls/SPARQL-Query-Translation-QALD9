[
  {
    "natural_language_question": "Who is the founder of Penguin Books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> dbo:founder ?o1 . } LIMIT 1"
  },
  {
    "natural_language_question": "Which films did Stanley Kubrick direct?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?film WHERE { ?film dbo:director dbr:Stanley_Kubrick . } ORDER BY ?film"
  },
  {
    "natural_language_question": "List all the musicals with music by Elton John.",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy dbr:Elton_John . }"
  },
  {
    "natural_language_question": "Who developed Skype?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Skype> dbo:developer ?uri . }"
  },
  {
    "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:SoccerClub ; dbpedia-owl:league dbpedia:Bundesliga . }"
  },
  {
    "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor ?actorName WHERE { ?movie a dbpedia:Film ; dbpedia:director dbpedia:William_Shatner ; dbpedia:starring ?actor . OPTIONAL { ?actor rdfs:label ?actorName } }"
  },
  {
    "natural_language_question": "What is the highest mountain?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri ?elevation WHERE { ?uri rdf:type dbo:Mountain ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "How many films did Leonardo DiCaprio star in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?film) AS ?count) WHERE { ?film a dbo:Film ; dbo:starring dbr:Leonardo_DiCaprio . }"
  },
  {
    "natural_language_question": "When was Olof Palme shot?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbo:deathDate ?date }"
  },
  {
    "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
    "sparql_query_kg2": "SELECT DISTINCT ?film WHERE { ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }"
  },
  {
    "natural_language_question": "Who developed Minecraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?developer WHERE { <http://dbpedia.org/resource/Minecraft> dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "How much did the Lego Movie cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> dbo:budget ?val }"
  },
  {
    "natural_language_question": "For which label did Elvis record his first album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?label WHERE { ?album dbo:artist <http://dbpedia.org/resource/Elvis_Presley> . ?album dbo:recordLabel ?label . ?album dbo:releaseDate ?date . } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "Give me the runtime of Toy Story.",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbr:Toy_Story dbo:runtime ?val . }"
  },
  {
    "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:occupation <http://dbpedia.org/resource/Bandleader> . ?uri dbpedia-owl:instrument <http://dbpedia.org/resource/Trumpet> . ?uri rdf:type <http://dbpedia.org/ontology/Person> . }"
  },
  {
    "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Film . ?uri dbpedia-owl:director dbr:Garry_Marshall . ?uri dbpedia-owl:starring dbr:Julia_Roberts . }"
  },
  {
    "natural_language_question": "In which year was Rachel Stevens born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?year WHERE { dbr:Rachel_Stevens dbo:birthYear ?date . BIND(YEAR(?date) AS ?year) }"
  },
  {
    "natural_language_question": "What is the most frequent cause of death?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri (COUNT(DISTINCT ?s) AS ?count) WHERE { ?s dbo:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(?count) LIMIT 1"
  },
  {
    "natural_language_question": "How high is the Yokohama Marine Tower?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { dbpedia:Yokohama_Marine_Tower dbo:height ?height . }"
  },
  {
    "natural_language_question": "What is the highest mountain in Italy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Mountain ; dbo:locatedInArea dbpedia:Italy ; dbo:elevation ?elevation . FILTER (datatype(?elevation) = xsd:decimal) } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Albert_Einstein dbo:doctoralAdvisor ?uri }"
  },
  {
    "natural_language_question": "What is Donald Trump's main business?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?company WHERE { ?company dbp:owner dbr:Donald_Trump . ?company a dbo:Company . FILTER NOT EXISTS { ?company dbp:closed ?closed } }"
  },
  {
    "natural_language_question": "Who has Tom Cruise been married to?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?o1 WHERE { dbr:Tom_Cruise dbo:spouse ?o1 . }"
  },
  {
    "natural_language_question": "How many people live in Eurasia?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbpedia:Eurasia dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Who is the author of the interpretation of dreams?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?author WHERE { dbr:The_Interpretation_of_Dreams dbo:author ?author . }"
  },
  {
    "natural_language_question": "When was John Adams born?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?birthDate WHERE { dbr:John_Adams dbo:birthDate ?birthDate . }"
  },
  {
    "natural_language_question": "how much is the total population of european union?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { <http://dbpedia.org/resource/European_Union> dbo:populationTotal ?population . }"
  },
  {
    "natural_language_question": "Give me the currency of China.",
    "sparql_query_kg2": "SELECT ?o2 WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?o2 . }"
  },
  {
    "natural_language_question": "When was the death of Shakespeare?",
    "sparql_query_kg2": "SELECT ?deathDate WHERE { dbr:William_Shakespeare dbo:deathDate ?deathDate . }"
  },
  {
    "natural_language_question": "Which rockets were launched from Baikonur?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?rocket WHERE { ?rocket a dbo:Rocket . ?rocket dbo:launchSite dbr:Baikonur_Cosmodrome . }"
  },
  {
    "natural_language_question": "Give me all islands that belong to Japan.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Island ; dbo:country dbr:Japan . }"
  },
  {
    "natural_language_question": "Who developed the video game World of Warcraft?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?developer WHERE { dbpedia:World_of_Warcraft dbo:developer ?developer . }"
  },
  {
    "natural_language_question": "Give me all companies in the advertising industry.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry dbr:Advertising . }"
  },
  {
    "natural_language_question": "Which university did Angela Merkel attend?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology> SELECT DISTINCT ?university WHERE { <http://dbpedia.org/resource/Angela_Merkel> dbo:almaMater ?university . }"
  },
  {
    "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?tvshow WHERE { ?tvshow rdf:type dbo:TelevisionShow . ?tvshow dbo:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . }"
  },
  {
    "natural_language_question": "Give me all movies with Tom Cruise.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Film . ?uri dbo:starring dbr:Tom_Cruise . }"
  },
  {
    "natural_language_question": "What country is Mount Everest in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbpedia:Mount_Everest dbo:locatedInArea ?country . ?country a dbo:Country . }"
  },
  {
    "natural_language_question": "Where was JFK assassinated?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbr:John_F._Kennedy dbo:deathPlace ?uri . }"
  },
  {
    "natural_language_question": "Which river does the Brooklyn Bridge cross?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri . }"
  },
  {
    "natural_language_question": "Give all swimmers that were born in Moscow.",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Swimmer ; dbo:birthPlace dbr:moscow . }"
  },
  {
    "natural_language_question": "What was the last movie with Alec Guinness?",
    "sparql_query_kg2": "SELECT DISTINCT ?s1 WHERE { ?s1 a <http://dbpedia.org/ontology/Film> . ?s1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> . ?s1 <http://dbpedia.org/ontology/releaseDate> ?o1 . } ORDER BY DESC(?o1) LIMIT 1"
  },
  {
    "natural_language_question": "What is the second highest mountain on Earth?",
    "sparql_query_kg2": "SELECT ?res ?res_label ?elevation WHERE { ?res a dbo:Mountain ; dbo:elevation ?elevation ; dbo:isPartOf dbr:Earth . SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . } } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
  },
  {
    "natural_language_question": "What is the population of Cairo?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Cairo dbpedia-owl:populationTotal ?val }"
  },
  {
    "natural_language_question": "Which people were born in Heraklion?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Person . ?uri dbo:birthPlace dbr:Heraklion . }"
  },
  {
    "natural_language_question": "How many children did Benjamin Franklin have?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?child) AS ?count) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbo:child ?child . }"
  },
  {
    "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?elevation WHERE { <http://dbpedia.org/resource/Düsseldorf_Airport> dbo:elevation ?elevation }"
  },
  {
    "natural_language_question": "In which country is Mecca located?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?res WHERE { dbpedia:Mecca dbo:country ?res . }"
  },
  {
    "natural_language_question": "How tall is Claudia Schiffer?",
    "sparql_query_kg2": "SELECT ?val WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> <http://dbpedia.org/ontology/height> ?val . }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri rdf:type dbpedia-owl:Holiday }"
  },
  {
    "natural_language_question": "What kind of music did Lou Reed play?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dp: <http://dbpedia.org/property/> SELECT DISTINCT ?genre WHERE { dbpedia: Lou_Reed dbo:genre ?genre . }"
  },
  {
    "natural_language_question": "Give me the birth place of Frank Sinatra.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbr:Frank_Sinatra dbo:birthPlace ?uri }"
  },
  {
    "natural_language_question": "Which city has the least inhabitants?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?city ?population WHERE { ?city rdf:type dbo:City . ?city dbo:populationTotal ?population . Filter (isNumeric(?population)) } ORDER BY ?population ASC LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by Walt Disney?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:TelevisionShow ; dbo:creator dbr:Walt_Disney . }"
  },
  {
    "natural_language_question": "Give me all Swedish holidays.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:type <http://dbpedia.org/ontology/Holiday> . ?uri dbo:country dbpedia:Sweden . }"
  },
  {
    "natural_language_question": "What is the net income of Apple?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?netIncome WHERE { dbr:Apple_Inc. dbo:netIncome ?netIncome . }"
  },
  {
    "natural_language_question": "Where did Abraham Lincoln die?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?place WHERE { dbr:Abraham_Lincoln dbo:deathPlace ?place . }"
  },
  {
    "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?capital WHERE { dbpedia:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }"
  },
  {
    "natural_language_question": "In which country is the Limerick Lake?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?country . }"
  },
  {
    "natural_language_question": "How tall is Michael Jordan?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbr:Michael_Jordan dbo:height ?val . }"
  },
  {
    "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film dbpedia-owl:director <http://dbpedia.org/resource/Clint_Eastwood> . ?film dbpedia-owl:starring <http://dbpedia.org/resource/Clint_Eastwood> . }"
  },
  {
    "natural_language_question": "In which countries can you pay using the West African CFA franc?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency dbr:West_African_CFA_franc . }"
  },
  {
    "natural_language_question": "how much is the population Iraq?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Iraq> dbo:populationTotal ?val . }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "```sparql PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type ?type . ?type rdfs:subClassOf* dbo:Holiday . }"
  },
  {
    "natural_language_question": "Which Greek parties are pro-European?",
    "sparql_query_kg2": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:PoliticalParty ; dbpedia-owl:country dbr:Greece ; dbpedia-owl:ideology dbr:Pro-Europeanism . }"
  },
  {
    "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql_query_kg2": "SELECT DISTINCT ?actor ?birthDate WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?birthDate . }"
  },
  {
    "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Three_Dancers> dbo:author ?painter . ?painter dbo:movement ?uri . }"
  },
  {
    "natural_language_question": "Which actors were born in Germany?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri a dbpedia:Actor . { ?uri dbpedia:birthPlace dbr:Germany . } UNION { ?uri dbpedia:country dbr:Germany . } }"
  },
  {
    "natural_language_question": "Who designed the Brooklyn Bridge?",
    "sparql_query_kg2": "> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?architect WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:architect ?architect . }"
  },
  {
    "natural_language_question": "Who wrote the Game of Thrones theme?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> dbpedia-owl:composer ?uri . }"
  },
  {
    "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
    "sparql_query_kg2": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?film WHERE { ?film a dbo:Film ; dbo:director dbpedia:Francis_Ford_Coppola . }"
  },
  {
    "natural_language_question": "What is the birth name of Adele?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbpedia:Adele dbo:birthName ?name . }"
  },
  {
    "natural_language_question": "What was the first Queen album?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Album> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date } ORDER BY ?date LIMIT 1"
  },
  {
    "natural_language_question": "What is the currency of the Czech Republic?",
    "sparql_query_kg2": "SELECT DISTINCT ?currency WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?currency . }"
  },
  {
    "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:birthPlace dbpedia:Vienna . ?uri dbo:deathPlace dbpedia:Berlin . }"
  },
  {
    "natural_language_question": "Which bridges cross the Seine?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Brdige ; dbo:crosses dbr:Seine . }"
  },
  {
    "natural_language_question": "Which musician wrote the most books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation <http://dbpedia.org/resource/Musician> . ?x dbo:author ?uri . ?x a dbo:Book . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by John Cleese?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri ?label WHERE { { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . ?uri <http://www.w3.org/2000/01/rdf-schema#label> ?label . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> . ?uri <http://purl.org/linguistics/gold/hypernym#part> ?part . ?part <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . ?uri <http://www.w3.org/2000/01/rdf-schema#label> ?label . } } ORDER BY ?label"
  },
  {
    "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbpedia-owl:Writer . ?uri dbpedia:award dbpedia:Nobel_Prize_in_Literature . } ORDER BY ?uri"
  },
  {
    "natural_language_question": "Who discovered Ceres?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri . }"
  },
  {
    "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
    "sparql_query_kg2": "SELECT ?res WHERE { ?res rdf:type <http://dbpedia.org/resource/Bandleader> . ?res <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> . }"
  },
  {
    "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer . ?uri dbo:height ?height . FILTER (?height > 2.0) }"
  },
  {
    "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql_query_kg2": "Julia Roberts and Richard Gere starred together in the film \"Pretty Woman\" (1990)."
  },
  {
    "natural_language_question": "What is the capital of Canada?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?capital WHERE { <http://dbpedia.org/resource/Canada> dbo:capital ?capital . }"
  },
  {
    "natural_language_question": "Which soccer players were born on Malta?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:SoccerPlayer ; dbo:birthPlace dbpedia:Malta . }"
  },
  {
    "natural_language_question": "What is the capital of Cameroon?",
    "sparql_query_kg2": "SELECT DISTINCT ?capital WHERE { dbr:Cameroon dbo:capital ?capital }"
  },
  {
    "natural_language_question": "How many programming languages are there?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbo:ProgrammingLanguage . }"
  },
  {
    "natural_language_question": "Give me all cosmonauts.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbpedia:Astronaut . { ?uri dbo:nationality dbpedia:Soviet_Union } UNION { ?uri dbo:nationality dbpedia:Russia } }"
  },
  {
    "natural_language_question": "Who created Family Guy?",
    "sparql_query_kg2": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?creator WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?creator }"
  },
  {
    "natural_language_question": "How much is the population of mexico city ?",
    "sparql_query_kg2": "SELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> <http://dbpedia.org/ontology/populationTotal> ?population . }"
  },
  {
    "natural_language_question": "Who created Batman?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?Creator WHERE { <http://dbpedia.org/resource/Batman> dbo:creator ?Creator . OPTIONAL { ?Creator rdfs:label ?CreatorLabel . } } FETCH FIRST 1 ROW ONLY"
  },
  {
    "natural_language_question": "How many people live in the capital of Australia?",
    "sparql_query_kg2": "SELECT ?populationTotal WHERE { dbpedia:Australia dbpedia-owl:capital ?capital . ?capital dbpedia-owl:populationTotal ?populationTotal . }"
  },
  {
    "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?val WHERE { dbpedia:North_Rhine-Westphalia dbo:areaTotal ?val . }"
  },
  {
    "natural_language_question": "How many employees does IBM have?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?employees WHERE { <http://dbpedia.org/resource/IBM> dbo:numberOfEmployees ?employees . }"
  },
  {
    "natural_language_question": "How much did Pulp Fiction cost?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?budget WHERE { dbpedia:Pulp_Fiction dbo:budget ?budget . }"
  },
  {
    "natural_language_question": "What movies does Jesse Eisenberg play in?",
    "sparql_query_kg2": "I apologize, but I can't answer those questions."
  },
  {
    "natural_language_question": "Give me all Danish movies.",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbpedia-owl:Film . ?uri dbpedia-owl:country dbpedia:Denmark . }"
  },
  {
    "natural_language_question": "To which countries does the Himalayan mountain system extend?",
    "sparql_query_kg2": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbc: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbc:Himalayas dbpedia-owl:country ?uri . }"
  },
  {
    "natural_language_question": "What is the largest country in the world?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/ontology/areaTotal> ?area . } ORDER BY DESC(?area) LIMIT 1"
  },
  {
    "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?res WHERE { dbpedia:Angela_Merkel dbo:almaMater ?res . ?res rdf:type dbo:EducationalInstitution . }"
  },
  {
    "natural_language_question": "Who created Goofy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> dbo:creator ?uri }"
  }
]