[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Allen_Lane"
        ]
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?film WHERE { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . }",
        "answers": [
            "http://dbpedia.org/resource/2001:_A_Space_Odyssey_(film)",
            "http://dbpedia.org/resource/A_Clockwork_Orange_(film)",
            "http://dbpedia.org/resource/Barry_Lyndon",
            "http://dbpedia.org/resource/Day_of_the_Fight",
            "http://dbpedia.org/resource/Dr._Strangelove",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Fear_and_Desire",
            "http://dbpedia.org/resource/Flying_Padre",
            "http://dbpedia.org/resource/Full_Metal_Jacket",
            "http://dbpedia.org/resource/Killer's_Kiss",
            "http://dbpedia.org/resource/Lolita_(1962_film)",
            "http://dbpedia.org/resource/Paths_of_Glory",
            "http://dbpedia.org/resource/Spartacus_(film)",
            "http://dbpedia.org/resource/The_Killing_(film)__The_Killing__1",
            "http://dbpedia.org/resource/The_Seafarers__The_Seafarers__1",
            "http://dbpedia.org/resource/The_Shining_(film)"
        ]
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ontology:class dbpedia:Musical ; dbpedia-ontology:musicBy dbpedia:Elton_John . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT ?developer WHERE { dbpedia-resource:Skype dbpedia:developer ?developer . }",
        "answers": [
            "http://dbpedia.org/resource/Skype_Technologies"
        ]
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbp:class db:Club ; dbp:partOf db:{{{Bundesliga}}}. }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?movie dbo:filmType ?type ; dbo:director db:William_Shatner ; dbo:starring ?uri . FILTER (?type = \"Film\") }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Mountain ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Alpide_belt"
        ]
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a dbpedia:Film ; dbpedia:starring <http://dbpedia.org/resource/Leonardo_DiCaprio> . }",
        "answers": [
            "33"
        ]
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }",
        "answers": [
            "1986-02-28"
        ]
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri dbpedia-owl:starring <http://dbpedia.org/resource/Richard_Burton> . }",
        "answers": [
            "http://dbpedia.org/resource/Boom!_(film)",
            "http://dbpedia.org/resource/Divorce_His,_Divorce_Hers",
            "http://dbpedia.org/resource/Doctor_Faustus_(1967_film)",
            "http://dbpedia.org/resource/Hammersmith_Is_Out",
            "http://dbpedia.org/resource/The_Comedians_(1967_film)",
            "http://dbpedia.org/resource/The_Sandpiper",
            "http://dbpedia.org/resource/The_Taming_of_the_Shrew_(1967_film)",
            "http://dbpedia.org/resource/The_V.I.P.s_(film)",
            "http://dbpedia.org/resource/Under_Milk_Wood_(1972_film)",
            "http://dbpedia.org/resource/Who's_Afraid_of_Virginia_Woolf%3F_(film)"
        ]
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?developer WHERE { dbpedia:minecraft dbpedia-owl:developer ?developer . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?budget . ?budget <http://dbpedia.org/ontology/amount> ?val . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?recordLabel ?label WHERE { ?album dbo:artist <http://dbpedia.org/resource/Elvis_Presley> . ?album dbo:releaseDate ?releaseDate . ?album dbo:recordLabel ?recordLabel . ?recordLabel rdfs:label ?label . FILTER (?releaseDate = \"1956\") // Assuming Elvis's first album was released in 1956 } ORDER BY ?releaseDate LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?val WHERE { db:Toy_Story dbpedia:runtime ?val . }",
        "answers": [
            "4860"
        ]
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbo:Bandleader ; dbo:instrument dbo:Trumpet . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?film WHERE { ?film a <http://dbpedia.org/ontology/Film> . OPTIONAL { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> } . OPTIONAL { ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> } . FILTER ((?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall>) && (?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts>)) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbprop: <http://dbpedia.org/property/> SELECT DISTINCT ?year WHERE { dbpedia:Rachel_Stevens dbprop:birthDate ?date . BIND(EXTRACT(YEAR FROM ?date) as ?year) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri (COUNT(?s) AS ?frequency) WHERE { ?s dbo:deathCause ?uri . FILTER (!bound(?s)) } GROUP BY ?uri ORDER BY DESC(?frequency) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Yokohama_Marine_Tower> dbpedia-owl:height ?num . }",
        "answers": [
            "106.07"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?mountain WHERE { ?mountain a dbpedia-owl:Mountain ; dbpedia-owl:locatedInArea dbpedia:Italy ; dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Mont_Blanc"
        ]
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Alfred_Kleiner"
        ]
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:owner dbpedia:Donald_Trump ; a dbpedia-owl:Company . MINUS { ?uri dbpedia-owl:status ?closed } }",
        "answers": [
            "http://dbpedia.org/resource/The_Trump_Organization",
            "http://dbpedia.org/resource/Trump_Model_Management"
        ]
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT DISTINCT ?o1 WHERE { dbpedia2:Tom_Cruise dbpedia:spouse ?o1 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Eurasia> dbo:populationTotal ?val . }",
        "answers": [
            "5360351985"
        ]
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { dbpedia:The_Interpretation_of_Dreams dbpedia-owl:author ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Sigmund_Freud"
        ]
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia:John_Adams dbpedia-owl:birthDate ?val }",
        "answers": [
            "1735-10-30"
        ]
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:European_Union dbo:populationTotal ?uri . }",
        "answers": [
            "446828803"
        ]
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT ?currency WHERE { <http://dbpedia.org/resource/China> rdfs:seeAlso ?currency ; <http://dbpedia.org/ontology/type> \"currency\" . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:William_Shakespeare dbpedia-owl:deathDate ?uri . }",
        "answers": [
            "1616-04-23"
        ]
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbp:Rocket ?type . ?uri dbp:launchSite db:Baikonur_Cosmodrome . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?island WHERE { ?island dbpedia-owl:instanceOf <http://dbpedia.org/ontology/Island>; owl:someValuesFrom ?country. ?island dbpedia-owl:country ?country. FILTER(?country = <http://dbpedia.org/resource/Japan>). }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_of_Warcraft> dbpedia-owl:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Blizzard_Entertainment"
        ]
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Company dbpedia-resource:Company ; dbpedia-owl:industry dbpedia-resource:Advertising }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { VALUES ?types { dbpedia:University dbpedia:College } dbpedia:Angela_Merkel dbpedia-owl:almaMater ?uri . ?uri a ?types . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . ?uri rdf:type ?type . ?type rdfs:subClassOf* dbo:TelevisionShow . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbpedia-owl:starring dbpedia:Tom_Cruise. ?uri a dbpedia-owl:Film. }",
        "answers": [
            "http://dbpedia.org/resource/A_Few_Good_Men",
            "http://dbpedia.org/resource/All_the_Right_Moves_(film)",
            "http://dbpedia.org/resource/American_Made_(film)",
            "http://dbpedia.org/resource/Born_on_the_Fourth_of_July_(film)",
            "http://dbpedia.org/resource/Cocktail_(1988_film)",
            "http://dbpedia.org/resource/Collateral_(film)",
            "http://dbpedia.org/resource/Days_of_Thunder",
            "http://dbpedia.org/resource/Edge_of_Tomorrow",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Far_and_Away__Far_and_Away__1",
            "http://dbpedia.org/resource/Interview_with_the_Vampire_(film)",
            "http://dbpedia.org/resource/Jack_Reacher_(film)",
            "http://dbpedia.org/resource/Jack_Reacher:_Never_Go_Back",
            "http://dbpedia.org/resource/Jerry_Maguire__Jerry_Maguire__1",
            "http://dbpedia.org/resource/Knight_and_Day__Knight_and_Day__1",
            "http://dbpedia.org/resource/Legend_(1985_film)",
            "http://dbpedia.org/resource/Lions_for_Lambs",
            "http://dbpedia.org/resource/Losin'_It",
            "http://dbpedia.org/resource/Magnolia_(film)__Magnolia__1",
            "http://dbpedia.org/resource/Minority_Report_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_One",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_Two",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Fallout",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Ghost_Protocol",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Rogue_Nation",
            "http://dbpedia.org/resource/Mission:_Impossible_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_2",
            "http://dbpedia.org/resource/Mission:_Impossible_III",
            "http://dbpedia.org/resource/Oblivion_(2013_film)",
            "http://dbpedia.org/resource/Rain_Man",
            "http://dbpedia.org/resource/Risky_Business",
            "http://dbpedia.org/resource/Rock_of_Ages_(2012_film)",
            "http://dbpedia.org/resource/Taps_(film)",
            "http://dbpedia.org/resource/The_Color_of_Money",
            "http://dbpedia.org/resource/The_Firm_(1993_film)",
            "http://dbpedia.org/resource/The_Last_Samurai",
            "http://dbpedia.org/resource/The_Mummy_(2017_film)",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/Top_Gun:_Maverick",
            "http://dbpedia.org/resource/Top_Gun",
            "http://dbpedia.org/resource/Valkyrie_(film)",
            "http://dbpedia.org/resource/Vanilla_Sky",
            "http://dbpedia.org/resource/War_of_the_Worlds_(2005_film)"
        ]
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Everest> dbpedia-owl:locatedInArea ?location . ?location dbpedia-owl:country ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/China",
            "http://dbpedia.org/resource/Nepal"
        ]
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Dallas"
        ]
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?river WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?river . }",
        "answers": [
            "http://dbpedia.org/resource/East_River"
        ]
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:instanceOf dbpedia-owl:Swimmer ; dbpedia-owl:birthdayPlace <http://dbpedia.org/resource/Moscow> . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?s1 WHERE { ?s1 <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/Film> . ?s1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> . ?s1 <http://dbpedia.org/ontology/releaseDate> ?o1 . } ORDER BY DESC(?o1) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res a dbpedia-owl:Mountain . ?res dbpedia-owl:elevation ?elevation . ?res dbpedia-owl:continent dbpedia:Europe . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { db:cairo dbpedia-owl:populationTotal ?val . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:birthPlace <http://dbpedia.org/resource/Heraklion> . }",
        "answers": [
            "http://dbpedia.org/resource/Anastasios_Triantafyllou_(footballer)",
            "http://dbpedia.org/resource/Anastasios_Triantafyllou",
            "http://dbpedia.org/resource/Andreas_Bouchalakis",
            "http://dbpedia.org/resource/Andreas_Musalus",
            "http://dbpedia.org/resource/Antonis_Alexakis",
            "http://dbpedia.org/resource/Antonis_Bourselis",
            "http://dbpedia.org/resource/Archbishop_Makarios_of_Australia",
            "http://dbpedia.org/resource/Beata_Kitsikis",
            "http://dbpedia.org/resource/Charalampos_Charalampakis",
            "http://dbpedia.org/resource/Charalampos_Damianakis",
            "http://dbpedia.org/resource/Christoforos_Liontakis",
            "http://dbpedia.org/resource/Christoforos_Papakaliatis",
            "http://dbpedia.org/resource/Christos_Belevonis",
            "http://dbpedia.org/resource/Christos_Kozyrakis",
            "http://dbpedia.org/resource/Christos_Saloustros",
            "http://dbpedia.org/resource/Chrysovalantis_Kozoronis",
            "http://dbpedia.org/resource/Cyril_Lucaris",
            "http://dbpedia.org/resource/Dimitrios_Kiliaras",
            "http://dbpedia.org/resource/Dimitrios_Papadopoulos_(footballer,_born_1950)__Dimitrios_Papadopoulos__1",
            "http://dbpedia.org/resource/Dimitrios_Raptakis",
            "http://dbpedia.org/resource/Edison_Kola",
            "http://dbpedia.org/resource/Eleftherios_Goulielmakis",
            "http://dbpedia.org/resource/Emmanuel_Skordilis",
            "http://dbpedia.org/resource/Fotis_Kafatos",
            "http://dbpedia.org/resource/Franghias_Kavertzas",
            "http://dbpedia.org/resource/Georges_Panayotis",
            "http://dbpedia.org/resource/Georgios_Kalaitzakis",
            "http://dbpedia.org/resource/Georgios_Kastrofylakas",
            "http://dbpedia.org/resource/Georgios_Klontzas",
            "http://dbpedia.org/resource/Georgios_Kortezas",
            "http://dbpedia.org/resource/Georgios_Manousakis",
            "http://dbpedia.org/resource/Georgios_Samaras",
            "http://dbpedia.org/resource/Georgios_Sarris",
            "http://dbpedia.org/resource/Georgios_Sournakis",
            "http://dbpedia.org/resource/Georgios_Vlastos",
            "http://dbpedia.org/resource/Gianna_Angelopoulos-Daskalaki",
            "http://dbpedia.org/resource/Giannis_Boutsakis",
            "http://dbpedia.org/resource/Giannis_Dermitzakis",
            "http://dbpedia.org/resource/Giannis_Domatas",
            "http://dbpedia.org/resource/Giannis_Iatroudis",
            "http://dbpedia.org/resource/Giannis_Koutantos",
            "http://dbpedia.org/resource/Giannis_Vardinogiannis",
            "http://dbpedia.org/resource/Giorgos_Giakoumakis__Giorgos_Giakoumakis__1",
            "http://dbpedia.org/resource/Giorgos_Grammatikakis",
            "http://dbpedia.org/resource/Giorgos_Petrakis",
            "http://dbpedia.org/resource/Ieremias_Palladas",
            "http://dbpedia.org/resource/Ilias_Koutsoupias",
            "http://dbpedia.org/resource/Ioannis_Apakas",
            "http://dbpedia.org/resource/Ioannis_Ikonomou",
            "http://dbpedia.org/resource/Ioannis_Pagomenos",
            "http://dbpedia.org/resource/Iosif_Daskalakis",
            "http://dbpedia.org/resource/Irini_Vasiliou",
            "http://dbpedia.org/resource/Joseph_Sifakis",
            "http://dbpedia.org/resource/Konstantinos_Gouvis",
            "http://dbpedia.org/resource/Konstantinos_Provydakis",
            "http://dbpedia.org/resource/Konstanty_Korniakt",
            "http://dbpedia.org/resource/Kostas_Chaniotakis",
            "http://dbpedia.org/resource/Lampros_Kefaloukos",
            "http://dbpedia.org/resource/Lefteris_Gialousis",
            "http://dbpedia.org/resource/Lena_Platonos",
            "http://dbpedia.org/resource/Leonidas_Kyrkos",
            "http://dbpedia.org/resource/Lili_Zografou",
            "http://dbpedia.org/resource/Manolis_Bolakis",
            "http://dbpedia.org/resource/Manolis_Hatzidakis",
            "http://dbpedia.org/resource/Manolis_Moniakis",
            "http://dbpedia.org/resource/Manolis_Papamattheakis",
            "http://dbpedia.org/resource/Manolis_Patemtzis",
            "http://dbpedia.org/resource/Manolis_Roubakis",
            "http://dbpedia.org/resource/Manolis_Roussakis",
            "http://dbpedia.org/resource/Manolis_Rovithis",
            "http://dbpedia.org/resource/Manolis_Saliakas",
            "http://dbpedia.org/resource/Manolis_Stefanoudakis",
            "http://dbpedia.org/resource/Manuel_Fokas",
            "http://dbpedia.org/resource/Markos_Bathas",
            "http://dbpedia.org/resource/Meletius_I_Pegas",
            "http://dbpedia.org/resource/Michael_Fokas",
            "http://dbpedia.org/resource/Michael_Katehakis",
            "http://dbpedia.org/resource/Michail_Fragoulakis",
            "http://dbpedia.org/resource/Michalis_Sifakis",
            "http://dbpedia.org/resource/Michalis_Tzirakis",
            "http://dbpedia.org/resource/Minas_Chalkiadakis",
            "http://dbpedia.org/resource/Minas_Pitsos",
            "http://dbpedia.org/resource/Myron_Michailidis",
            "http://dbpedia.org/resource/Nadia_Valavani",
            "http://dbpedia.org/resource/Nektarios_Azizi",
            "http://dbpedia.org/resource/Nektarios_Tavernarakis",
            "http://dbpedia.org/resource/Nicholas_Kalliakis",
            "http://dbpedia.org/resource/Nikolaos_Gripiotis",
            "http://dbpedia.org/resource/Nikolaos_Ritzos",
            "http://dbpedia.org/resource/Nikonas_Spiliotakis",
            "http://dbpedia.org/resource/Nikos_Androulakis",
            "http://dbpedia.org/resource/Nikos_Karelis",
            "http://dbpedia.org/resource/Nikos_Kazantzakis",
            "http://dbpedia.org/resource/Nikos_Kousidis",
            "http://dbpedia.org/resource/Nikos_Machlas",
            "http://dbpedia.org/resource/Nikos_Marinakis",
            "http://dbpedia.org/resource/Nikos_Psimopoulos",
            "http://dbpedia.org/resource/Nikos_Vrettos",
            "http://dbpedia.org/resource/Ntinos_Konstantakis",
            "http://dbpedia.org/resource/Odysseas_Elytis",
            "http://dbpedia.org/resource/Oresti_Kacurri",
            "http://dbpedia.org/resource/Panagiotis_Kalaitzakis",
            "http://dbpedia.org/resource/Panagiotis_Petras",
            "http://dbpedia.org/resource/Petros_Giakoumakis",
            "http://dbpedia.org/resource/Petros_Lambardos",
            "http://dbpedia.org/resource/Petros_Marinakis",
            "http://dbpedia.org/resource/\u015eadi_\u00c7al\u0131k",
            "http://dbpedia.org/resource/Sapfo_Notara",
            "http://dbpedia.org/resource/Spyros_Danellis",
            "http://dbpedia.org/resource/Stavros_Arnaoutakis",
            "http://dbpedia.org/resource/Stavros_Labrakis",
            "http://dbpedia.org/resource/Theocharis_Silvestros",
            "http://dbpedia.org/resource/Theophanes_the_Cretan",
            "http://dbpedia.org/resource/Thomas_Bathas",
            "http://dbpedia.org/resource/Vangelis_Nikokyrakis",
            "http://dbpedia.org/resource/Vasilios_Babis",
            "http://dbpedia.org/resource/Vasilios_Vogiatzis",
            "http://dbpedia.org/resource/Victor_(iconographer)",
            "http://dbpedia.org/resource/Zacharias_Kavousakis"
        ]
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?child) as ?c) WHERE { <http://dbpedia.org/resource/Benjamin_Franklin> dbpedia-owl:child ?child . }",
        "answers": [
            "3"
        ]
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbpedia:altitude ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?res WHERE { dbpedia:Mecca dbpedia:country ?res . ?res a dbpedia:Country . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia: Claudia_Schiffer dbpedia:height ?val . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who wrote the book The Pillars of the Earth?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:The_Pillars_of_the_Earth dbo:author ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Ken_Follett"
        ]
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?genre WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?genre . }",
        "answers": [
            "http://dbpedia.org/resource/Art_rock",
            "http://dbpedia.org/resource/Experimental_music",
            "http://dbpedia.org/resource/Glam_rock",
            "http://dbpedia.org/resource/Noise_rock",
            "http://dbpedia.org/resource/Proto-punk",
            "http://dbpedia.org/resource/Rock_music"
        ]
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Sinatra> dbpedia-owl:birthPlace ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Hoboken,_New_Jersey"
        ]
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/City> ; <http://dbpedia.org/ontology/populationTotal> ?population . } ORDER BY ASC(?population) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Chagan_(closed_city)"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:TelevisionShow ; dbpedia-owl:creator dbpedia:Walt_Disney . }",
        "answers": [
            "http://dbpedia.org/resource/Disney_anthology_television_series",
            "http://dbpedia.org/resource/Donald_Duck",
            "http://dbpedia.org/resource/Oswald_the_Lucky_Rabbit"
        ]
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?holiday WHERE { ?holiday a dbpedia-owl:Holiday ; rdfs:seeAlso ?country . FILTER (strstarts(str(?country), \"http://dbpedia.org/resource/Sweden\")) . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:Apple_Inc_ dbpedia:netIncome ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?deathPlace WHERE { <http://dbpedia.org/resource/Abraham_Lincoln> dbpedia:deathPlace ?deathPlace }",
        "answers": [
            "http://dbpedia.org/resource/Washington,_D.C."
        ]
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX foaf: <http://xmlns.com/foaf/0.1/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> foaf:topic ?country . ?country dbpedia-owl:capital ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?country . }",
        "answers": [
            "http://dbpedia.org/resource/Canada"
        ]
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX db: <http://dbpedia.org/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?val WHERE { db:Michael_Jordan a db:Person; db:height ?val . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film a dbpedia:Film ; dbpedia:director <http://dbpedia.org/resource/Clint_Eastwood> ; dbpedia:starring <http://dbpedia.org/resource/Clint_Eastwood> . }",
        "answers": [
            "http://dbpedia.org/resource/A_Perfect_World",
            "http://dbpedia.org/resource/Absolute_Power_(film)",
            "http://dbpedia.org/resource/Blood_Work_(film)",
            "http://dbpedia.org/resource/Cry_Macho_(film)",
            "http://dbpedia.org/resource/Dirty_Harry_(film_series)",
            "http://dbpedia.org/resource/Firefox_(film)",
            "http://dbpedia.org/resource/Gran_Torino",
            "http://dbpedia.org/resource/Heartbreak_Ridge",
            "http://dbpedia.org/resource/High_Plains_Drifter",
            "http://dbpedia.org/resource/Honkytonk_Man",
            "http://dbpedia.org/resource/Million_Dollar_Baby__Million_Dollar_Baby__1",
            "http://dbpedia.org/resource/Pale_Rider",
            "http://dbpedia.org/resource/Play_Misty_for_Me",
            "http://dbpedia.org/resource/Space_Cowboys",
            "http://dbpedia.org/resource/Sudden_Impact",
            "http://dbpedia.org/resource/The_Bridges_of_Madison_County_(film)",
            "http://dbpedia.org/resource/The_Eiger_Sanction_(film)",
            "http://dbpedia.org/resource/The_Mule_(2018_film)",
            "http://dbpedia.org/resource/The_Outlaw_Josey_Wales__The_Outlaw_Josey_Wales__1",
            "http://dbpedia.org/resource/The_Rookie_(1990_film)",
            "http://dbpedia.org/resource/True_Crime_(1999_film)",
            "http://dbpedia.org/resource/Unforgiven",
            "http://dbpedia.org/resource/White_Hunter_Black_Heart"
        ]
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:currency <http://dbpedia.org/resource/West_African_CFA_franc>. }",
        "answers": [
            "http://dbpedia.org/resource/Benin",
            "http://dbpedia.org/resource/Burkina_Faso",
            "http://dbpedia.org/resource/Colonial_Mauritania",
            "http://dbpedia.org/resource/Colony_of_Niger",
            "http://dbpedia.org/resource/Economic_Community_of_West_African_States",
            "http://dbpedia.org/resource/French_Dahomey",
            "http://dbpedia.org/resource/French_Togoland",
            "http://dbpedia.org/resource/Guinea-Bissau",
            "http://dbpedia.org/resource/History_of_Togo",
            "http://dbpedia.org/resource/Ivory_Coast",
            "http://dbpedia.org/resource/Mali",
            "http://dbpedia.org/resource/Niger",
            "http://dbpedia.org/resource/People's_Republic_of_Benin",
            "http://dbpedia.org/resource/Republic_of_Dahomey",
            "http://dbpedia.org/resource/Republic_of_Upper_Volta",
            "http://dbpedia.org/resource/Senegal",
            "http://dbpedia.org/resource/Senegambia_Confederation",
            "http://dbpedia.org/resource/Togo"
        ]
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbpedia:Iraq dbpedia-owl:populationTotal ?val . }",
        "answers": [
            "40462701"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?uri WHERE { ?uri owl:intersectionOf (?type rdf:type dbpedia-owl:Holiday) . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbprop: <http://dbpedia.org/prop/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:PoliticalParty ; dbprop:country <http://dbpedia.org/resource/Greece> ; dbprop:ideology <http://dbpedia.org/resource/Pro-Europeanism> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }",
        "answers": [
            "1965-10-01",
            "1968-07-27",
            "1969-02-01",
            "1971-01-26",
            "1971-04-12",
            "1972-12-19",
            "1973-06-15",
            "1973-09-05",
            "1973-12-03",
            "1980-05-19",
            "1985-11-30"
        ]
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:Three_Dancers dbpedia-owl:author ?painter . ?painter dbpedia-owl:styleOrMovement ?uri . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/> SELECT DISTINCT ?actor WHERE { ?actor a dbpedia:Actor . ?actor dbpedia:birthPlace ?birthPlace . ?birthPlace dbpedia:country ?country . ?country dbpedia:fullUrl <http://dbpedia.org/resource/Germany> . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Brooklyn_Bridge dbpedia-owl:architect ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/John_Augustus_Roebling"
        ]
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Ramin_Djawadi"
        ]
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Film/dbpedia:director <http://dbpedia.org/resource/Francis_Ford_Coppola> . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbpedia:adele dbpedia-owl:birthName ?name. }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?album WHERE { ?album a <http://dbpedia.org/ontology/Album> . ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?album <http://dbpedia.org/ontology/releaseDate> ?releaseDate . FILTER (!bound(?releaseDate)) } ORDER BY DESC(?releaseDate) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?currency WHERE { dbpedia-owl:Czech_Republic dbpedia-owl:currency ?currency . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT ?uri WHERE { ?uri dbpedia:birthPlace dbp:Vienna . ?uri dbpedia:deathPlace ?deathLocation . FILTER(?deathLocation owl:sameAs dbp:Berlin) } UNION { ?uri dbpedia:deathPlace dbp:Berlin . ?uri dbpedia:birthPlace ?birthLocation . FILTER(?birthLocation owl:sameAs dbp:Vienna) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?bridge WHERE { ?bridge a dbpedia-owl:Bridge ; dbpedia-owl:crosses dbpedia:Seine . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:occupation res:Musician . ?x dbpedia:type Book ; dbpedia:author ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-ontology:TelevisionShow . ?uri dbpedia-ontology:creator <http://dbpedia.org/resource/John_Cleese> . }",
        "answers": [
            "http://dbpedia.org/resource/Fawlty_Towers",
            "http://dbpedia.org/resource/Monty_Python's_Fliegender_Zirkus",
            "http://dbpedia.org/resource/Monty_Python's_Flying_Circus",
            "http://dbpedia.org/resource/Monty_Python's_Personal_Best",
            "http://dbpedia.org/resource/Parrot_Sketch_Not_Included_\u2013_20_Years_of_Monty_Python",
            "http://dbpedia.org/resource/Python_Night_\u2013_30_Years_of_Monty_Python"
        ]
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-prop: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbpedia-owl:Writer true . ?uri dbpedia-prop:nobelPrize ?award . FILTER (strstarts(str(?award), \"Nobel Prize in Literature\")) }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Giuseppe_Piazzi"
        ]
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX db: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res db:occupation res:Bandleader . ?res db:instrument res:Trumpet . }",
        "answers": [
            "http://dbpedia.org/resource/Abatte_Barihun",
            "http://dbpedia.org/resource/Alan_Silva",
            "http://dbpedia.org/resource/Artie_Fields",
            "http://dbpedia.org/resource/Charlie_Spivak",
            "http://dbpedia.org/resource/Danny_Davis_(country_musician)",
            "http://dbpedia.org/resource/Doc_Cheatham",
            "http://dbpedia.org/resource/Ernest_%22Doc%22_Paulin",
            "http://dbpedia.org/resource/Jack_Jackson_(radio_personality)",
            "http://dbpedia.org/resource/Jacobo_Rubalcaba",
            "http://dbpedia.org/resource/Jimmy_Dorsey",
            "http://dbpedia.org/resource/Kaj_Backlund",
            "http://dbpedia.org/resource/Lloyd_Hunter",
            "http://dbpedia.org/resource/Marlon_Jordan",
            "http://dbpedia.org/resource/Mick_Mulligan",
            "http://dbpedia.org/resource/Ollie_Mitchell",
            "http://dbpedia.org/resource/Ovie_Alston",
            "http://dbpedia.org/resource/Pacho_Galan",
            "http://dbpedia.org/resource/Red_Perkins",
            "http://dbpedia.org/resource/Richard_Maltby_Sr.",
            "http://dbpedia.org/resource/Steamboat_Willie_(musician)"
        ]
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/BasketballPlayer> . ?uri <http://dbpedia.org/ontology/heightInCm> ?height . FILTER(?height > 200) }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . }",
        "answers": [
            "http://dbpedia.org/resource/Pretty_Woman",
            "http://dbpedia.org/resource/Runaway_Bride_(film)"
        ]
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Ottawa"
        ]
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:SoccerPlayer ?soccerPlayerType ; dbo:birthPlace ?birthPlace . ?birthPlace rdfs:label \"Malta\" . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Yaound\u00e9"
        ]
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub rdfs:subClassOf* dbpedia-owl:ProgrammingLanguage . }",
        "answers": [
            "1"
        ]
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Astronaut dbo:nationality ?nationality . FILTER ( (?nationality = dbo:Soviet_Union) OR (?nationality = dbo:Russia) ) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri}",
        "answers": [
            "http://dbpedia.org/resource/Seth_MacFarlane"
        ]
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?population WHERE { dbpedia:Mexico_City dbpedia-owl:populationTotal ?population . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?creator WHERE { dbpedia:Batman db:creator ?creator . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/Canberra> <http://dbpedia.org/ontology/populationTotal> ?number . }",
        "answers": [
            "453558"
        ]
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbpedia:areaTotal ?val }",
        "answers": [
            "34084130000"
        ]
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?numberOfEmployees WHERE { dbpedia:IBM dbpedia-owl:numberOfEmployees ?numberOfEmployees . }",
        "answers": [
            "282100"
        ]
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?value WHERE { db: Pulp_Fiction dbpedia: budget ?value . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?film WHERE { <http://dbpedia.org/resource/Jesse_Eisenberg> <http://dbpedia.org/ontology/starring> ?film . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?type dbpedia-owl:subclassOf dbpedia:Film . ?uri dbpedia-owl:type ?type ; dbpedia-owl:country dbpedia:Denmark . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { dbpedia:Himalayas dbpedia-owl:country ?country . }",
        "answers": [
            "http://dbpedia.org/resource/India",
            "http://dbpedia.org/resource/Kashmir"
        ]
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/ontology/areaTotal> ?area . } ORDER BY DESC(?area) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX db: <http://dbpedia.org/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?res WHERE { db:Angela_Merkel dbo:almaMater ?res . ?res rdf:type dbo:EducationalInstitution . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?creator WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?creator . }",
        "answers": [
            "http://dbpedia.org/resource/Bob_Ogle",
            "http://dbpedia.org/resource/Paul_Murry"
        ]
    }
]