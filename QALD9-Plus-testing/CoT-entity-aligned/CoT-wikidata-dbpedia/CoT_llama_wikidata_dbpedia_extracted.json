[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> dbo:founder ?o1 . }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?film WHERE { ?film dbpedia-ontology:director ?director. ?director rdfs:seeAlso <http://dbpedia.org/resource/Stanley_Kubrick>. }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Musical ; dbpedia:MusicBy db:Elton_John . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wikidata:Q40984 dbpedia:developer ?uri . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?club a dbpedia-owl:SoccerClub ; dbpedia-owl:league <http://dbpedia.org/resource/Bundesliga> . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?actor WHERE { ?movie dbpedia-ontology:director <http://dbpedia.org/resource/William_Shatner> ; dbpedia-ontology:starring ?actor . }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbr:Mountain ; dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?film) AS ?c) WHERE { ?film dbpedia:Film. ?film dbpedia:starring <http://dbpedia.org/resource/Leonardo_DiCaprio>. }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbpedia:deathDate ?date . }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ontology:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri dbpedia-ontology:starring <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?developer WHERE { dbpedia:Minecraft dbpedia:developer ?developer . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> dbpedia:budget ?val }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbpedia2: <http://dbpedia.org/resource/> SELECT ?label WHERE { dbpedia2:Elvis_Presley dbp:artist ?album . ?album dbp:releaseDate ?date . ?album dbp:recordLabel ?recordLabel . ?recordLabel dbp:label ?label . FILTER (?date = MIN(?date)) }"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?runtime WHERE { dbpedia:Toy_Story dbpedia-ontology:runtime ?runtime . }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q5280538 ; wdt:P1303 wd:Q8338 . }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "SELECT DISTINCT ?film WHERE { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?film a <http://dbpedia.org/ontology/Film> . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?year WHERE { dbpedia:Rachel_Stevens dbpedia-ontology:birthYear ?year . }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?s dbpedia-owl:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?height WHERE { ?tower dbpedia:height ?height . ?tower wikibase:wikiResourceInstance ?resource . ?resource wikibase:isBasedOn ?wikidata . ?wikidata wdt:P31 wd:Q1207989 . ?resource dbpedia-owl:uri ?tower_uri . FILTER regex(?tower_uri, \"dbpedia.org/resource/Yokohama_Marine_Tower\", \"i\") . }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbp:Mountain ; dbp:locatedInArea db:Italy ; dbp:elevation ?elevation . FILTER (?uri = (SELECT ?x WHERE { ?x a dbp:Mountain ; dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1)) }"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?business WHERE { ?entity db:owner ?business . ?business rdfs:label \"The Trump Organization\"@en . ?entity db:owner wd:Q22686 . }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Tom_Cruise> dbpedia-owl:spouse ?o1 . }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:resource/Eurasia dbpedia-owl:populationTotal ?val }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> SELECT ?uri WHERE { ?s dbpedia:author ?uri FILTER(regex(str(?s), \"The_Interpretation_of_Dreams\")) }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbr-ont: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?val WHERE { dbr:John_Adams wdt:P569 ?val . }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { ?e dbo:populationTotal ?population . ?e dbo:thumbnail <http://dbpedia.org/resource/Category:European_Union> }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbo:currency ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?deathDate WHERE { db:William_Shakespeare dbo:deathDate ?deathDate . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri a dbpedia-owl:Rocket. ?uri dbpedia-owl:launchSite <http://dbpedia.org/resource/Baikonur_Cosmodrome>. }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri dbo:island ?island. ?island dbo:country ?country. ?country wdt:P17 wd:Q17. }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:World_of_Warcraft dbpedia:developer ?uri . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:industry <http://dbpedia.org/resource/Advertising> . ?uri a dbpedia-owl:Company . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/almaMater> ?uri . }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?show dbp:TelevisionShow ?type . ?show dbp:starring ?starring . ?starring dbp:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri db:starring db:Tom_Cruise. ?uri db:type db:Film. }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Mount_Everest> dbo:country ?country . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { dbr:John_F._Kennedy dbp:deathPlace ?uri . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbpedia-owl:crossedBy ?uri . }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri db:Swimmer ?birthPlace . ?birthPlace db:birthPlace <http://dbpedia.org/resource/Moscow> . }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?s1 WHERE { ?s1 dbpedia:starring <http://dbpedia.org/resource/Alec_Guinness>. ?s1 dbpedia:releaseDate ?o1. FILTER (LANG(?o1) = 'en'). } ORDER BY DESC(?o1) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbpedia-owl:Mountain true . ?res dbpedia-owl:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia_resource: <http://dbpedia.org/resource/> SELECT ?val FROM <http://dbpedia.org> WHERE { dbpedia_resource:Cairo dbpedia:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbp:birthPlace <http://dbpedia.org/resource/Heraklion> }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { dbp:Benjamin_Franklin db:child ?uri . }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?elevation WHERE { dbpedia-owl:D\u00fcsseldorf_Airport dbpedia-owl:elevation ?elevation }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?country WHERE { dbr:Mecca dbpedia:country ?country . }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/> SELECT ?val WHERE { dbpedia: Claudia_Schiffer dbpedia-ontology:height ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri db:Holiday }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "SELECT DISTINCT ?genre WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?genre . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Frank_Sinatra> dbpedia:birthPlace ?uri }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ontology:City ?population . FILTER (?population = MIN(?population)) } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?show WHERE { ?show dbpedia:TelevisionShow ?creator. ?creator dbpedia:creator ?waltDisney. ?waltDisney dbpedia:resource ?dbpediaWaltDisney. FILTER ( ?dbpediaWaltDisney = <http://dbpedia.org/resource/Walt_Disney> ) }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT ?holiday WHERE { ?holiday a dbpedia-owl:Holiday . ?holiday dbpedia-owl:country dbpedia-resource:Sweden . ?holiday dbpedia-id:Holiday . }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbprop: <http://dbpedia.org/property/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { db:Apple_Inc. dbprop:netIncome ?uri . }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbpedia:Abraham_Lincoln dbpedia-owl:deathPlace ?uri . }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?capital WHERE { dbpedia:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia-owl:Michael_Jordan dbpedia-owl:height ?val . }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a db:Film ; db:starring db:Clint_Eastwood ; db:director db:Clint_Eastwood . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?country WHERE { ?country dbpedia-owl:currency <http://dbpedia.org/resource/West_African_CFA_franc> . }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Iraq dbpedia-ontology:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/> SELECT DISTINCT ?uri WHERE { ?type dbpedia-owl:subClassOf* dbpedia-owl:Holiday . ?uri dbpedia-owl:type ?type . }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?party WHERE { ?party dbpedia-ontology:type dbpedia-resource:PoliticalParty . ?party dbpedia-ontology:country dbpedia-resource:Greece . ?party dbpedia-ontology:ideology dbpedia-resource:Pro-Europeanism . }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?artist ?movement WHERE { wd:Q3235867 wdt:P50 ?artist . ?artist dbpedia-owl:movement ?movement . }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?actor WHERE { ?actor dbpedia-owl:birthPlace ?birthPlace . ?birthPlace dbpedia-owl:country ?country . ?country dbpedia-owl:equivalentTo <http://www.wikidata.org/entity/Q183> . ?actor <http://dbpedia.org/ontology/label> ?actor . ?actor <http://dbpedia.org/ontology/label> ?label . FILTER (str(?label) = \"Actor\"@en) . ?actor rdf:type ?type . FILTER (?type = wd:Q33999) }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> dbo:architect ?uri . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "SELECT DISTINCT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?composer . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX owl: <http://www.w3.org/2002/07/owl/> SELECT ?uri WHERE { ?movie db:Film ?uri ; ?dir db:director ?director . ?director owl:sameAs <http://www.wikidata.org/entity/Q56094> . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?name WHERE { dbpedia:Adele dbpedia-ontology:birthName ?name }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "SELECT DISTINCT ?albumUri WHERE { ?album a <http://dbpedia.org/ontology/Album> . ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?album <http://dbpedia.org/ontology/releaseDate> ?releaseDate . FILTER (?album <http://dbpedia.org/ontology/releaseDate> ?releaseDate) ORDER BY ?releaseDate ASC LIMIT 1 }"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbp:birthPlace db:Vienna . FILTER(?uri dbp:deathPlace db:Berlin) }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri db:Bridge dbr:Seine . ?uri db:crosses dbr:Seine . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia_resource: <http://dbpedia.org/resource/> SELECT ?musician (COUNT(?book) AS ?num_books) WHERE { ?musician dbpedia:occupation dbpedia_resource:Musician . ?book dbpedia:type dbpedia:Book . ?musician dbpedia:author ?book . } GROUP BY ?musician ORDER BY DESC(?num_books) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia:TelevisionShow . ?uri dbpedia:creator <http://dbpedia.org/resource/John_Cleese> . }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbp:Writer . ?uri dbp:award ?award . ?award db:label ?label . FILTER (regex(?label, \"Nobel Prize in Literature\", \"i\")) }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?discoverer WHERE { dbp:Ceres_(dwarf_planet) db:discoverer ?discoverer . }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbpedia:occupation <http://dbpedia.org/resource/Bandleader>. ?res dbpedia:instrument <http://dbpedia.org/resource/Trumpet>. }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:BasketballPlayer ?object . ?uri dbpedia-owl:height ?height . FILTER(?height > 200) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/Canada> dbo:capital ?o1 . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri a dbp:Athlete ; dbp:birthPlace ?birthPlace . ?birthPlace dbp:location dbp:Malta . }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Cameroon> }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbo:ProgrammingLanguage . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Astronaut> . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri . }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbo:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?creator WHERE { <http://dbpedia.org/resource/Batman> dbo:creator ?creator . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?population WHERE { <http://dbpedia.org/resource/Australia> dbpedia-owl:capital ?capital . ?capital dbpedia-owl:populationTotal ?population . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbo:areaTotal ?val. }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?numberOfEmployees WHERE { dbpedia:IBM dbpedia-ontology:numberOfEmployees ?numberOfEmployees . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?budget WHERE { ?movie dbpedia-ontology:budget ?budget . FILTER (?movie = <http://dbpedia.org/resource/Pulp_Fiction>) . ?entity wdt:P2130 ?budget . FILTER (?entity = wd:Q104123) . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?movie WHERE { ?actor dbpedia:resource <http://dbpedia.org/resource/Jesse_Eisenberg> . ?movie dbpedia:starring ?actor . FILTER (?movie a <http://dbpedia.org/ontology/Film> ) }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Film . ?uri dbo:country <http://dbpedia.org/resource/Denmark> . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { db:Himalayas db:country ?uri . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Country ?country . ?country dbpedia:areaTotal ?area . } ORDER BY DESC(?area) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { dbr:Angela_Merkel dbr:almaMater ?res . FILTER (strstarts(str(?res), \"http://dbpedia.org/ontology/\")) }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?creator WHERE { <http://dbpedia.org/resource/Goofy> dbo:creator ?creator . }"
    }
]