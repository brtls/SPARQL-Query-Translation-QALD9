[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "SELECT ?uri WHERE { ?film <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://www.w3.org/2000/01/rdf-schema#isSeeAlso> ?uri . FILTER(STRSTARTS(STR(?film), \"http://dbpedia.org/resource/\")) }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia_resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Musical dbpedia:musicBy dbpedia_resource:Elton_John . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?developer WHERE { dbpedia:Skype wdt:P178 ?developer . }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbpo: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q476028 ; wdt:P118 ?league . ?league dbpo:name \"Bundesliga\"@en . FILTER(lang(?league) = 'en') }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?actor WHERE { ?movie dbpedia:director <http://dbpedia.org/resource/William_Shatner> ; dbpedia:starring ?actor . }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Mountain dbpedia:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?film) AS ?c) WHERE { ?film dbp:starring <http://dbpedia.org/resource/Leonardo_DiCaprio> . ?film a dbp:Film . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri db:starring <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia-ontology:Minecraft dbpedia-ontology:developer ?uri . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> SELECT DISTINCT ?val WHERE { dbpedia:The_Lego_Movie dbpedia:budget ?val }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/> PREFIX wikidata-owl: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?label WHERE { ?album a wikidata:Q482994 . ?album wikidata-owl:P175 <http://dbpedia.org/resource/Elvis_Presley> . ?album wikidata-owl:P577 ?date . ?album wikidata-owl:P264 ?label . FILTER (?date = MIN(?date)) }"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbo:ToyStory dbo:runtime ?val . }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE {?uri db:occupation wikidata:P106 . ?uri db:instrument wikidata:Q8338 . ?uri wikidata:P106 wikidata:Q5280538 . UNION ?uri wikidata:P106 wikidata:Q806349 . }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film dbpedia-owl:starring ?starring. ?starring dbpedia-owl:starring ?julia_roberts. ?julia_roberts dbpedia-owl:director ?garry_marshall. ?garry_marshall dbpedia-owl:director ?film. }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?year WHERE { dbpedia:Rachel_Stevens wdt:P569 ?date . BIND(YEAR(?date) as ?year) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?cause WHERE { SELECT ?cause (COUNT(DISTINCT ?s) AS ?count) WHERE { ?s dbpedia-owl:deathCause ?cause . ?s a ?type . } GROUP BY ?cause } ORDER BY DESC(?count) LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?height WHERE { dbpedia-owl:Yokohama_Marine_Tower dbpedia-owl:height ?height . }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:locatedInArea db:Italy . ?uri dbpedia:elevation ?elevation . ?uri a dbpedia:Mountain . } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "SELECT DISTINCT ?doctoralAdvisor WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?doctoralAdvisor . }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?owner WHERE { ?owner db:owner dbp:Donald_Trump . }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?o1 WHERE { dbpedia:Tom_Cruise wdt:P26 ?o1 . }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { dbp:Eurasia db:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?author WHERE { ?book a dbo:Book . ?book dbo:author ?author . ?book dbo:abstract ?abstract . <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbo:author ?author . }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/John_Adams> db:birthDate ?val }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?value WHERE { ?s dbpedia-ontology:populationTotal ?value . FILTER (lang(?value) = 'en') . }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbpedia-owl:currency ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?deathDate WHERE { <http://dbpedia.org/resource/William_Shakespeare> dbpedia-owl:deathDate ?deathDate . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?rocket WHERE { ?rocket a dbpedia-owl:Rocket ; dbpedia-owl:launchSite dbpedia-resource:Baikonur_Cosmodrome . }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23442 ; wdt:P17 wd:Q17 . }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 dbo:developer ?uri . }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:Company wd:Q4830453 ; dbpedia:industry wd:Q39809 . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/almaMater> ?uri . GRAPH <http://dbpedia.org> { ?uri <http://xmlns.com/foaf/0.1/isPrimaryTopicOf> ?dbpedia_uri . } BIND(?dbpedia_uri AS ?uri) }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?type dbpedia-ontology:subclassOf dbpedia-ontology:TelevisionShow . ?uri dbpedia-ontology:starring dbpedia-resource:Neil_Patrick_Harris . ?uri dbpedia-ontology:type ?type . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?film ?movie WHERE { ?film dbo:starring ?movie. ?movie dbo:starring <http://dbpedia.org/resource/Tom_Cruise>. FILTER (?film a dbo:Film). }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?country WHERE { dbpedia:Mount_Everest wdt:P131 ?location . ?location wdt:P17 ?country . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbpedia:John_F._Kennedy dbpedia-owl:deathPlace ?uri . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:Brooklyn_Bridge dbpedia:crosses ?uri }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia:birthPlace <http://dbpedia.org/ontology/birthPlace> . ?uri dbpedia:birthPlace <http://dbpedia.org/ontology/birthPlace> owl:sameAs <http://www.wikidata.org/entity/P19> . ?uri dbpedia:birthPlace <http://dbpedia.org/resource/Moscow> . ?uri a dbpedia:Swimmer . }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?s1 WHERE { ?s1 dbpedia-owl:starring <http://dbpedia.org/resource/Alec_Guinness> . ?s1 dbpedia-owl:film <http://dbpedia.org/ontology/Film> . ?s1 dbpedia-owl:releaseDate ?o1 . } ORDER BY DESC(?o1) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res a dbp:Mountain . ?res dbo:elevation ?elevation . FILTER (?elevation != 'NaN' && ?elevation != 'unknown') } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Cairo> dbpedia-ontology:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> ?person dbo:birthPlace wd:Q160544 . SELECT ?person"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { dbp:Benjamin_Franklin db:child ?uri . }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?elevation WHERE { dbpedia:Airport ?airport . ?airport dbpedia:elevation ?elevation . FILTER(regex(str(?airport), \"D\u00fcsseldorf_Airport\")) }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?country WHERE { ?mecca dbo:location ?country . ?country rdfs:label ?countryLabel . FILTER (lang(?countryLabel) = \"en\") }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { dbp:Claudia_Schiffer dbpedia:height ?height }"
    },
    {
        "natural_language_question": "Who wrote the book The Pillars of the Earth?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?author WHERE { <http://dbpedia.org/resource/The_Pillars_of_the_Earth> dbpedia:author ?author . }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?genre WHERE { dbpedia:Lou_Reed dbpedia-ontology:genre ?genre . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?birthPlace WHERE { dbpedia:Frank_Sinatra dbo:birthPlace ?birthPlace. }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri db:City ?population . FILTER (?population = MIN(?population)) } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:creator <http://dbpedia.org/resource/Walt_Disney> . ?uri a dbo:TelevisionShow . }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT ?holiday WHERE { ?holiday a dbpedia:Holiday . ?holiday dbpedia:country wikidata:P17 . ?holiday wikidata:Q34 . }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { dbp:Apple_Inc. dbo:netIncome ?uri . }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:deathPlace dbr:Ford's_Theatre }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country ?capital WHERE { ?country dbo:country <http://dbpedia.org/resource/Himalayas> . ?country dbo:capital ?capital . ?country dbo:country ?country . FILTER ( regex(str(?country), \"Nepal|India|Tibet\") = \"true\" ) }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?country . }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbo:Michael_Jordan dbo:height ?val . }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:director <http://dbpedia.org/resource/Clint_Eastwood> ; dbpedia-owl:starring <http://dbpedia.org/resource/Clint_Eastwood> . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:currency ?currency . ?currency <http://dbpedia.org/resource/West_African_CFA_franc> . }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { dbo:Iraq dbo:populationTotal ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbp:Holiday . ?uri owl:sameAs wd:Q1445650 . }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbpedia-ont: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-ont:PoliticalParty ?party . ?party dbpedia-ont:country dbpedia:Greece . ?party dbpedia-ont:ideology dbpedia:Pro-Europeanism . }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?actor ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia: The_Three_Dancers dbpedia-owl:author ?painter . ?painter dbpedia-owl:movement ?uri . }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:Actor . ?uri dbpedia-owl:birthPlace ?birthPlace . ?birthPlace dbpedia-owl:country <http://dbpedia.org/resource/Germany> . }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri FROM <http://dbpedia.org> WHERE { db:Brooklyn_Bridge dbo:architect ?uri . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "SELECT DISTINCT ?composer WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?composer . }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbpedia-owl:Film ; dbpedia-owl:director <http://dbpedia.org/resource/Francis_Ford_Coppola> . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbpedia-resource: <http://dbpedia.org/resource/> SELECT ?name WHERE { dbpedia-resource:Adele dbpedia:birthName ?name . }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?album WHERE { ?album a dbpedia:Album . ?album dbpedia:artist <http://dbpedia.org/resource/Queen_(band)> . ?album dbpedia:releaseDate ?date . } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?currency WHERE { ?country dbpedia-owl:currency ?currency . ?country wikibase:reference <http://dbpedia.org/resource/Czech_Republic> . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:birthPlace <http://dbpedia.org/resource/Vienna> . ?uri dbo:deathPlace <http://dbpedia.org/resource/Berlin> . }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?dbpedia_uri WHERE { ?dbpedia_uri dbpedia-owl:Bridge ; dbpedia-owl:crosses <http://dbpedia.org/resource/Seine> . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT ?uri (COUNT(?book) AS ?count) WHERE { ?uri a db:Musician . ?x a db:Author ; db:Book ?book . ?uri db:occupation ?occupation . FILTER ( ?occupation = db:occupation ) } GROUP BY ?uri ORDER BY DESC(?count) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/John_Cleese> . ?uri <http://dbpedia.org/ontology/creator> ?creator . ?creator <http://dbpedia.org/ontology/subject> ?uri . ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/TelevisionShow> . FILTER (?creator = <http://dbpedia.org/ontology/creator>) } UNION { ?uri <http://dbpedia.org/ontology/subject> <http://dbpedia.org/resource/John_Cleese> . FILTER (?uri = ?creator) ?creator <http://dbpedia.org/ontology/subject> ?uri . ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/TelevisionShow> . }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri db:Writer . ?uri wdt:P166 wd:Q37922 . }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?res WHERE { ?res dbpedia-owl:occupation <http://dbpedia.org/resource/Bandleader> . ?res dbpedia-owl:instrument <http://dbpedia.org/resource/Trumpet> . }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/BasketballPlayer> <http://dbpedia.org/ontology/height> ?height . FILTER(?height > 200) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT ?film WHERE { ?film dbpedia-ontology:film ?film_uri . ?film dbpedia-ontology:starring ?starring1 , ?starring2 . ?starring1 dbpedia-ontology:actor <http://dbpedia.org/resource/Julia_Roberts> . ?starring2 dbpedia-ontology:actor <http://dbpedia.org/resource/Richard_Gere> . }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> dbpedia:capital ?o1 . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbpedia-owl:birthPlace <http://dbpedia.org/resource/Malta> . ?uri a dbpedia-owl:SoccerPlayer . }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri . }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub db:ProgrammingLanguage ?prop . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Astronaut> . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?population WHERE { <http://dbpedia.org/resource/Mexico_City> dbpedia-owl:populationTotal ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman> dbo:creator ?uri . <http://www.wikidata.org/entity/Q2695156> wdt:P170 ?uri . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/capital> ?capital . ?capital <http://dbpedia.org/ontology/populationTotal> ?number . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:North_Rhine-Westphalia dbo:areaTotal ?val . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?numberOfEmployees WHERE { dbr:IBM dbo:numberOfEmployees ?numberOfEmployees . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/property/> SELECT ?budget WHERE { dbpedia:Pulp_Fiction dbpedia:budget ?budget . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> . }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> PREFIX wkt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?film dbo:country ?country . ?country wkt:SameAs wd:Q35 . ?film wkt:SameAs wd:Q11424 . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?country WHERE { dbpedia-owl:Himalayas dbpedia-owl:country ?country . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/ontology/areaTotal> ?area . } ORDER BY DESC(?area) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/ontology/> SELECT ?res WHERE { dbp:Angela_Merkel dbp:almaMater ?res . ?res a dbp:University . }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia:Goofy dbo:creator ?uri . }"
    }
]