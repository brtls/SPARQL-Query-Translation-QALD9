[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q1336200 wdt:P112 ?uri }"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P57 wd:Q2001 . }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q2743; wdt:P86 wd:Q2808 }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?developer WHERE { wd:Q40984 wdt:P178 ?developer. }"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/entity/Q476028> ; <http://www.wikidata.org/entity/P118> <http://www.wikidata.org/entity/Q82595> . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?x wdt:P57 wdt:Q16297. ?x wdt:P161 ?uri. }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wdt:P8502. ?uri wdt:P2044 ?elevation. FILTER (xsd:double(?elevation) > 0). ORDER BY DESC(?elevation). OFFSET 0. LIMIT 1 }"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://www.wikidata.org/entity/Q11424> ; <http://www.wikidata.org/entity/P161> <http://www.wikidata.org/entity/Q38111> . }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?date WHERE { SERVICE wikibase:labels { wd:Q53713 wdt:P570 ?date . } }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX wikidata: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri p:P161 wikidata:Q34851 . ?uri p:P161 wikidata:Q151973 . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q49740 wdt:P178 ?uri }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX schema: <http://schema.org/> SELECT ?n WHERE { ?s schema:budget ?n }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?x rdf:type wd:Q482994 ; wdt:P175 wd:Q303 ; wdt:P577 ?y ; wdt:P264 ?uri . FILTER (?y > \"1956-03-23\"^^xsd:date) } ORDER BY ASC(?y) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?runtime WHERE { wd:Q171048 wd:P2047 ?runtime . }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?entity WHERE { ?entity wdt:P106 ?bandleaderType ; wdt:P1303 wd:Q8338. FILTER(?bandleaderType = wd:Q5280538 || ?bandleaderType = wd:Q806349) }"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?filmTitle WHERE { ?film wikidata:P11424 ?statement. ?film wikidata:P161 wikidata:Q40523. ?film wikidata:P57 wikidata:Q315087. SERVICE wikidata:ldbr { BIND(STRAFTER(STR(?film), STR.wikidata:entity/) AS ?filmTitle). } FILTER EXISTS { ?film wikidata:P161 wikidata:Q40523 } FILTER EXISTS { ?film wikidata:P57 wikidata:Q315087 } }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/entity/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?birthYear WHERE { wd:Q241665 wdt:P569 ?birthYear . }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "SELECT DISTINCT ?x WHERE { ?uri wdt:P509 ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { wd:Q1207989 wd:P2048 ?num }"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P131 wd:Q38 ; wdt:P2044 ?num . FILTER (?num > 0) } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q937 wdt:P184 ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner wdt:P127 dbr:Donald_Trump . }"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX wb: <http://www.wikidata.org/> SELECT DISTINCT ?uri WHERE { ?uri wb:P26 wb:Q37079 }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?population WHERE { wd:Q5401 wdt:P1082 ?population }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?Author WHERE { ?book wdt:P31 wd:Q726382. ?book wdt:P50 ?author. } SERVICE wikibase:label { }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?date WHERE { wd:Q11806 wdt:P569 ?date . }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?value WHERE { wd:Q458 wdt:P1082 ?value }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q148 wdt:P38 ?uri }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/> SELECT ?x WHERE { wd:Q692 wdt:P570 ?x } LIMIT 1"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a http://www.wikidata.org/entity/Q41291 ; http://www.wikidata.org/entity/P448 http://www.wikidata.org/entity/Q177477 . }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX wikibase: <http://wikiba.se/ontology#> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?island WHERE { ?island wdt:P31 wd:Q23442. ?island wdt:P17 wd:Q17. }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "SELECT (COUNT(DISTINCT ?company) AS ?c) WHERE { ?company a <http://www.wikidata.org/entity/Q4830453> . ?company <http://www.wikidata.org/entity/P452> ?industry . FILTER (REGEX(?industry, \"advertising\", \"i\")) }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?university WHERE { SERVICE wikibase:serviceLink { bd:serviceParam wikibase:queryEngine \"Jena\". } wdt:P27 wd:Q567 wdt:P69 ?university. }"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 <http://www.wikidata.org/entity/Q15416> ; wdt:P161 <http://www.wikidata.org/entity/Q485310> . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX wikidata: <http://www.wikidata.org/entity/> PREFIX dbpedia: <http://dbpedia.org/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { SERVICE dbpedia { ?film dbo:starring dbpedia:Tom_Cruise . } ?film wikidata:P161 wikidata:Q37079 . FILTER (isLiteral(?film) && datatype(?film) = wikidata:Q11424) }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?country WHERE { wd:Q513 wdt:P131 ?location . ?location wdt:P17 ?country . FILTER (wdt:P31 ?country) . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?place WHERE { wd:Q9696 wdt:P20 ?place . }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { wd:Q125006 wdt:P177 ?uri }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a <http://www.wikidata.org/entity/Q10843402> ; <http://www.wikidata.org/entity/P19> <http://www.wikidata.org/entity/Q649> . }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type wd:Q11424 ; wd:P161 wd:Q103894 ; wd:P577 ?date . } ORDER BY DESC(?date) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "SELECT DISTINCT ?mountain ?elevation WHERE { ?mountain a <http://www.wikidata.org/entity/Q8502> . ?mountain <http://www.wikidata.org/entity/P2044> ?elevation . } ORDER BY DESC(?elevation)"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "SELECT ?pop WHERE { ?s ?p ?pop ?s wdt:P31 wd:Q85. ?p wdt:P1082. }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri ?label WHERE { ?uri a wd:Q5. ?uri wdt:P19 wd:Q160544. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?child) AS ?c) WHERE { wikidata:Q34969 wdt:P40 ?child }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?ele WHERE { wd:Q58226 wdt:P2044 ?ele } LIMIT 1"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { wd:Q5806 wdt:P17 ?uri . }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?height WHERE { wd:Q76717 wdt:P2048 ?height }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type wd:Q1445650 }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX p: <http://www.wikidata.org/prop/direct/> PREFIX ps: <http://www.wikidata.org/prop/statement/> SELECT ?genre WHERE { wd:Q189080 p:P136 ?genre . }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "SELECT ?place WHERE { wd:Q40912 wdt:P19 ?place }"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://www.wikidata.org/entity/Q515> ; <http://www.wikidata.org/entity/P1082> ?pop . } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q15416 ; wdt:P170 ?creator. ?creator wdt:P50 wd:Q8704. }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q1445650. ?uri wdt:P17 wd:Q34. }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "SELECT DISTINCT ?ni WHERE { <http://www.wikidata.org/entity/Q312> <http://www.wikidata.org/entity/P2295> ?ni }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wds: <http://www.wikidata.org/prop/> SELECT DISTINCT ?uri WHERE { wd:Q91 wds:P20 ?uri }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?country . ?country wdt:P36 ?uri }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q6386177 wdt:P17 ?uri }"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?num WHERE { wd:Q41421 wdt:P2048 ?num. FILTER((isLiteral(?num)) && (datatype(?num) = wd:QuantityValue)) }"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/entity/P57> <http://www.wikidata.org/entity/Q43203> . ?uri <http://www.wikidata.org/entity/P161> <http://www.wikidata.org/entity/Q43203> . MINUS { ?uri <http://www.wikidata.org/entity/P57> ?o . FILTER(?o != <http://www.wikidata.org/entity/Q43203>) } MINUS { ?uri <http://www.wikidata.org/entity/P161> ?o . FILTER(?o != <http://www.wikidata.org/entity/Q43203>) } }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q861690. }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?population WHERE { wd:Q796 wd:P1082 ?population . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q1445650 }"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?party WHERE { ?party a wd:Q7278; wd:P17 wd:Q41; wd:P1142 wd:Q3781399. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?date WHERE { ?actor wdt:P161 wd:Q162371 . ?actor wdt:P569 ?date . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q3235867 wdt:P50 ?person. ?person wdt:P135 ?uri. }"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { ?uri wdt:P31 wdt:Q5. ?uri wdt:P19 ?place. ?place wdt:P17 wdt:Q183. FILTER (lang(?uri) = 'en'). }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?architect WHERE { wd:Q125006 wdt:P84 ?architect . }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q23572 wdt:P86 ?uri }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type wd:Q11424 ; wd:P57 wd:Q56094 . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/>"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?album WHERE { ?album wdt:P31 wd:Q482994. ?album wdt:P175 wd:Q15862. ?album wdt:P577 ?release_date. FILTER (!bound(?release_date) || ?release_date < wd:Q123456) } ORDER BY ?release_date LIMIT 1 OFFSET 0"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?currency WHERE { wd:Q213 wdt:P31 ?country. wd:Q213 wdt:P18 ?language. ?country wdt:P38 ?currency. OPTIONAL { ?language wdt:P407 ?languageCode } }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P19 wd:Q1741; wdt:P20 wd:Q64. }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri a ?class ; ?class rdfs:subClassOf* <http://www.wikidata.org/entity/Q12280> ; <http://www.wikidata.org/entity/P177> <http://www.wikidata.org/entity/Q1471> . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "?uri wdt:P106 wdt:P106 . ?x wdt:P50 ?uri . ?x wdt:P31 wdt:Q571 ."
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P170 wd:Q25014. ?uri wdt:P31 wd:Q15416. }"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?writer WHERE { ?writer wdt:P166 wd:Q37922 . FILTER (isLiteral(?writer) = \"false\") }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q596 wdt:P61 ?uri }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "SELECT ?uri WHERE { ?uri wdt:P106 wd:Q806349. ?uri wdt:P1303 wd:Q8338. }"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "prefix wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri a wikidata:Q3665646 ; wikidata:P2048 ?n FILTER ( ?n > 2.0 ) }"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q11424; wdt:P161 wd:Q40523; wdt:P161 wd:Q48410 }"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q1020 wdt:P36 ?uri }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q937857. ?uri wdt:P19 wd:Q233. }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?city WHERE { wd:Q1009 wdt:P36 ?city. SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a wikidata:Q9143 . ?uri rdfs:label ?label . }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wikidata:P31 wikidata:Q11631. FILTER ( EXISTS { ?uri wikidata:P27 wikidata:Q159 } ) UNION FILTER ( EXISTS { ?uri wikidata:P27 wikidata:Q15180 } ) }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?creator WHERE { wd:Q5930 wdt:P170 ?creator SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?population WHERE { wd:Q1489 wdt:P1082 ?population . }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { wd:Q2695156 wdt:P170 ?uri }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { SERVICE wikibase:attribution { } wd:Q408 wdt:P36 ?capital . ?capital wdt:P1082 ?num . }"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "SELECT ?tarea WHERE { wd:Q1198 wdt:P2046 ?tarea . }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "SELECT ?number WHERE { wd:Q37156 wdt:P1128 ?number . }"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?n WHERE { wd:Q104123 wdt:P2769 ?n }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?s WHERE { ?s ?p <http://www.wikidata.org/entity/Q219512>. ?s wdt:P31 ?type. FILTER( ?p = wdt:P161 || ?type = wdt:P31/wdt:P279/wdt:P576 ). }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q11424. <!-- Type constraint: ?uri is a Film --> ?uri wdt:P17 wd:Q35. <!-- Country constraint: ?uri has country Denmark --> FILTER (?uri = wd:Q11424) <!-- Ensure ?uri is a Film --> SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } <!-- Optional label service --> }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "SELECT ?uri WHERE { ?subject wdt:P17 ?uri BIND (wd:Q5451 AS ?subject) }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q6256; wdt:P2046 ?n. } ORDER BY DESC(?n) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?Almamater WHERE { wd:Q567 wdt:P69 ?Almamater }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX wikidata: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wikidata:Q111135 wikidata:P170 ?uri }"
    }
]