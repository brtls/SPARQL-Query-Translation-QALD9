[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?o1 WHERE { res:Penguin_Books dbo:founder ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Allen_Lane"
        ]
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }",
        "answers": [
            "http://dbpedia.org/resource/2001:_A_Space_Odyssey_(film)",
            "http://dbpedia.org/resource/A_Clockwork_Orange_(film)",
            "http://dbpedia.org/resource/Barry_Lyndon",
            "http://dbpedia.org/resource/Day_of_the_Fight",
            "http://dbpedia.org/resource/Dr._Strangelove",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Fear_and_Desire",
            "http://dbpedia.org/resource/Flying_Padre",
            "http://dbpedia.org/resource/Full_Metal_Jacket",
            "http://dbpedia.org/resource/Killer's_Kiss",
            "http://dbpedia.org/resource/Lolita_(1962_film)",
            "http://dbpedia.org/resource/Paths_of_Glory",
            "http://dbpedia.org/resource/Spartacus_(film)",
            "http://dbpedia.org/resource/The_Killing_(film)__The_Killing__1",
            "http://dbpedia.org/resource/The_Seafarers__The_Seafarers__1",
            "http://dbpedia.org/resource/The_Shining_(film)"
        ]
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy res:Elton_John . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Skype dbo:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Skype_Technologies"
        ]
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:league res:Bundesliga . ?uri rdf:type dbo:SoccerClub . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT DISTINCT ?uri WHERE { ?movie rdf:type dbo:Film ; dbo:director res:William_Shatner ; dbo:starring ?uri . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbo:deathDate ?date }",
        "answers": [
            "1986-02-28"
        ]
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Elizabeth_Taylor . ?uri dbo:starring res:Richard_Burton . }",
        "answers": [
            "http://dbpedia.org/resource/Boom!_(film)",
            "http://dbpedia.org/resource/Divorce_His,_Divorce_Hers",
            "http://dbpedia.org/resource/Doctor_Faustus_(1967_film)",
            "http://dbpedia.org/resource/Hammersmith_Is_Out",
            "http://dbpedia.org/resource/The_Comedians_(1967_film)",
            "http://dbpedia.org/resource/The_Sandpiper",
            "http://dbpedia.org/resource/The_Taming_of_the_Shrew_(1967_film)",
            "http://dbpedia.org/resource/The_V.I.P.s_(film)",
            "http://dbpedia.org/resource/Under_Milk_Wood_(1972_film)",
            "http://dbpedia.org/resource/Who's_Afraid_of_Virginia_Woolf%3F_(film)"
        ]
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Minecraft dbo:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Mojang_Studios"
        ]
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?budget WHERE { res:The_Lego_Movie dbo:budget ?budget . }",
        "answers": [
            "60.0"
        ]
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?label WHERE { wd:Q59150527 wdt:P527 ?uri . ?uri wdt:P577 ?date . ?uri wdt:P264 ?label . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?runtime WHERE { res:Toy_Story dbo:runtime ?runtime . }",
        "answers": [
            "4860"
        ]
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet . } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Julia_Roberts . ?uri dbo:director res:Garry_Marshall . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?year WHERE { res:Rachel_Stevens dbo:birthYear ?year . }",
        "answers": [
            "1978"
        ]
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbo:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Execution_by_hanging"
        ]
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num . } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:locatedInArea res:Italy ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Mont_Blanc"
        ]
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> dbo:doctoralAdvisor ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Alfred_Kleiner"
        ]
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT DISTINCT ?uri WHERE { ?uri dbo:owner res:Donald_Trump . ?uri rdf:type dbo:Company . MINUS { ?uri dbo:dissolutionDate ?closed } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?o1 WHERE { res:Tom_Cruise dbo:spouse ?o1 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Interpretation_of_Dreams dbo:author ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Sigmund_Freud"
        ]
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:John_Adams dbo:birthDate ?val . }",
        "answers": [
            "1735-10-30"
        ]
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?populationTotal WHERE { res:European_Union dbo:populationTotal ?populationTotal . }",
        "answers": [
            "446828803"
        ]
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?currency WHERE { res:China dbo:currency ?currency . }",
        "answers": [
            "http://dbpedia.org/resource/Renminbi"
        ]
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:William_Shakespeare dbo:deathDate ?uri . }",
        "answers": [
            "1616-04-23"
        ]
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Rocket . ?uri dbo:launchSite res:Baikonur_Cosmodrome . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Island ; dbo:country res:Japan . } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Blizzard_Entertainment"
        ]
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Advertising . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Angela_Merkel dbo:almaMater ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow . ?uri dbo:starring res:Neil_Patrick_Harris . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Tom_Cruise. }",
        "answers": [
            "http://dbpedia.org/resource/A_Few_Good_Men",
            "http://dbpedia.org/resource/All_the_Right_Moves_(film)",
            "http://dbpedia.org/resource/American_Made_(film)",
            "http://dbpedia.org/resource/Born_on_the_Fourth_of_July_(film)",
            "http://dbpedia.org/resource/Cocktail_(1988_film)",
            "http://dbpedia.org/resource/Collateral_(film)",
            "http://dbpedia.org/resource/Days_of_Thunder",
            "http://dbpedia.org/resource/Edge_of_Tomorrow",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Far_and_Away__Far_and_Away__1",
            "http://dbpedia.org/resource/Interview_with_the_Vampire_(film)",
            "http://dbpedia.org/resource/Jack_Reacher_(film)",
            "http://dbpedia.org/resource/Jack_Reacher:_Never_Go_Back",
            "http://dbpedia.org/resource/Jerry_Maguire__Jerry_Maguire__1",
            "http://dbpedia.org/resource/Knight_and_Day__Knight_and_Day__1",
            "http://dbpedia.org/resource/Legend_(1985_film)",
            "http://dbpedia.org/resource/Lions_for_Lambs",
            "http://dbpedia.org/resource/Losin'_It",
            "http://dbpedia.org/resource/Magnolia_(film)__Magnolia__1",
            "http://dbpedia.org/resource/Minority_Report_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_One",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_Two",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Fallout",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Ghost_Protocol",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Rogue_Nation",
            "http://dbpedia.org/resource/Mission:_Impossible_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_2",
            "http://dbpedia.org/resource/Mission:_Impossible_III",
            "http://dbpedia.org/resource/Oblivion_(2013_film)",
            "http://dbpedia.org/resource/Rain_Man",
            "http://dbpedia.org/resource/Risky_Business",
            "http://dbpedia.org/resource/Rock_of_Ages_(2012_film)",
            "http://dbpedia.org/resource/Taps_(film)",
            "http://dbpedia.org/resource/The_Color_of_Money",
            "http://dbpedia.org/resource/The_Firm_(1993_film)",
            "http://dbpedia.org/resource/The_Last_Samurai",
            "http://dbpedia.org/resource/The_Mummy_(2017_film)",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/Top_Gun:_Maverick",
            "http://dbpedia.org/resource/Top_Gun",
            "http://dbpedia.org/resource/Valkyrie_(film)",
            "http://dbpedia.org/resource/Vanilla_Sky",
            "http://dbpedia.org/resource/War_of_the_Worlds_(2005_film)"
        ]
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/China",
            "http://dbpedia.org/resource/Nepal",
            "http://dbpedia.org/resource/Province_No._1",
            "http://dbpedia.org/resource/Solukhumbu_District",
            "http://dbpedia.org/resource/Tibet_Autonomous_Region",
            "http://dbpedia.org/resource/Tingri_County",
            "http://dbpedia.org/resource/Xigaz\u00ea"
        ]
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Dallas"
        ]
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/East_River"
        ]
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Swimmer ; dbo:birthPlace res:Moscow . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?s1 WHERE { ?s1 dbo:starring res:Alec_Guinness . ?s1 dbo:releaseDate ?o1 . } ORDER BY DESC(?o1) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Edwin_(film)"
        ]
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT ?res WHERE { ?res rdf:type dbo:Mountain . ?res dbo:elevation ?elevation . ?res dbo:locationCountry res:Earth . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Cairo dbo:populationTotal ?val . }",
        "answers": [
            "10100166"
        ]
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:birthPlace res:Heraklion . }",
        "answers": [
            "http://dbpedia.org/resource/Anastasios_Triantafyllou_(footballer)",
            "http://dbpedia.org/resource/Anastasios_Triantafyllou",
            "http://dbpedia.org/resource/Andreas_Bouchalakis",
            "http://dbpedia.org/resource/Andreas_Musalus",
            "http://dbpedia.org/resource/Antonis_Alexakis",
            "http://dbpedia.org/resource/Antonis_Bourselis",
            "http://dbpedia.org/resource/Archbishop_Makarios_of_Australia",
            "http://dbpedia.org/resource/Beata_Kitsikis",
            "http://dbpedia.org/resource/Charalampos_Charalampakis",
            "http://dbpedia.org/resource/Charalampos_Damianakis",
            "http://dbpedia.org/resource/Christoforos_Liontakis",
            "http://dbpedia.org/resource/Christoforos_Papakaliatis",
            "http://dbpedia.org/resource/Christos_Belevonis",
            "http://dbpedia.org/resource/Christos_Kozyrakis",
            "http://dbpedia.org/resource/Christos_Saloustros",
            "http://dbpedia.org/resource/Chrysovalantis_Kozoronis",
            "http://dbpedia.org/resource/Cyril_Lucaris",
            "http://dbpedia.org/resource/Dimitrios_Kiliaras",
            "http://dbpedia.org/resource/Dimitrios_Papadopoulos_(footballer,_born_1950)__Dimitrios_Papadopoulos__1",
            "http://dbpedia.org/resource/Dimitrios_Raptakis",
            "http://dbpedia.org/resource/Edison_Kola",
            "http://dbpedia.org/resource/Eleftherios_Goulielmakis",
            "http://dbpedia.org/resource/Emmanuel_Skordilis",
            "http://dbpedia.org/resource/Fotis_Kafatos",
            "http://dbpedia.org/resource/Franghias_Kavertzas",
            "http://dbpedia.org/resource/Georges_Panayotis",
            "http://dbpedia.org/resource/Georgios_Kalaitzakis",
            "http://dbpedia.org/resource/Georgios_Kastrofylakas",
            "http://dbpedia.org/resource/Georgios_Klontzas",
            "http://dbpedia.org/resource/Georgios_Kortezas",
            "http://dbpedia.org/resource/Georgios_Manousakis",
            "http://dbpedia.org/resource/Georgios_Samaras",
            "http://dbpedia.org/resource/Georgios_Sarris",
            "http://dbpedia.org/resource/Georgios_Sournakis",
            "http://dbpedia.org/resource/Georgios_Vlastos",
            "http://dbpedia.org/resource/Gianna_Angelopoulos-Daskalaki",
            "http://dbpedia.org/resource/Giannis_Boutsakis",
            "http://dbpedia.org/resource/Giannis_Dermitzakis",
            "http://dbpedia.org/resource/Giannis_Domatas",
            "http://dbpedia.org/resource/Giannis_Iatroudis",
            "http://dbpedia.org/resource/Giannis_Koutantos",
            "http://dbpedia.org/resource/Giannis_Vardinogiannis",
            "http://dbpedia.org/resource/Giorgos_Giakoumakis__Giorgos_Giakoumakis__1",
            "http://dbpedia.org/resource/Giorgos_Grammatikakis",
            "http://dbpedia.org/resource/Giorgos_Petrakis",
            "http://dbpedia.org/resource/Ieremias_Palladas",
            "http://dbpedia.org/resource/Ilias_Koutsoupias",
            "http://dbpedia.org/resource/Ioannis_Apakas",
            "http://dbpedia.org/resource/Ioannis_Ikonomou",
            "http://dbpedia.org/resource/Ioannis_Pagomenos",
            "http://dbpedia.org/resource/Iosif_Daskalakis",
            "http://dbpedia.org/resource/Irini_Vasiliou",
            "http://dbpedia.org/resource/Joseph_Sifakis",
            "http://dbpedia.org/resource/Konstantinos_Gouvis",
            "http://dbpedia.org/resource/Konstantinos_Provydakis",
            "http://dbpedia.org/resource/Konstanty_Korniakt",
            "http://dbpedia.org/resource/Kostas_Chaniotakis",
            "http://dbpedia.org/resource/Lampros_Kefaloukos",
            "http://dbpedia.org/resource/Lefteris_Gialousis",
            "http://dbpedia.org/resource/Lena_Platonos",
            "http://dbpedia.org/resource/Leonidas_Kyrkos",
            "http://dbpedia.org/resource/Lili_Zografou",
            "http://dbpedia.org/resource/Manolis_Bolakis",
            "http://dbpedia.org/resource/Manolis_Hatzidakis",
            "http://dbpedia.org/resource/Manolis_Moniakis",
            "http://dbpedia.org/resource/Manolis_Papamattheakis",
            "http://dbpedia.org/resource/Manolis_Patemtzis",
            "http://dbpedia.org/resource/Manolis_Roubakis",
            "http://dbpedia.org/resource/Manolis_Roussakis",
            "http://dbpedia.org/resource/Manolis_Rovithis",
            "http://dbpedia.org/resource/Manolis_Saliakas",
            "http://dbpedia.org/resource/Manolis_Stefanoudakis",
            "http://dbpedia.org/resource/Manuel_Fokas",
            "http://dbpedia.org/resource/Markos_Bathas",
            "http://dbpedia.org/resource/Meletius_I_Pegas",
            "http://dbpedia.org/resource/Michael_Fokas",
            "http://dbpedia.org/resource/Michael_Katehakis",
            "http://dbpedia.org/resource/Michail_Fragoulakis",
            "http://dbpedia.org/resource/Michalis_Sifakis",
            "http://dbpedia.org/resource/Michalis_Tzirakis",
            "http://dbpedia.org/resource/Minas_Chalkiadakis",
            "http://dbpedia.org/resource/Minas_Pitsos",
            "http://dbpedia.org/resource/Myron_Michailidis",
            "http://dbpedia.org/resource/Nadia_Valavani",
            "http://dbpedia.org/resource/Nektarios_Azizi",
            "http://dbpedia.org/resource/Nektarios_Tavernarakis",
            "http://dbpedia.org/resource/Nicholas_Kalliakis",
            "http://dbpedia.org/resource/Nikolaos_Gripiotis",
            "http://dbpedia.org/resource/Nikolaos_Ritzos",
            "http://dbpedia.org/resource/Nikonas_Spiliotakis",
            "http://dbpedia.org/resource/Nikos_Androulakis",
            "http://dbpedia.org/resource/Nikos_Karelis",
            "http://dbpedia.org/resource/Nikos_Kazantzakis",
            "http://dbpedia.org/resource/Nikos_Kousidis",
            "http://dbpedia.org/resource/Nikos_Machlas",
            "http://dbpedia.org/resource/Nikos_Marinakis",
            "http://dbpedia.org/resource/Nikos_Psimopoulos",
            "http://dbpedia.org/resource/Nikos_Vrettos",
            "http://dbpedia.org/resource/Ntinos_Konstantakis",
            "http://dbpedia.org/resource/Odysseas_Elytis",
            "http://dbpedia.org/resource/Oresti_Kacurri",
            "http://dbpedia.org/resource/Panagiotis_Kalaitzakis",
            "http://dbpedia.org/resource/Panagiotis_Petras",
            "http://dbpedia.org/resource/Petros_Giakoumakis",
            "http://dbpedia.org/resource/Petros_Lambardos",
            "http://dbpedia.org/resource/Petros_Marinakis",
            "http://dbpedia.org/resource/\u015eadi_\u00c7al\u0131k",
            "http://dbpedia.org/resource/Sapfo_Notara",
            "http://dbpedia.org/resource/Spyros_Danellis",
            "http://dbpedia.org/resource/Stavros_Arnaoutakis",
            "http://dbpedia.org/resource/Stavros_Labrakis",
            "http://dbpedia.org/resource/Theocharis_Silvestros",
            "http://dbpedia.org/resource/Theophanes_the_Cretan",
            "http://dbpedia.org/resource/Thomas_Bathas",
            "http://dbpedia.org/resource/Vangelis_Nikokyrakis",
            "http://dbpedia.org/resource/Vasilios_Babis",
            "http://dbpedia.org/resource/Vasilios_Vogiatzis",
            "http://dbpedia.org/resource/Victor_(iconographer)",
            "http://dbpedia.org/resource/Zacharias_Kavousakis"
        ]
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?child) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?child . }",
        "answers": [
            "3"
        ]
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?elevation WHERE { res:D\\u00fcsseldorf_Airport dbo:elevation ?elevation . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { res:Mecca dbo:country ?country . }",
        "answers": [
            "http://dbpedia.org/resource/Saudi_Arabia"
        ]
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Claudia_Schiffer dbo:height ?val . }",
        "answers": [
            "1.8"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri rdf:type dbo:Holiday . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?genre WHERE { <http://dbpedia.org/resource/Lou_Reed> dbo:genre ?genre . }",
        "answers": [
            "http://dbpedia.org/resource/Art_rock",
            "http://dbpedia.org/resource/Experimental_music",
            "http://dbpedia.org/resource/Glam_rock",
            "http://dbpedia.org/resource/Noise_rock",
            "http://dbpedia.org/resource/Proto-punk",
            "http://dbpedia.org/resource/Rock_music"
        ]
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q40912 wdt:P19 ?uri }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:country res:Sweden . ?uri rdf:type dbo:Holiday . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Apple_Inc. dbo:netIncome ?uri . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Washington,_D.C."
        ]
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?country . ?country dbo:capital ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/New_Delhi"
        ]
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?country . }",
        "answers": [
            "http://dbpedia.org/resource/Canada"
        ]
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Michael_Jordan dbo:height ?height . }",
        "answers": [
            "1.9812"
        ]
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Clint_Eastwood ; dbo:starring res:Clint_Eastwood . }",
        "answers": [
            "http://dbpedia.org/resource/A_Perfect_World",
            "http://dbpedia.org/resource/Absolute_Power_(film)",
            "http://dbpedia.org/resource/Blood_Work_(film)",
            "http://dbpedia.org/resource/Cry_Macho_(film)",
            "http://dbpedia.org/resource/Dirty_Harry_(film_series)",
            "http://dbpedia.org/resource/Firefox_(film)",
            "http://dbpedia.org/resource/Gran_Torino",
            "http://dbpedia.org/resource/Heartbreak_Ridge",
            "http://dbpedia.org/resource/High_Plains_Drifter",
            "http://dbpedia.org/resource/Honkytonk_Man",
            "http://dbpedia.org/resource/Million_Dollar_Baby__Million_Dollar_Baby__1",
            "http://dbpedia.org/resource/Pale_Rider",
            "http://dbpedia.org/resource/Play_Misty_for_Me",
            "http://dbpedia.org/resource/Space_Cowboys",
            "http://dbpedia.org/resource/Sudden_Impact",
            "http://dbpedia.org/resource/The_Bridges_of_Madison_County_(film)",
            "http://dbpedia.org/resource/The_Eiger_Sanction_(film)",
            "http://dbpedia.org/resource/The_Mule_(2018_film)",
            "http://dbpedia.org/resource/The_Outlaw_Josey_Wales__The_Outlaw_Josey_Wales__1",
            "http://dbpedia.org/resource/The_Rookie_(1990_film)",
            "http://dbpedia.org/resource/True_Crime_(1999_film)",
            "http://dbpedia.org/resource/Unforgiven",
            "http://dbpedia.org/resource/White_Hunter_Black_Heart"
        ]
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:West_African_CFA_franc . }",
        "answers": [
            "http://dbpedia.org/resource/Benin",
            "http://dbpedia.org/resource/Burkina_Faso",
            "http://dbpedia.org/resource/Colonial_Mauritania",
            "http://dbpedia.org/resource/Colony_of_Niger",
            "http://dbpedia.org/resource/Economic_Community_of_West_African_States",
            "http://dbpedia.org/resource/French_Dahomey",
            "http://dbpedia.org/resource/French_Togoland",
            "http://dbpedia.org/resource/Guinea-Bissau",
            "http://dbpedia.org/resource/History_of_Togo",
            "http://dbpedia.org/resource/Ivory_Coast",
            "http://dbpedia.org/resource/Mali",
            "http://dbpedia.org/resource/Niger",
            "http://dbpedia.org/resource/People's_Republic_of_Benin",
            "http://dbpedia.org/resource/Republic_of_Dahomey",
            "http://dbpedia.org/resource/Republic_of_Upper_Volta",
            "http://dbpedia.org/resource/Senegal",
            "http://dbpedia.org/resource/Senegambia_Confederation",
            "http://dbpedia.org/resource/Togo"
        ]
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Iraq dbo:populationTotal ?val . }",
        "answers": [
            "40462701"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q1445650 . ?uri wdt:P31 ?type . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:PoliticalParty ; dbo:country res:Greece ; dbo:ideology res:Pro-Europeanism . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?date WHERE { res:Charmed dbo:starring ?actor . ?actor dbo:birthDate ?date . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?painter . ?painter dbo:movement ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Cubism",
            "http://dbpedia.org/resource/Surrealism"
        ]
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Actor . { ?uri dbo:birthPlace res:Germany . } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country res:Germany . } }",
        "answers": [
            "http://dbpedia.org/resource/Brigitte_Mira",
            "http://dbpedia.org/resource/David_Epley_(entertainer)",
            "http://dbpedia.org/resource/Friederike_Caroline_Neuber",
            "http://dbpedia.org/resource/Gordon_Hopkirk",
            "http://dbpedia.org/resource/Shimon_Schwarzschild",
            "http://dbpedia.org/resource/Walter_Bluhm",
            "http://dbpedia.org/resource/Walther_S\u00fcssenguth"
        ]
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/John_Augustus_Roebling"
        ]
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Ramin_Djawadi"
        ]
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Film ; dbo:director res:Francis_Ford_Coppola . }",
        "answers": [
            "http://dbpedia.org/resource/Apocalypse_Now_Redux",
            "http://dbpedia.org/resource/Battle_Beyond_the_Sun",
            "http://dbpedia.org/resource/Bram_Stoker's_Dracula_(1992_film)",
            "http://dbpedia.org/resource/Captain_EO",
            "http://dbpedia.org/resource/Dementia_13",
            "http://dbpedia.org/resource/Distant_Vision",
            "http://dbpedia.org/resource/Finian's_Rainbow_(1968_film)",
            "http://dbpedia.org/resource/Gardens_of_Stone",
            "http://dbpedia.org/resource/Jack_(1996_film)",
            "http://dbpedia.org/resource/Megalopolis_(film)",
            "http://dbpedia.org/resource/New_York_Stories",
            "http://dbpedia.org/resource/One_from_the_Heart",
            "http://dbpedia.org/resource/Peggy_Sue_Got_Married",
            "http://dbpedia.org/resource/Rumble_Fish",
            "http://dbpedia.org/resource/Supernova_(2000_film)",
            "http://dbpedia.org/resource/Tetro",
            "http://dbpedia.org/resource/The_Bellboy_and_the_Playgirls",
            "http://dbpedia.org/resource/The_Conversation",
            "http://dbpedia.org/resource/The_Cotton_Club_(film)",
            "http://dbpedia.org/resource/The_Godfather_(film_series)",
            "http://dbpedia.org/resource/The_Godfather_Part_II",
            "http://dbpedia.org/resource/The_Godfather_Part_III",
            "http://dbpedia.org/resource/The_Godfather_Saga__The_Godfather_Trilogy:_1901\u20131980__1",
            "http://dbpedia.org/resource/The_Godfather",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/The_Rain_People",
            "http://dbpedia.org/resource/The_Rainmaker_(1997_film)",
            "http://dbpedia.org/resource/The_Terror_(1963_film)",
            "http://dbpedia.org/resource/Tonight_for_Sure",
            "http://dbpedia.org/resource/Tucker:_The_Man_and_His_Dream",
            "http://dbpedia.org/resource/Twixt_(film)",
            "http://dbpedia.org/resource/You're_a_Big_Boy_Now",
            "http://dbpedia.org/resource/Youth_Without_Youth_(film)"
        ]
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?name WHERE { res:Adele dbo:birthName ?name. }",
        "answers": [
            "Adele Laurie Blue Adkins"
        ]
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:album ?album . ?uri dbo:artist res:Queen_(band) . ?uri dbo:releaseDate ?date } ORDER BY ?date LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> dbo:currency ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Czech_koruna"
        ]
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:birthPlace res:Vienna . ?uri dbo:deathPlace res:Berlin . }",
        "answers": [
            "http://dbpedia.org/resource/Adolf_Klein",
            "http://dbpedia.org/resource/Eduard_von_Winterstein",
            "http://dbpedia.org/resource/Eleonore_de_Ahna",
            "http://dbpedia.org/resource/Emil_Justitz",
            "http://dbpedia.org/resource/Erik_Jan_Hanussen",
            "http://dbpedia.org/resource/Eva_Schmidt-Kolmer",
            "http://dbpedia.org/resource/Gerda_Laski",
            "http://dbpedia.org/resource/Guido_von_List",
            "http://dbpedia.org/resource/Hans_Fidesser",
            "http://dbpedia.org/resource/Heinrich_Belohlavek",
            "http://dbpedia.org/resource/Hugo_Flink",
            "http://dbpedia.org/resource/Josephine_Pagay",
            "http://dbpedia.org/resource/Karl_Etlinger",
            "http://dbpedia.org/resource/Karl_Hellmer",
            "http://dbpedia.org/resource/La_Jana_(actress)",
            "http://dbpedia.org/resource/Luise_Begas-Parmentier",
            "http://dbpedia.org/resource/Mathilde_Danegger",
            "http://dbpedia.org/resource/Michael_von_Newlinsky",
            "http://dbpedia.org/resource/Richard_Thurnwald",
            "http://dbpedia.org/resource/Robert_Bodanzky",
            "http://dbpedia.org/resource/Steffie_Spira",
            "http://dbpedia.org/resource/Therese_Gr\u00fcnbaum",
            "http://dbpedia.org/resource/Tom_Seidmann-Freud"
        ]
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:crosses res:Seine . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Musician . ?x dbo:author ?uri ; dbo:book ?y . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow . ?uri dbo:creator res:John_Cleese . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q36180 . ?uri wdt:P166 wd:Q37922 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ceres_(dwarf_planet) dbo:discoverer ?uri . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer . ?uri dbo:height ?height . FILTER(?height > 200) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Julia_Roberts . ?uri dbo:starring res:Richard_Gere . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q16> <http://www.wikidata.org/prop/direct/P36> ?o1 . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:SoccerPlayer . ?uri dbo:birthPlace res:Malta . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cameroon dbo:capital ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Yaound\u00e9"
        ]
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub rdf:type dbo:ProgrammingLanguage . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q11631> . { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q15180> } UNION { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q159> } }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Seth_MacFarlane"
        ]
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1489 wdt:P1082 ?uri . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Bill_Finger",
            "http://dbpedia.org/resource/Bob_Kane"
        ]
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema SELECT DISTINCT ?number WHERE { res:Australia dbo:capital ?capital . ?capital dbo:populationTotal ?number . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:North_Rhine-Westphalia dbo:areaTotal ?val . }",
        "answers": [
            "34084130000"
        ]
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?employees WHERE { res:IBM dbo:numberOfEmployees ?employees . }",
        "answers": [
            "282100"
        ]
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?value WHERE { res:Pulp_Fiction dbo:budget ?value . }",
        "answers": [
            "8.0"
        ]
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Jesse_Eisenberg . }",
        "answers": [
            "http://dbpedia.org/resource/Addicted_to_Fame",
            "http://dbpedia.org/resource/Adventureland_(film)",
            "http://dbpedia.org/resource/American_Ultra",
            "http://dbpedia.org/resource/Batman_v_Superman:_Dawn_of_Justice",
            "http://dbpedia.org/resource/Caf\u00e9_Society_(2016_film)",
            "http://dbpedia.org/resource/Camp_Hell",
            "http://dbpedia.org/resource/Cursed_(2005_film)",
            "http://dbpedia.org/resource/Fleishman_Is_in_Trouble_(miniseries)",
            "http://dbpedia.org/resource/Free_Samples",
            "http://dbpedia.org/resource/Get_Real_(American_TV_series)",
            "http://dbpedia.org/resource/He's_Way_More_Famous_Than_You",
            "http://dbpedia.org/resource/Louder_Than_Bombs_(film)",
            "http://dbpedia.org/resource/Night_Moves_(2013_film)",
            "http://dbpedia.org/resource/Now_You_See_Me_(film_series)",
            "http://dbpedia.org/resource/Now_You_See_Me_(film)",
            "http://dbpedia.org/resource/Now_You_See_Me_2",
            "http://dbpedia.org/resource/One_Day_Like_Rain",
            "http://dbpedia.org/resource/Resistance_(2020_film)",
            "http://dbpedia.org/resource/Rio_(2011_film)",
            "http://dbpedia.org/resource/Rio_2",
            "http://dbpedia.org/resource/Roger_Dodger_(film)",
            "http://dbpedia.org/resource/Solitary_Man_(film)",
            "http://dbpedia.org/resource/The_Art_of_Self-Defense_(2019_film)",
            "http://dbpedia.org/resource/The_Double_(2013_film)__The_Double__1",
            "http://dbpedia.org/resource/The_Education_of_Charlie_Banks",
            "http://dbpedia.org/resource/The_End_of_the_Tour",
            "http://dbpedia.org/resource/The_Hummingbird_Project",
            "http://dbpedia.org/resource/The_Hunting_Party_(2007_film)",
            "http://dbpedia.org/resource/The_Living_Wake",
            "http://dbpedia.org/resource/The_Social_Network",
            "http://dbpedia.org/resource/The_Squid_and_the_Whale",
            "http://dbpedia.org/resource/To_Rome_with_Love_(film)",
            "http://dbpedia.org/resource/Vivarium_(film)",
            "http://dbpedia.org/resource/Why_Stop_Now_(film)",
            "http://dbpedia.org/resource/Wild_Indian",
            "http://dbpedia.org/resource/Zack_Snyder's_Justice_League",
            "http://dbpedia.org/resource/Zombieland:_Double_Tap",
            "http://dbpedia.org/resource/Zombieland"
        ]
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:country res:Denmark . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/India",
            "http://dbpedia.org/resource/Kashmir"
        ]
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:areaTotal ?area . } ORDER BY DESC(?area) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Ajan_Shir_Melli"
        ]
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?almaMater WHERE { res:Angela_Merkel dbo:almaMater ?almaMater . }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111135> <http://www.wikidata.org/prop/direct/P170> ?uri . }",
        "answers": [
            "No answer"
        ]
    }
]