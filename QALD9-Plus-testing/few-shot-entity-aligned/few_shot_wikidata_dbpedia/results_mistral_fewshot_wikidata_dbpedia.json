[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Allen_Lane"
        ]
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> }",
        "answers": [
            "http://dbpedia.org/resource/2001:_A_Space_Odyssey_(film)",
            "http://dbpedia.org/resource/A_Clockwork_Orange_(film)",
            "http://dbpedia.org/resource/Barry_Lyndon",
            "http://dbpedia.org/resource/Day_of_the_Fight",
            "http://dbpedia.org/resource/Dr._Strangelove",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Fear_and_Desire",
            "http://dbpedia.org/resource/Flying_Padre",
            "http://dbpedia.org/resource/Full_Metal_Jacket",
            "http://dbpedia.org/resource/Killer's_Kiss",
            "http://dbpedia.org/resource/Lolita_(1962_film)",
            "http://dbpedia.org/resource/Paths_of_Glory",
            "http://dbpedia.org/resource/Spartacus_(film)",
            "http://dbpedia.org/resource/The_Killing_(film)__The_Killing__1",
            "http://dbpedia.org/resource/The_Seafarers__The_Seafarers__1",
            "http://dbpedia.org/resource/The_Shining_(film)"
        ]
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Musical ; dbo:musicBy dbr:Elton_John . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Skype dbo:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Skype_Technologies"
        ]
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:SoccerClub ; dbo:league res:Bundesliga . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?actor WHERE { ?movie dbo:director res:William_Shatner ; dbo:starring ?actor . }",
        "answers": [
            "http://dbpedia.org/resource/DeForest_Kelley",
            "http://dbpedia.org/resource/George_Takei",
            "http://dbpedia.org/resource/James_Doohan",
            "http://dbpedia.org/resource/Leonard_Nimoy",
            "http://dbpedia.org/resource/Nichelle_Nichols",
            "http://dbpedia.org/resource/Walter_Koenig",
            "http://dbpedia.org/resource/William_Shatner"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri ?elevation WHERE { ?uri rdf:type dbo:Mountain ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dbo:starring res:Leonardo_DiCaprio . }",
        "answers": [
            "33"
        ]
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }",
        "answers": [
            "1986-02-28"
        ]
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }",
        "answers": [
            "http://dbpedia.org/resource/Boom!_(film)",
            "http://dbpedia.org/resource/Divorce_His,_Divorce_Hers",
            "http://dbpedia.org/resource/Doctor_Faustus_(1967_film)",
            "http://dbpedia.org/resource/Hammersmith_Is_Out",
            "http://dbpedia.org/resource/The_Comedians_(1967_film)",
            "http://dbpedia.org/resource/The_Sandpiper",
            "http://dbpedia.org/resource/The_Taming_of_the_Shrew_(1967_film)",
            "http://dbpedia.org/resource/The_V.I.P.s_(film)",
            "http://dbpedia.org/resource/Under_Milk_Wood_(1972_film)",
            "http://dbpedia.org/resource/Who's_Afraid_of_Virginia_Woolf%3F_(film)"
        ]
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Minecraft dbo:developer ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Mojang_Studios"
        ]
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val }",
        "answers": [
            "60.0"
        ]
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT DISTINCT ?label WHERE { ?album rdf:type dbo:Album . ?album dbo:artist res:Elvis_Presley . ?album dbo:recordLabel ?label . ?album dbo:releaseDate ?date . } ORDER BY ?date LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?val WHERE { res:Toy_Story dbo:runtime ?val . }",
        "answers": [
            "4860"
        ]
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet . }",
        "answers": [
            "http://dbpedia.org/resource/Abatte_Barihun",
            "http://dbpedia.org/resource/Alan_Silva",
            "http://dbpedia.org/resource/Artie_Fields",
            "http://dbpedia.org/resource/Charlie_Spivak",
            "http://dbpedia.org/resource/Danny_Davis_(country_musician)",
            "http://dbpedia.org/resource/Doc_Cheatham",
            "http://dbpedia.org/resource/Ernest_%22Doc%22_Paulin",
            "http://dbpedia.org/resource/Jack_Jackson_(radio_personality)",
            "http://dbpedia.org/resource/Jacobo_Rubalcaba",
            "http://dbpedia.org/resource/Jimmy_Dorsey",
            "http://dbpedia.org/resource/Kaj_Backlund",
            "http://dbpedia.org/resource/Lloyd_Hunter",
            "http://dbpedia.org/resource/Marlon_Jordan",
            "http://dbpedia.org/resource/Mick_Mulligan",
            "http://dbpedia.org/resource/Ollie_Mitchell",
            "http://dbpedia.org/resource/Ovie_Alston",
            "http://dbpedia.org/resource/Pacho_Galan",
            "http://dbpedia.org/resource/Red_Perkins",
            "http://dbpedia.org/resource/Richard_Maltby_Sr.",
            "http://dbpedia.org/resource/Steamboat_Willie_(musician)"
        ]
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?year WHERE { res:Rachel_Stevens dbo:birthYear ?year . }",
        "answers": [
            "1978"
        ]
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbo:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Execution_by_hanging"
        ]
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Yokohama_Marine_Tower dbo:height ?height . }",
        "answers": [
            "106.07"
        ]
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Alfred_Kleiner"
        ]
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbo:owner dbr:Donald_Trump ; rdf:type dbo:Company . MINUS { ?uri dbp:closed ?closed } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?spouse WHERE { res:Tom_Cruise dbo:spouse ?spouse . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Eurasia dbo:populationTotal ?val . }",
        "answers": [
            "5360351985"
        ]
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Interpretation_of_Dreams dbo:author ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Sigmund_Freud"
        ]
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:John_Adams dbo:birthDate ?val . }",
        "answers": [
            "1735-10-30"
        ]
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:European_Union dbo:populationTotal ?population . }",
        "answers": [
            "446828803"
        ]
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT ?o1 WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Renminbi"
        ]
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:William_Shakespeare dbo:deathDate ?uri . }",
        "answers": [
            "1616-04-23"
        ]
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:launchSite res:Baikonur_Cosmodrome . }",
        "answers": [
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_109",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_110",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_200",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_250",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_31",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_41",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_45",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_81",
            "http://dbpedia.org/resource/Baikonur_Cosmodrome_Site_90",
            "http://dbpedia.org/resource/Dnepr_(rocket)",
            "http://dbpedia.org/resource/Energia_(rocket)",
            "http://dbpedia.org/resource/Gagarin's_Start",
            "http://dbpedia.org/resource/Irtysh_(rocket)",
            "http://dbpedia.org/resource/Kosmos_3_(rocket)",
            "http://dbpedia.org/resource/Kosmos-1",
            "http://dbpedia.org/resource/Molniya_(rocket)",
            "http://dbpedia.org/resource/Molniya-M",
            "http://dbpedia.org/resource/N1_(rocket)",
            "http://dbpedia.org/resource/Polyot_(rocket)__Polyot_11A59__1",
            "http://dbpedia.org/resource/Proton_(rocket_family)",
            "http://dbpedia.org/resource/Proton-K",
            "http://dbpedia.org/resource/Proton-M",
            "http://dbpedia.org/resource/R-7A_Semyorka",
            "http://dbpedia.org/resource/Rokot",
            "http://dbpedia.org/resource/Soyuz_(rocket_family)",
            "http://dbpedia.org/resource/Soyuz_(rocket)",
            "http://dbpedia.org/resource/Soyuz-2",
            "http://dbpedia.org/resource/Soyuz-FG",
            "http://dbpedia.org/resource/Soyuz-L",
            "http://dbpedia.org/resource/Soyuz-U",
            "http://dbpedia.org/resource/Soyuz-U2",
            "http://dbpedia.org/resource/Soyuz/Vostok",
            "http://dbpedia.org/resource/Sputnik_(rocket)__Sputnik_727__1",
            "http://dbpedia.org/resource/Strela_(rocket)",
            "http://dbpedia.org/resource/Tsyklon-2",
            "http://dbpedia.org/resource/Tsyklon",
            "http://dbpedia.org/resource/Voskhod_(rocket)",
            "http://dbpedia.org/resource/Vostok_(rocket_family)",
            "http://dbpedia.org/resource/Vostok-2_(rocket)",
            "http://dbpedia.org/resource/Vostok-2M",
            "http://dbpedia.org/resource/Vostok-K",
            "http://dbpedia.org/resource/Vostok-L",
            "http://dbpedia.org/resource/Zenit_(rocket_family)",
            "http://dbpedia.org/resource/Zenit-2",
            "http://dbpedia.org/resource/Zenit-2M",
            "http://dbpedia.org/resource/Zenit-3F",
            "http://dbpedia.org/resource/Zenit-3SLB"
        ]
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Island ; dbp:country res:Japan . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\n<sparql> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri . } </sparql>",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Advertising . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Angela_Merkel dbo:almaMater ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbo:TelevisionShow . ?uri dbo:starring dbp:Neil_Patrick_Harris . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Tom_Cruise . }",
        "answers": [
            "http://dbpedia.org/resource/A_Few_Good_Men",
            "http://dbpedia.org/resource/All_the_Right_Moves_(film)",
            "http://dbpedia.org/resource/American_Made_(film)",
            "http://dbpedia.org/resource/Born_on_the_Fourth_of_July_(film)",
            "http://dbpedia.org/resource/Cocktail_(1988_film)",
            "http://dbpedia.org/resource/Collateral_(film)",
            "http://dbpedia.org/resource/Days_of_Thunder",
            "http://dbpedia.org/resource/Edge_of_Tomorrow",
            "http://dbpedia.org/resource/Eyes_Wide_Shut",
            "http://dbpedia.org/resource/Far_and_Away__Far_and_Away__1",
            "http://dbpedia.org/resource/Interview_with_the_Vampire_(film)",
            "http://dbpedia.org/resource/Jack_Reacher_(film)",
            "http://dbpedia.org/resource/Jack_Reacher:_Never_Go_Back",
            "http://dbpedia.org/resource/Jerry_Maguire__Jerry_Maguire__1",
            "http://dbpedia.org/resource/Knight_and_Day__Knight_and_Day__1",
            "http://dbpedia.org/resource/Legend_(1985_film)",
            "http://dbpedia.org/resource/Lions_for_Lambs",
            "http://dbpedia.org/resource/Losin'_It",
            "http://dbpedia.org/resource/Magnolia_(film)__Magnolia__1",
            "http://dbpedia.org/resource/Minority_Report_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_One",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Dead_Reckoning_Part_Two",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Fallout",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Ghost_Protocol",
            "http://dbpedia.org/resource/Mission:_Impossible_\u2013_Rogue_Nation",
            "http://dbpedia.org/resource/Mission:_Impossible_(film)",
            "http://dbpedia.org/resource/Mission:_Impossible_2",
            "http://dbpedia.org/resource/Mission:_Impossible_III",
            "http://dbpedia.org/resource/Oblivion_(2013_film)",
            "http://dbpedia.org/resource/Rain_Man",
            "http://dbpedia.org/resource/Risky_Business",
            "http://dbpedia.org/resource/Rock_of_Ages_(2012_film)",
            "http://dbpedia.org/resource/Taps_(film)",
            "http://dbpedia.org/resource/The_Color_of_Money",
            "http://dbpedia.org/resource/The_Firm_(1993_film)",
            "http://dbpedia.org/resource/The_Last_Samurai",
            "http://dbpedia.org/resource/The_Mummy_(2017_film)",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/Top_Gun:_Maverick",
            "http://dbpedia.org/resource/Top_Gun",
            "http://dbpedia.org/resource/Valkyrie_(film)",
            "http://dbpedia.org/resource/Vanilla_Sky",
            "http://dbpedia.org/resource/War_of_the_Worlds_(2005_film)"
        ]
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri a dbo:Country . }",
        "answers": [
            "http://dbpedia.org/resource/China",
            "http://dbpedia.org/resource/Nepal"
        ]
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Dallas"
        ]
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/East_River"
        ]
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Swimmer dbr:Swimmer ; dbo:birthPlace dbr:Moscow . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?s1 WHERE { ?s1 rdf:type dbo:Film . ?s1 dbo:starring dbr:Alec_Guinness . ?s1 dbo:releaseDate ?o1 . } ORDER BY DESC(?o1) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?res WHERE { ?res a dbo:Mountain . ?res dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
        "answers": [
            "http://dbpedia.org/resource/White_Mountains_(Arizona)"
        ]
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Cairo dbo:populationTotal ?val . }",
        "answers": [
            "10100166"
        ]
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:birthPlace res:Heraklion . }",
        "answers": [
            "http://dbpedia.org/resource/Anastasios_Triantafyllou_(footballer)",
            "http://dbpedia.org/resource/Anastasios_Triantafyllou",
            "http://dbpedia.org/resource/Andreas_Bouchalakis",
            "http://dbpedia.org/resource/Andreas_Musalus",
            "http://dbpedia.org/resource/Antonis_Alexakis",
            "http://dbpedia.org/resource/Antonis_Bourselis",
            "http://dbpedia.org/resource/Archbishop_Makarios_of_Australia",
            "http://dbpedia.org/resource/Beata_Kitsikis",
            "http://dbpedia.org/resource/Charalampos_Charalampakis",
            "http://dbpedia.org/resource/Charalampos_Damianakis",
            "http://dbpedia.org/resource/Christoforos_Liontakis",
            "http://dbpedia.org/resource/Christoforos_Papakaliatis",
            "http://dbpedia.org/resource/Christos_Belevonis",
            "http://dbpedia.org/resource/Christos_Kozyrakis",
            "http://dbpedia.org/resource/Christos_Saloustros",
            "http://dbpedia.org/resource/Chrysovalantis_Kozoronis",
            "http://dbpedia.org/resource/Cyril_Lucaris",
            "http://dbpedia.org/resource/Dimitrios_Kiliaras",
            "http://dbpedia.org/resource/Dimitrios_Papadopoulos_(footballer,_born_1950)__Dimitrios_Papadopoulos__1",
            "http://dbpedia.org/resource/Dimitrios_Raptakis",
            "http://dbpedia.org/resource/Edison_Kola",
            "http://dbpedia.org/resource/Eleftherios_Goulielmakis",
            "http://dbpedia.org/resource/Emmanuel_Skordilis",
            "http://dbpedia.org/resource/Fotis_Kafatos",
            "http://dbpedia.org/resource/Franghias_Kavertzas",
            "http://dbpedia.org/resource/Georges_Panayotis",
            "http://dbpedia.org/resource/Georgios_Kalaitzakis",
            "http://dbpedia.org/resource/Georgios_Kastrofylakas",
            "http://dbpedia.org/resource/Georgios_Klontzas",
            "http://dbpedia.org/resource/Georgios_Kortezas",
            "http://dbpedia.org/resource/Georgios_Manousakis",
            "http://dbpedia.org/resource/Georgios_Samaras",
            "http://dbpedia.org/resource/Georgios_Sarris",
            "http://dbpedia.org/resource/Georgios_Sournakis",
            "http://dbpedia.org/resource/Georgios_Vlastos",
            "http://dbpedia.org/resource/Gianna_Angelopoulos-Daskalaki",
            "http://dbpedia.org/resource/Giannis_Boutsakis",
            "http://dbpedia.org/resource/Giannis_Dermitzakis",
            "http://dbpedia.org/resource/Giannis_Domatas",
            "http://dbpedia.org/resource/Giannis_Iatroudis",
            "http://dbpedia.org/resource/Giannis_Koutantos",
            "http://dbpedia.org/resource/Giannis_Vardinogiannis",
            "http://dbpedia.org/resource/Giorgos_Giakoumakis__Giorgos_Giakoumakis__1",
            "http://dbpedia.org/resource/Giorgos_Grammatikakis",
            "http://dbpedia.org/resource/Giorgos_Petrakis",
            "http://dbpedia.org/resource/Ieremias_Palladas",
            "http://dbpedia.org/resource/Ilias_Koutsoupias",
            "http://dbpedia.org/resource/Ioannis_Apakas",
            "http://dbpedia.org/resource/Ioannis_Ikonomou",
            "http://dbpedia.org/resource/Ioannis_Pagomenos",
            "http://dbpedia.org/resource/Iosif_Daskalakis",
            "http://dbpedia.org/resource/Irini_Vasiliou",
            "http://dbpedia.org/resource/Joseph_Sifakis",
            "http://dbpedia.org/resource/Konstantinos_Gouvis",
            "http://dbpedia.org/resource/Konstantinos_Provydakis",
            "http://dbpedia.org/resource/Konstanty_Korniakt",
            "http://dbpedia.org/resource/Kostas_Chaniotakis",
            "http://dbpedia.org/resource/Lampros_Kefaloukos",
            "http://dbpedia.org/resource/Lefteris_Gialousis",
            "http://dbpedia.org/resource/Lena_Platonos",
            "http://dbpedia.org/resource/Leonidas_Kyrkos",
            "http://dbpedia.org/resource/Lili_Zografou",
            "http://dbpedia.org/resource/Manolis_Bolakis",
            "http://dbpedia.org/resource/Manolis_Hatzidakis",
            "http://dbpedia.org/resource/Manolis_Moniakis",
            "http://dbpedia.org/resource/Manolis_Papamattheakis",
            "http://dbpedia.org/resource/Manolis_Patemtzis",
            "http://dbpedia.org/resource/Manolis_Roubakis",
            "http://dbpedia.org/resource/Manolis_Roussakis",
            "http://dbpedia.org/resource/Manolis_Rovithis",
            "http://dbpedia.org/resource/Manolis_Saliakas",
            "http://dbpedia.org/resource/Manolis_Stefanoudakis",
            "http://dbpedia.org/resource/Manuel_Fokas",
            "http://dbpedia.org/resource/Markos_Bathas",
            "http://dbpedia.org/resource/Meletius_I_Pegas",
            "http://dbpedia.org/resource/Michael_Fokas",
            "http://dbpedia.org/resource/Michael_Katehakis",
            "http://dbpedia.org/resource/Michail_Fragoulakis",
            "http://dbpedia.org/resource/Michalis_Sifakis",
            "http://dbpedia.org/resource/Michalis_Tzirakis",
            "http://dbpedia.org/resource/Minas_Chalkiadakis",
            "http://dbpedia.org/resource/Minas_Pitsos",
            "http://dbpedia.org/resource/Myron_Michailidis",
            "http://dbpedia.org/resource/Nadia_Valavani",
            "http://dbpedia.org/resource/Nektarios_Azizi",
            "http://dbpedia.org/resource/Nektarios_Tavernarakis",
            "http://dbpedia.org/resource/Nicholas_Kalliakis",
            "http://dbpedia.org/resource/Nikolaos_Gripiotis",
            "http://dbpedia.org/resource/Nikolaos_Ritzos",
            "http://dbpedia.org/resource/Nikonas_Spiliotakis",
            "http://dbpedia.org/resource/Nikos_Androulakis",
            "http://dbpedia.org/resource/Nikos_Karelis",
            "http://dbpedia.org/resource/Nikos_Kazantzakis",
            "http://dbpedia.org/resource/Nikos_Kousidis",
            "http://dbpedia.org/resource/Nikos_Machlas",
            "http://dbpedia.org/resource/Nikos_Marinakis",
            "http://dbpedia.org/resource/Nikos_Psimopoulos",
            "http://dbpedia.org/resource/Nikos_Vrettos",
            "http://dbpedia.org/resource/Ntinos_Konstantakis",
            "http://dbpedia.org/resource/Odysseas_Elytis",
            "http://dbpedia.org/resource/Oresti_Kacurri",
            "http://dbpedia.org/resource/Panagiotis_Kalaitzakis",
            "http://dbpedia.org/resource/Panagiotis_Petras",
            "http://dbpedia.org/resource/Petros_Giakoumakis",
            "http://dbpedia.org/resource/Petros_Lambardos",
            "http://dbpedia.org/resource/Petros_Marinakis",
            "http://dbpedia.org/resource/\u015eadi_\u00c7al\u0131k",
            "http://dbpedia.org/resource/Sapfo_Notara",
            "http://dbpedia.org/resource/Spyros_Danellis",
            "http://dbpedia.org/resource/Stavros_Arnaoutakis",
            "http://dbpedia.org/resource/Stavros_Labrakis",
            "http://dbpedia.org/resource/Theocharis_Silvestros",
            "http://dbpedia.org/resource/Theophanes_the_Cretan",
            "http://dbpedia.org/resource/Thomas_Bathas",
            "http://dbpedia.org/resource/Vangelis_Nikokyrakis",
            "http://dbpedia.org/resource/Vasilios_Babis",
            "http://dbpedia.org/resource/Vasilios_Vogiatzis",
            "http://dbpedia.org/resource/Victor_(iconographer)",
            "http://dbpedia.org/resource/Zacharias_Kavousakis"
        ]
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { dbr:Benjamin_Franklin dbo:child ?uri . }",
        "answers": [
            "3"
        ]
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?elevation WHERE { res:D\u00fcsseldorf_Airport dbo:elevation ?elevation . }",
        "answers": [
            "44.8",
            "44.8056"
        ]
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?country WHERE { res:Mecca dbo:country ?country . }",
        "answers": [
            "http://dbpedia.org/resource/Saudi_Arabia"
        ]
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Claudia_Schiffer dbo:height ?val . }",
        "answers": [
            "1.8"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri rdf:type dbo:Holiday . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Art_rock",
            "http://dbpedia.org/resource/Experimental_music",
            "http://dbpedia.org/resource/Glam_rock",
            "http://dbpedia.org/resource/Noise_rock",
            "http://dbpedia.org/resource/Proto-punk",
            "http://dbpedia.org/resource/Rock_music"
        ]
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Frank_Sinatra dbo:birthPlace ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Hoboken,_New_Jersey"
        ]
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?population . } ORDER BY ASC(?population) LIMIT 1",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:creator dbr:Walt_Disney . }",
        "answers": [
            "http://dbpedia.org/resource/Alice_Comedies",
            "http://dbpedia.org/resource/Aurora_(Sleeping_Beauty)",
            "http://dbpedia.org/resource/Baloo",
            "http://dbpedia.org/resource/Big_Bad_Wolf",
            "http://dbpedia.org/resource/Cinderella_(Disney_character)",
            "http://dbpedia.org/resource/Clarabelle_Cow",
            "http://dbpedia.org/resource/Disney_anthology_television_series",
            "http://dbpedia.org/resource/Dodo_(Alice's_Adventures_in_Wonderland)__Capt._Dodo__1",
            "http://dbpedia.org/resource/Donald_Duck",
            "http://dbpedia.org/resource/Geppetto",
            "http://dbpedia.org/resource/Gopher_(Winnie-the-Pooh)",
            "http://dbpedia.org/resource/Horace_Horsecollar",
            "http://dbpedia.org/resource/Humphrey_the_Bear",
            "http://dbpedia.org/resource/Julius_the_Cat",
            "http://dbpedia.org/resource/King_Louie",
            "http://dbpedia.org/resource/Ludwig_Von_Drake__Ludwig_Von_Drake__1",
            "http://dbpedia.org/resource/Mangiafuoco__Stromboli__1",
            "http://dbpedia.org/resource/Mickey_Mouse",
            "http://dbpedia.org/resource/Minnie_Mouse",
            "http://dbpedia.org/resource/Oswald_the_Lucky_Rabbit",
            "http://dbpedia.org/resource/Pete_(Disney)",
            "http://dbpedia.org/resource/Pinocchio",
            "http://dbpedia.org/resource/Pluto_(Disney)",
            "http://dbpedia.org/resource/Seven_Dwarfs__The_Seven_Disney_Dwarfs__1",
            "http://dbpedia.org/resource/Shere_Khan__Shere_Khan__1",
            "http://dbpedia.org/resource/The_Coachman__The_Coachman__1",
            "http://dbpedia.org/resource/Tinker_Bell__Tinker_Bell__1",
            "http://dbpedia.org/resource/White_Rabbit__White_Rabbit__1"
        ]
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:Holiday ?holiday . ?uri dbo:country res:Sweden . }",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Apple_Inc. dbo:netIncome ?uri . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Washington,_D.C."
        ]
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?capital WHERE { dbr:Himalayas dbo:country ?country . ?country dbo:capital ?capital . }",
        "answers": [
            "http://dbpedia.org/resource/New_Delhi"
        ]
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Canada"
        ]
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Michael_Jordan dbo:height ?val . }",
        "answers": [
            "1.9812"
        ]
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Clint_Eastwood ; dbo:starring res:Clint_Eastwood . }",
        "answers": [
            "http://dbpedia.org/resource/A_Perfect_World",
            "http://dbpedia.org/resource/Absolute_Power_(film)",
            "http://dbpedia.org/resource/Blood_Work_(film)",
            "http://dbpedia.org/resource/Cry_Macho_(film)",
            "http://dbpedia.org/resource/Dirty_Harry_(film_series)",
            "http://dbpedia.org/resource/Firefox_(film)",
            "http://dbpedia.org/resource/Gran_Torino",
            "http://dbpedia.org/resource/Heartbreak_Ridge",
            "http://dbpedia.org/resource/High_Plains_Drifter",
            "http://dbpedia.org/resource/Honkytonk_Man",
            "http://dbpedia.org/resource/Million_Dollar_Baby__Million_Dollar_Baby__1",
            "http://dbpedia.org/resource/Pale_Rider",
            "http://dbpedia.org/resource/Play_Misty_for_Me",
            "http://dbpedia.org/resource/Space_Cowboys",
            "http://dbpedia.org/resource/Sudden_Impact",
            "http://dbpedia.org/resource/The_Bridges_of_Madison_County_(film)",
            "http://dbpedia.org/resource/The_Eiger_Sanction_(film)",
            "http://dbpedia.org/resource/The_Mule_(2018_film)",
            "http://dbpedia.org/resource/The_Outlaw_Josey_Wales__The_Outlaw_Josey_Wales__1",
            "http://dbpedia.org/resource/The_Rookie_(1990_film)",
            "http://dbpedia.org/resource/True_Crime_(1999_film)",
            "http://dbpedia.org/resource/Unforgiven",
            "http://dbpedia.org/resource/White_Hunter_Black_Heart"
        ]
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:West_African_CFA_franc . }",
        "answers": [
            "http://dbpedia.org/resource/Benin",
            "http://dbpedia.org/resource/Burkina_Faso",
            "http://dbpedia.org/resource/Colonial_Mauritania",
            "http://dbpedia.org/resource/Colony_of_Niger",
            "http://dbpedia.org/resource/Economic_Community_of_West_African_States",
            "http://dbpedia.org/resource/French_Dahomey",
            "http://dbpedia.org/resource/French_Togoland",
            "http://dbpedia.org/resource/Guinea-Bissau",
            "http://dbpedia.org/resource/History_of_Togo",
            "http://dbpedia.org/resource/Ivory_Coast",
            "http://dbpedia.org/resource/Mali",
            "http://dbpedia.org/resource/Niger",
            "http://dbpedia.org/resource/People's_Republic_of_Benin",
            "http://dbpedia.org/resource/Republic_of_Dahomey",
            "http://dbpedia.org/resource/Republic_of_Upper_Volta",
            "http://dbpedia.org/resource/Senegal",
            "http://dbpedia.org/resource/Senegambia_Confederation",
            "http://dbpedia.org/resource/Togo"
        ]
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:Iraq dbo:populationTotal ?val . }",
        "answers": [
            "40462701"
        ]
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:PoliticalParty ; dbo:country res:Greece ; dbo:ideology res:Pro-Europeanism . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Charmed dbo:starring ?actor . ?actor dbo:birthDate ?date . }",
        "answers": [
            "1965-10-01",
            "1968-07-27",
            "1969-02-01",
            "1971-01-26",
            "1971-04-12",
            "1972-12-19",
            "1973-06-15",
            "1973-09-05",
            "1973-12-03",
            "1980-05-19",
            "1985-11-30"
        ]
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?painter . ?painter dbo:movement ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Cubism",
            "http://dbpedia.org/resource/Surrealism"
        ]
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/Actor> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace>/<http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/John_Augustus_Roebling"
        ]
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Ramin_Djawadi"
        ]
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Francis_Ford_Coppola . }",
        "answers": [
            "http://dbpedia.org/resource/Apocalypse_Now_Redux",
            "http://dbpedia.org/resource/Battle_Beyond_the_Sun",
            "http://dbpedia.org/resource/Bram_Stoker's_Dracula_(1992_film)",
            "http://dbpedia.org/resource/Captain_EO",
            "http://dbpedia.org/resource/Dementia_13",
            "http://dbpedia.org/resource/Distant_Vision",
            "http://dbpedia.org/resource/Finian's_Rainbow_(1968_film)",
            "http://dbpedia.org/resource/Gardens_of_Stone",
            "http://dbpedia.org/resource/Jack_(1996_film)",
            "http://dbpedia.org/resource/Megalopolis_(film)",
            "http://dbpedia.org/resource/New_York_Stories",
            "http://dbpedia.org/resource/One_from_the_Heart",
            "http://dbpedia.org/resource/Peggy_Sue_Got_Married",
            "http://dbpedia.org/resource/Rumble_Fish",
            "http://dbpedia.org/resource/Supernova_(2000_film)",
            "http://dbpedia.org/resource/Tetro",
            "http://dbpedia.org/resource/The_Bellboy_and_the_Playgirls",
            "http://dbpedia.org/resource/The_Conversation",
            "http://dbpedia.org/resource/The_Cotton_Club_(film)",
            "http://dbpedia.org/resource/The_Godfather_(film_series)",
            "http://dbpedia.org/resource/The_Godfather_Part_II",
            "http://dbpedia.org/resource/The_Godfather_Part_III",
            "http://dbpedia.org/resource/The_Godfather_Saga__The_Godfather_Trilogy:_1901\u20131980__1",
            "http://dbpedia.org/resource/The_Godfather_Saga",
            "http://dbpedia.org/resource/The_Godfather",
            "http://dbpedia.org/resource/The_Outsiders_(film)",
            "http://dbpedia.org/resource/The_Rain_People",
            "http://dbpedia.org/resource/The_Rainmaker_(1997_film)",
            "http://dbpedia.org/resource/The_Terror_(1963_film)",
            "http://dbpedia.org/resource/Tonight_for_Sure",
            "http://dbpedia.org/resource/Tucker:_The_Man_and_His_Dream",
            "http://dbpedia.org/resource/Twixt_(film)",
            "http://dbpedia.org/resource/You're_a_Big_Boy_Now",
            "http://dbpedia.org/resource/Youth_Without_Youth_(film)"
        ]
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?name WHERE { res:Adele dbo:birthName ?name. }",
        "answers": [
            "Adele Laurie Blue Adkins"
        ]
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . } ORDER BY ?date LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Keep_Yourself_Alive"
        ]
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Czech_koruna"
        ]
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:birthPlace res:Vienna . ?uri dbo:deathPlace res:Berlin . }",
        "answers": [
            "http://dbpedia.org/resource/Adolf_Klein",
            "http://dbpedia.org/resource/Eduard_von_Winterstein",
            "http://dbpedia.org/resource/Eleonore_de_Ahna",
            "http://dbpedia.org/resource/Emil_Justitz",
            "http://dbpedia.org/resource/Erik_Jan_Hanussen",
            "http://dbpedia.org/resource/Eva_Schmidt-Kolmer",
            "http://dbpedia.org/resource/Gerda_Laski",
            "http://dbpedia.org/resource/Guido_von_List",
            "http://dbpedia.org/resource/Hans_Fidesser",
            "http://dbpedia.org/resource/Heinrich_Belohlavek",
            "http://dbpedia.org/resource/Hugo_Flink",
            "http://dbpedia.org/resource/Josephine_Pagay",
            "http://dbpedia.org/resource/Karl_Etlinger",
            "http://dbpedia.org/resource/Karl_Hellmer",
            "http://dbpedia.org/resource/La_Jana_(actress)",
            "http://dbpedia.org/resource/Luise_Begas-Parmentier",
            "http://dbpedia.org/resource/Mathilde_Danegger",
            "http://dbpedia.org/resource/Michael_von_Newlinsky",
            "http://dbpedia.org/resource/Richard_Thurnwald",
            "http://dbpedia.org/resource/Robert_Bodanzky",
            "http://dbpedia.org/resource/Steffie_Spira",
            "http://dbpedia.org/resource/Therese_Gr\u00fcnbaum",
            "http://dbpedia.org/resource/Tom_Seidmann-Freud"
        ]
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Bridge . ?uri dbo:crosses res:Seine . }",
        "answers": [
            "http://dbpedia.org/resource/Passerelle_Debilly",
            "http://dbpedia.org/resource/Passerelle_Simone-de-Beauvoir",
            "http://dbpedia.org/resource/Pont_Alexandre_III",
            "http://dbpedia.org/resource/Pont_amont",
            "http://dbpedia.org/resource/Pont_au_Change",
            "http://dbpedia.org/resource/Pont_au_Double",
            "http://dbpedia.org/resource/Pont_aval",
            "http://dbpedia.org/resource/Pont_Charles-de-Gaulle",
            "http://dbpedia.org/resource/Pont_d'Austerlitz",
            "http://dbpedia.org/resource/Pont_d'I\u00e9na",
            "http://dbpedia.org/resource/Pont_de_Bercy",
            "http://dbpedia.org/resource/Pont_de_Bir-Hakeim",
            "http://dbpedia.org/resource/Pont_de_Brotonne",
            "http://dbpedia.org/resource/Pont_de_Grenelle",
            "http://dbpedia.org/resource/Pont_de_l'Alma",
            "http://dbpedia.org/resource/Pont_de_l'Archev\u00each\u00e9",
            "http://dbpedia.org/resource/Pont_de_la_Concorde_(Paris)",
            "http://dbpedia.org/resource/Pont_de_la_Tournelle",
            "http://dbpedia.org/resource/Pont_de_Neuilly",
            "http://dbpedia.org/resource/Pont_de_Normandie",
            "http://dbpedia.org/resource/Pont_de_Sully",
            "http://dbpedia.org/resource/Pont_de_Tolbiac",
            "http://dbpedia.org/resource/Pont_des_Invalides",
            "http://dbpedia.org/resource/Pont_du_Carrousel",
            "http://dbpedia.org/resource/Pont_du_Garigliano",
            "http://dbpedia.org/resource/Pont_Gustave-Flaubert",
            "http://dbpedia.org/resource/Pont_Louis-Philippe",
            "http://dbpedia.org/resource/Pont_Marie",
            "http://dbpedia.org/resource/Pont_National",
            "http://dbpedia.org/resource/Pont_Neuf",
            "http://dbpedia.org/resource/Pont_Notre-Dame",
            "http://dbpedia.org/resource/Pont_Rouelle",
            "http://dbpedia.org/resource/Pont_Royal",
            "http://dbpedia.org/resource/Port_\u00e0_l'Anglais_Bridge",
            "http://dbpedia.org/resource/Viaduc_d'Austerlitz"
        ]
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation dbr:Musician . ?x dbo:author ?uri ; a dbo:Book . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1",
        "answers": [
            "http://dbpedia.org/resource/Julius_Lester"
        ]
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/TelevisionShow> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:award dbr:Nobel_Prize_in_Literature . ?uri a dbo:Writer . }",
        "answers": [
            "http://dbpedia.org/resource/Abdulrazak_Gurnah",
            "http://dbpedia.org/resource/Aleksandr_Solzhenitsyn",
            "http://dbpedia.org/resource/Alice_Munro",
            "http://dbpedia.org/resource/Annie_Ernaux",
            "http://dbpedia.org/resource/Czes\u0142aw_Mi\u0142osz",
            "http://dbpedia.org/resource/Eugene_O'Neill",
            "http://dbpedia.org/resource/Gerhart_Hauptmann",
            "http://dbpedia.org/resource/Harold_Pinter",
            "http://dbpedia.org/resource/Hermann_Hesse",
            "http://dbpedia.org/resource/J._M._Coetzee",
            "http://dbpedia.org/resource/John_Steinbeck",
            "http://dbpedia.org/resource/Jos\u00e9_Saramago",
            "http://dbpedia.org/resource/Juan_Ram\u00f3n_Jim\u00e9nez",
            "http://dbpedia.org/resource/Louise_Gl\u00fcck",
            "http://dbpedia.org/resource/Octavio_Paz",
            "http://dbpedia.org/resource/Olga_Tokarczuk",
            "http://dbpedia.org/resource/Patrick_Modiano",
            "http://dbpedia.org/resource/Patrick_White",
            "http://dbpedia.org/resource/Sorley_MacLean",
            "http://dbpedia.org/resource/Svetlana_Alexievich",
            "http://dbpedia.org/resource/Thomas_Mann",
            "http://dbpedia.org/resource/Toni_Morrison",
            "http://dbpedia.org/resource/William_Faulkner",
            "http://dbpedia.org/resource/William_Golding__William_Golding__1",
            "http://dbpedia.org/resource/Wis\u0142awa_Szymborska"
        ]
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Giuseppe_Piazzi"
        ]
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?res WHERE { ?res dbo:occupation res:Bandleader . ?res dbo:instrument res:Trumpet . }",
        "answers": [
            "http://dbpedia.org/resource/Abatte_Barihun",
            "http://dbpedia.org/resource/Alan_Silva",
            "http://dbpedia.org/resource/Artie_Fields",
            "http://dbpedia.org/resource/Charlie_Spivak",
            "http://dbpedia.org/resource/Danny_Davis_(country_musician)",
            "http://dbpedia.org/resource/Doc_Cheatham",
            "http://dbpedia.org/resource/Ernest_%22Doc%22_Paulin",
            "http://dbpedia.org/resource/Jack_Jackson_(radio_personality)",
            "http://dbpedia.org/resource/Jacobo_Rubalcaba",
            "http://dbpedia.org/resource/Jimmy_Dorsey",
            "http://dbpedia.org/resource/Kaj_Backlund",
            "http://dbpedia.org/resource/Lloyd_Hunter",
            "http://dbpedia.org/resource/Marlon_Jordan",
            "http://dbpedia.org/resource/Mick_Mulligan",
            "http://dbpedia.org/resource/Ollie_Mitchell",
            "http://dbpedia.org/resource/Ovie_Alston",
            "http://dbpedia.org/resource/Pacho_Galan",
            "http://dbpedia.org/resource/Red_Perkins",
            "http://dbpedia.org/resource/Richard_Maltby_Sr.",
            "http://dbpedia.org/resource/Steamboat_Willie_(musician)"
        ]
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer . ?uri dbo:height ?height . FILTER(?height > 200) }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }",
        "answers": [
            "http://dbpedia.org/resource/Ottawa"
        ]
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:birthPlace res:Malta . ?uri a dbo:SoccerPlayer . }",
        "answers": [
            "http://dbpedia.org/resource/Aaron_Xuereb",
            "http://dbpedia.org/resource/Adrian_Ciantar",
            "http://dbpedia.org/resource/Adrian_Mifsud",
            "http://dbpedia.org/resource/Adrian_Pulis",
            "http://dbpedia.org/resource/Alishia_Sultana",
            "http://dbpedia.org/resource/Andrei_Agius",
            "http://dbpedia.org/resource/Andrew_Cohen_(footballer)",
            "http://dbpedia.org/resource/Antoine_Zahra_(footballer,_born_1977)",
            "http://dbpedia.org/resource/Antoine_Zahra_(footballer,_born_1981)",
            "http://dbpedia.org/resource/Brenda_Borg",
            "http://dbpedia.org/resource/Brian_Said",
            "http://dbpedia.org/resource/Brian_Strutt",
            "http://dbpedia.org/resource/Callum_Talbot",
            "http://dbpedia.org/resource/Carlo_Mamo",
            "http://dbpedia.org/resource/Charles_Azzopardi",
            "http://dbpedia.org/resource/Charles_Micallef",
            "http://dbpedia.org/resource/Charles_Muscat",
            "http://dbpedia.org/resource/Charlie_Williams_(footballer,_born_1944)",
            "http://dbpedia.org/resource/Claude_Mattocks",
            "http://dbpedia.org/resource/Cleavon_Frendo",
            "http://dbpedia.org/resource/Cornelius_Hogan",
            "http://dbpedia.org/resource/Daniel_Theuma",
            "http://dbpedia.org/resource/Darren_Debono",
            "http://dbpedia.org/resource/David_Camilleri",
            "http://dbpedia.org/resource/David_Cluett",
            "http://dbpedia.org/resource/Denis_Cauchi",
            "http://dbpedia.org/resource/Dennis_Mizzi",
            "http://dbpedia.org/resource/Dexter_Xuereb",
            "http://dbpedia.org/resource/Dorianne_Theuma",
            "http://dbpedia.org/resource/Edmond_Agius",
            "http://dbpedia.org/resource/Edward_Azzopardi",
            "http://dbpedia.org/resource/Emanuel_Fabri",
            "http://dbpedia.org/resource/Emma_Xuerreb",
            "http://dbpedia.org/resource/Gareth_Sciberras",
            "http://dbpedia.org/resource/George_Mallia",
            "http://dbpedia.org/resource/Hubert_Suda",
            "http://dbpedia.org/resource/Ian_Azzopardi",
            "http://dbpedia.org/resource/Ian_Ciantar",
            "http://dbpedia.org/resource/Ivan_Zammit",
            "http://dbpedia.org/resource/Jade_Flask",
            "http://dbpedia.org/resource/Jamie_Zerafa",
            "http://dbpedia.org/resource/Jean_Paul_Farrugia",
            "http://dbpedia.org/resource/Jeffrey_Chetcuti",
            "http://dbpedia.org/resource/Jesmond_Delia",
            "http://dbpedia.org/resource/Joe_Brincat",
            "http://dbpedia.org/resource/Johann_Bezzina",
            "http://dbpedia.org/resource/John_Bonello",
            "http://dbpedia.org/resource/John_McNeill_(footballer)",
            "http://dbpedia.org/resource/Jonathan_Caruana",
            "http://dbpedia.org/resource/Jonathan_Holland_(footballer)",
            "http://dbpedia.org/resource/Jonathan_Magri_Overend",
            "http://dbpedia.org/resource/Josef_Mifsud",
            "http://dbpedia.org/resource/Joseph_Farrugia",
            "http://dbpedia.org/resource/Juan_Carlos_Corbalan",
            "http://dbpedia.org/resource/Justin_Haber",
            "http://dbpedia.org/resource/Kenneth_Scicluna",
            "http://dbpedia.org/resource/Kevin_Sammut",
            "http://dbpedia.org/resource/Kristian_Laferla",
            "http://dbpedia.org/resource/Lino_Galea",
            "http://dbpedia.org/resource/Lolly_Vella",
            "http://dbpedia.org/resource/Malcolm_Licari",
            "http://dbpedia.org/resource/Maria_Farrugia",
            "http://dbpedia.org/resource/Mario_Farrugia",
            "http://dbpedia.org/resource/Martina_Borg",
            "http://dbpedia.org/resource/Massimo_Grima",
            "http://dbpedia.org/resource/Matthew_Guillaumier",
            "http://dbpedia.org/resource/Michael_Cutajar",
            "http://dbpedia.org/resource/Michael_Galea",
            "http://dbpedia.org/resource/Michael_Johnson_(footballer,_born_1994)",
            "http://dbpedia.org/resource/Nicole_Buttigieg",
            "http://dbpedia.org/resource/Nicole_Sciberras",
            "http://dbpedia.org/resource/Noel_Turner_(footballer)",
            "http://dbpedia.org/resource/Paul_Fenech_(footballer)",
            "http://dbpedia.org/resource/Pierre_Aquilina",
            "http://dbpedia.org/resource/Ray_Farrugia",
            "http://dbpedia.org/resource/Raymond_Xuereb",
            "http://dbpedia.org/resource/Rebecca_D'Agostino",
            "http://dbpedia.org/resource/Reginald_Cini",
            "http://dbpedia.org/resource/Roderick_Briffa",
            "http://dbpedia.org/resource/Ronnie_Cocks",
            "http://dbpedia.org/resource/Saviour_Darmanin",
            "http://dbpedia.org/resource/Sean_Sullivan_(footballer)",
            "http://dbpedia.org/resource/Simon_Tortell",
            "http://dbpedia.org/resource/Stefan_Giglio",
            "http://dbpedia.org/resource/Stefania_Farrugia",
            "http://dbpedia.org/resource/Stephen_Wellman",
            "http://dbpedia.org/resource/Steve_Bezzina",
            "http://dbpedia.org/resource/Steve_Pisani",
            "http://dbpedia.org/resource/Terence_Scerri",
            "http://dbpedia.org/resource/Terence_Vella",
            "http://dbpedia.org/resource/Vincent_Borg_Bonaci",
            "http://dbpedia.org/resource/William_Camenzuli"
        ]
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cameroon> <http://dbpedia.org/ontology/capital> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Yaound\u00e9"
        ]
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub a dbo:ProgrammingLanguage . }",
        "answers": [
            "1325"
        ]
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri rdf:type <http://dbpedia.org/ontology/Astronaut> . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Family_Guy> <http://dbpedia.org/ontology/creator> ?uri }",
        "answers": [
            "http://dbpedia.org/resource/Seth_MacFarlane"
        ]
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Mexico_City dbo:populationTotal ?population . }",
        "answers": [
            "9209944"
        ]
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Bill_Finger",
            "http://dbpedia.org/resource/Bob_Kane"
        ]
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Australia dbo:capital ?capital_uri . ?capital_uri dbo:populationTotal ?number . }",
        "answers": [
            "453558"
        ]
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?val WHERE { res:North_Rhine-Westphalia dbo:areaTotal ?val . }",
        "answers": [
            "34084130000"
        ]
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?employees WHERE { res:IBM dbo:numberOfEmployees ?employees . }",
        "answers": [
            "282100"
        ]
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?value WHERE { res:Pulp_Fiction dbo:budget ?value . }",
        "answers": [
            "8.0"
        ]
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . }",
        "answers": [
            "http://dbpedia.org/resource/Addicted_to_Fame",
            "http://dbpedia.org/resource/Adventureland_(film)",
            "http://dbpedia.org/resource/American_Ultra",
            "http://dbpedia.org/resource/Batman_v_Superman:_Dawn_of_Justice",
            "http://dbpedia.org/resource/Caf\u00e9_Society_(2016_film)",
            "http://dbpedia.org/resource/Camp_Hell",
            "http://dbpedia.org/resource/Cursed_(2005_film)",
            "http://dbpedia.org/resource/Fleishman_Is_in_Trouble_(miniseries)",
            "http://dbpedia.org/resource/Free_Samples",
            "http://dbpedia.org/resource/Get_Real_(American_TV_series)",
            "http://dbpedia.org/resource/He's_Way_More_Famous_Than_You",
            "http://dbpedia.org/resource/Louder_Than_Bombs_(film)",
            "http://dbpedia.org/resource/Night_Moves_(2013_film)",
            "http://dbpedia.org/resource/Now_You_See_Me_(film_series)",
            "http://dbpedia.org/resource/Now_You_See_Me_(film)",
            "http://dbpedia.org/resource/Now_You_See_Me_2",
            "http://dbpedia.org/resource/One_Day_Like_Rain",
            "http://dbpedia.org/resource/Resistance_(2020_film)",
            "http://dbpedia.org/resource/Rio_(2011_film)",
            "http://dbpedia.org/resource/Rio_2",
            "http://dbpedia.org/resource/Roger_Dodger_(film)",
            "http://dbpedia.org/resource/Solitary_Man_(film)",
            "http://dbpedia.org/resource/The_Art_of_Self-Defense_(2019_film)",
            "http://dbpedia.org/resource/The_Double_(2013_film)__The_Double__1",
            "http://dbpedia.org/resource/The_Education_of_Charlie_Banks",
            "http://dbpedia.org/resource/The_End_of_the_Tour",
            "http://dbpedia.org/resource/The_Hummingbird_Project",
            "http://dbpedia.org/resource/The_Hunting_Party_(2007_film)",
            "http://dbpedia.org/resource/The_Living_Wake",
            "http://dbpedia.org/resource/The_Social_Network",
            "http://dbpedia.org/resource/The_Squid_and_the_Whale",
            "http://dbpedia.org/resource/To_Rome_with_Love_(film)",
            "http://dbpedia.org/resource/Vivarium_(film)",
            "http://dbpedia.org/resource/Why_Stop_Now_(film)",
            "http://dbpedia.org/resource/Wild_Indian",
            "http://dbpedia.org/resource/Zack_Snyder's_Justice_League",
            "http://dbpedia.org/resource/Zombieland:_Double_Tap",
            "http://dbpedia.org/resource/Zombieland"
        ]
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark . }",
        "answers": [
            "Query failed"
        ]
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/India",
            "http://dbpedia.org/resource/Kashmir"
        ]
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX onto: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dbc: <http://dbpedia.org/resource/Category:>\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1",
        "answers": [
            "No answer"
        ]
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?res WHERE { res:Angela_Merkel dbo:almaMater ?res . }",
        "answers": [
            "http://dbpedia.org/resource/German_Academy_of_Sciences_at_Berlin",
            "http://dbpedia.org/resource/Leipzig_University"
        ]
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Goofy dbo:creator ?uri . }",
        "answers": [
            "http://dbpedia.org/resource/Bob_Ogle",
            "http://dbpedia.org/resource/Paul_Murry"
        ]
    }
]