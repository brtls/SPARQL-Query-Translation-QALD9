[
    {
        "natural_language_question": "Who is the founder of Penguin Books?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which films did Stanley Kubrick direct?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> }"
    },
    {
        "natural_language_question": "List all the musicals with music by Elton John.",
        "sparql_query": "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Musical> ; <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Elton_John> . }"
    },
    {
        "natural_language_question": "Who developed Skype?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Bundesliga> . }"
    },
    {
        "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?movie <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/William_Shatner> ; <http://dbpedia.org/ontology/starring> ?uri . }"
    },
    {
        "natural_language_question": "What is the highest mountain?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation . ORDER BY DESC(?elevation) LIMIT 1 }"
    },
    {
        "natural_language_question": "How many films did Leonardo DiCaprio star in?",
        "sparql_query": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio>. }"
    },
    {
        "natural_language_question": "When was Olof Palme shot?",
        "sparql_query": "SELECT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
    },
    {
        "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> . }"
    },
    {
        "natural_language_question": "Who developed Minecraft?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { dbpedia:Minecraft dbo:developer ?uri . }"
    },
    {
        "natural_language_question": "How much did the Lego Movie cost?",
        "sparql_query": "SELECT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> <http://dbpedia.org/ontology/budget> ?val }"
    },
    {
        "natural_language_question": "For which label did Elvis record his first album?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?label WHERE { ?uri dbo:artist http://dbpedia.org/resource/Elvis_Presley . ?uri dbo:recordLabel ?label . ?uri dbo:releaseDate ?date . ?album dbo:artist ?uri . ?album dbo:recordLabel ?label . ?album dbo:releaseDate ?date . FILTER (?uri = ?album) ORDER BY ?date ASC LIMIT 1 }"
    },
    {
        "natural_language_question": "Give me the runtime of Toy Story.",
        "sparql_query": "SELECT ?val WHERE { ?uri <http://dbpedia.org/ontology/runtime> <http://dbpedia.org/resource/Toy_Story> . ?uri a <http://dbpedia.org/ontology/Movie> . BIND(?val AS ?runtime) }"
    },
    {
        "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> . }"
    },
    {
        "natural_language_question": "In which year was Rachel Stevens born?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT DISTINCT ?year WHERE { <http://dbpedia.org/resource/Rachel_Stevens> dbpedia:birthYear ?date . BIND(YEAR(?date) as ?year) }"
    },
    {
        "natural_language_question": "What is the most frequent cause of death?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri FROM (SELECT ?uri (COUNT(DISTINCT ?s) AS ?count) FROM <http://dbpedia.org> WHERE { ?s dbo:deathCause ?uri } GROUP BY ?uri ORDER BY DESC(?count) LIMIT 1) WHERE ?uri = ?uri"
    },
    {
        "natural_language_question": "How high is the Yokohama Marine Tower?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "What is the highest mountain in Italy?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Italy> ; <http://dbpedia.org/ontology/elevation> ?elevation . FILTER (?elevation > (SELECT MAX(?elevation) FROM <http://dbpedia.org/> WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Italy> ; <http://dbpedia.org/ontology/Mountain> } LIMIT 1))) } ORDER BY DESC(?elevation) LIMIT 1"
    },
    {
        "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/doctoralAdvisor> ?uri }"
    },
    {
        "natural_language_question": "What is Donald Trump's main business?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "Who has Tom Cruise been married to?",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/Tom_Cruise> <http://dbpedia.org/ontology/spouse> ?o1 }"
    },
    {
        "natural_language_question": "How many people live in Eurasia?",
        "sparql_query": "SELECT (COUNT(DISTINCT ?val) AS ?count) WHERE { ?uri <http://dbpedia.org/ontology/populationTotal> <http://dbpedia.org/resource/Eurasia> . ?uri <http://dbpedia.org/ontology/populationTotal> ?val . }"
    },
    {
        "natural_language_question": "Who is the author of the interpretation of dreams?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/The_Interpretation_of_Dreams> }"
    },
    {
        "natural_language_question": "When was John Adams born?",
        "sparql_query": "SELECT DISTINCT ?val WHERE { ?uri <http://dbpedia.org/ontology/birthDate> <http://dbpedia.org/resource/John_Adams> . ?uri <http://dbpedia.org/ontology/birthDate> ?val . }"
    },
    {
        "natural_language_question": "how much is the total population of european union?",
        "sparql_query": "SELECT ?population WHERE { <http://dbpedia.org/resource/European_Union> <http://dbpedia.org/ontology/populationTotal> ?population }"
    },
    {
        "natural_language_question": "Give me the currency of China.",
        "sparql_query": "SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?o1 . }"
    },
    {
        "natural_language_question": "When was the death of Shakespeare?",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/William_Shakespeare> <http://dbpedia.org/ontology/deathDate> ?uri . }"
    },
    {
        "natural_language_question": "Which rockets were launched from Baikonur?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia-owl:launchSite <http://dbpedia.org/resource/Baikonur_Cosmodrome> . ?uri dbpedia-owl:rocket ?rock . }"
    },
    {
        "natural_language_question": "Give me all islands that belong to Japan.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Island> <http://dbpedia.org/resource/Japan> . OPTIONAL { ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> } }"
    },
    {
        "natural_language_question": "Who developed the video game World of Warcraft?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/World_of_Warcraft> }"
    },
    {
        "natural_language_question": "Give me all companies in the advertising industry.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Company> ?value . ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> . }"
    },
    {
        "natural_language_question": "Which university did Angela Merkel attend?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/TelevisionShow> <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> . }"
    },
    {
        "natural_language_question": "Give me all movies with Tom Cruise.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> . }"
    },
    {
        "natural_language_question": "What country is Mount Everest in?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Mount_Everest> . ?uri <http://dbpedia.org/ontology/Country> ?country . ?country <http://dbpedia.org/ontology/wikiPageID> \"Q6256\" . }"
    },
    {
        "natural_language_question": "Where was JFK assassinated?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/John_F._Kennedy> }"
    },
    {
        "natural_language_question": "Which river does the Brooklyn Bridge cross?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri }"
    },
    {
        "natural_language_question": "Give all swimmers that were born in Moscow.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Swimmer> <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> }"
    },
    {
        "natural_language_question": "What was the last movie with Alec Guinness?",
        "sparql_query": "SELECT ?s1 WHERE { ?s1 dbo:film <http://dbpedia.org/resource/Alec_Guinness> . ?s1 dbo:starring <http://dbpedia.org/resource/Alec_Guinness> . ?s1 dbo:releaseDate ?o1 . } ORDER BY DESC(?o1) LIMIT 1"
    },
    {
        "natural_language_question": "What is the second highest mountain on Earth?",
        "sparql_query": "SELECT ?uri WHERE { ?uri dbo:Mountain ?taxon . ?uri dbp:elevation ?elevation . ?uri dbo:continent ?continent . FILTER (?continent = \"Asia\" OR ?continent = \"Africa\" OR ?continent = \"North America\" OR ?continent = \"South America\" OR ?continent = \"Europe\" OR ?continent = \"Australia\" OR ?continent = \"Antarctica\") } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
    },
    {
        "natural_language_question": "What is the population of Cairo?",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX dbpedia-ontology: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { dbpedia:Cairo dbpedia-ontology:populationTotal ?val }"
    },
    {
        "natural_language_question": "Which people were born in Heraklion?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "How many children did Benjamin Franklin have?",
        "sparql_query": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dbo:child <http://dbpedia.org/resource/Benjamin_Franklin> }"
    },
    {
        "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
        "sparql_query": "SELECT ?elevation WHERE { dbpedia: D\u00fcsseldorf_Airport <http://dbpedia.org/ontology/elevation> ?elevation . }"
    },
    {
        "natural_language_question": "In which country is Mecca located?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?country WHERE { <http://dbpedia.org/resource/Mecca> dbo:country ?country . FILTER (regex(str(?country), \"http://dbpedia.org/entity/\")) . }"
    },
    {
        "natural_language_question": "How tall is Claudia Schiffer?",
        "sparql_query": "SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> <http://dbpedia.org/ontology/height> ?val }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "PREFIX db: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri db:Holiday ?label }"
    },
    {
        "natural_language_question": "What kind of music did Lou Reed play?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }"
    },
    {
        "natural_language_question": "Give me the birth place of Frank Sinatra.",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which city has the least inhabitants?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:city ?city . ?uri dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by Walt Disney?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:subClassOf* dbo:TelevisionShow ; dbo:creator <http://dbpedia.org/resource/Walt_Disney> . }"
    },
    {
        "natural_language_question": "Give me all Swedish holidays.",
        "sparql_query": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX db: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbpedia:Holiday ?holiday . ?uri dbpedia:country db:Sweden }"
    },
    {
        "natural_language_question": "What is the net income of Apple?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/netIncome> <http://dbpedia.org/resource/Apple_Inc/> }"
    },
    {
        "natural_language_question": "Where did Abraham Lincoln die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Abraham_Lincoln> }"
    },
    {
        "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql_query": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri . }"
    },
    {
        "natural_language_question": "In which country is the Limerick Lake?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "How tall is Michael Jordan?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> . }"
    },
    {
        "natural_language_question": "In which countries can you pay using the West African CFA franc?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
    },
    {
        "natural_language_question": "how much is the population Iraq?",
        "sparql_query": "SELECT ?val WHERE { <http://dbpedia.org/resource/Iraq> <http://dbpedia.org/ontology/populationTotal> ?val . }"
    },
    {
        "natural_language_question": "Which holidays are celebrated around the world?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which Greek parties are pro-European?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:PoliticalParty true . ?uri dbo:country <http://dbpedia.org/resource/Greece> . ?uri dbo:ideology <http://dbpedia.org/resource/Pro-Europeanism> . }"
    },
    {
        "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql_query": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor . ?actor <http://dbpedia.org/ontology/birthDate> ?date . }"
    },
    {
        "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Which actors were born in Germany?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . ?uri <http://dbpedia.org/ontology/Actor> ?type . FILTER (?type IN ( ?uri ) ) }"
    },
    {
        "natural_language_question": "Who designed the Brooklyn Bridge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Brooklyn_Bridge> }"
    },
    {
        "natural_language_question": "Who wrote the Game of Thrones theme?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Game_of_Thrones> }"
    },
    {
        "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Francis_Ford_Coppola> . }"
    },
    {
        "natural_language_question": "What is the birth name of Adele?",
        "sparql_query": "SELECT ?name WHERE { <http://dbpedia.org/resource/Adele> <http://dbpedia.org/ontology/birthName> ?name . }"
    },
    {
        "natural_language_question": "What was the first Queen album?",
        "sparql_query": "SELECT ?uri WHERE { ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Queen_(band)> . ?album <http://dbpedia.org/ontology/releaseDate> ?date } ORDER BY ?date LIMIT 1"
    },
    {
        "natural_language_question": "What is the currency of the Czech Republic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . }"
    },
    {
        "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql_query": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE { ?uri wdt:P19/wdt:P131* wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20 wd:Q64 . }} UNION { ?uri wdt:P20/wdt:P131* wd:Q64 . { SELECT ?uri WHERE { ?uri wdt:P19 wd:Q1741 . }} } UNION { ?uri wdt:P19/wdt:P131+ wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20/wdt:P131+ wd:Q64 . }} }"
    },
    {
        "natural_language_question": "Which bridges cross the Seine?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/properties/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns SELECT DISTINCT ?uri WHERE { ?uri dbo:Bridges dbp:crosses <http://dbpedia.org/resource/Seine> . }"
    },
    {
        "natural_language_question": "Which musician wrote the most books?",
        "sparql_query": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?book) AS ?c) WHERE { ?musician dbo:occupation ?uri . ?book dbo:author ?musician ; dbo:book ?book . } GROUP BY ?musician ORDER BY DESC(?c) LIMIT 1"
    },
    {
        "natural_language_question": "Which television shows were created by John Cleese?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Writer> ?writer ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> . }"
    },
    {
        "natural_language_question": "Who discovered Ceres?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri }"
    },
    {
        "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/BasketballPlayer> <http://dbpedia.org/resource/BasketballPlayer> . ?uri <http://dbpedia.org/ontology/height> ?height . FILTER(?height > 200)}"
    },
    {
        "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "What is the capital of Canada?",
        "sparql_query": "SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }"
    },
    {
        "natural_language_question": "Which soccer players were born on Malta?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> . }"
    },
    {
        "natural_language_question": "What is the capital of Cameroon?",
        "sparql_query": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Cameroon> }"
    },
    {
        "natural_language_question": "How many programming languages are there?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub dbpedia-owl:ProgrammingLanguage ?sub ; rdf:type dbpedia-owl:ProgrammingLanguage. }"
    },
    {
        "natural_language_question": "Give me all cosmonauts.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Astronaut> <http://dbpedia.org/resource/Cosmonaut> . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> } }"
    },
    {
        "natural_language_question": "Who created Family Guy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Family_Guy> }"
    },
    {
        "natural_language_question": "How much is the population of mexico city ?",
        "sparql_query": "SELECT ?population WHERE { ?uri <http://dbpedia.org/ontology/populationTotal> <http://dbpedia.org/resource/Mexico_City> . BIND(?population AS ?ans) }"
    },
    {
        "natural_language_question": "Who created Batman?",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman> dbo:creator ?uri . }"
    },
    {
        "natural_language_question": "How many people live in the capital of Australia?",
        "sparql_query": "' and '"
    },
    {
        "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
        "sparql_query": "SELECT ?val WHERE { ?uri <http://dbpedia.org/ontology/areaTotal> ?val . FILTER (regex(str(?uri), 'North_Rhine-Westphalia')) }"
    },
    {
        "natural_language_question": "How many employees does IBM have?",
        "sparql_query": "` and `"
    },
    {
        "natural_language_question": "How much did Pulp Fiction cost?",
        "sparql_query": "SELECT ?value WHERE { <http://dbpedia.org/resource/Pulp_Fiction> <http://dbpedia.org/ontology/budget> ?value . }"
    },
    {
        "natural_language_question": "What movies does Jesse Eisenberg play in?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Film> <http://dbpedia.org/resource/Jesse_Eisenberg> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> . }"
    },
    {
        "natural_language_question": "Give me all Danish movies.",
        "sparql_query": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbpedia: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:country dbpedia:Denmark . ?uri a dbo:Film . }"
    },
    {
        "natural_language_question": "To which countries does the Himalayan mountain system extend?",
        "sparql_query": "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { dbpedia-owl:Himalayas dbpedia-owl:country ?uri . }"
    },
    {
        "natural_language_question": "What is the largest country in the world?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/ontology/areaTotal> ?area . FILTER (?area > 0) } ORDER BY DESC(?area) LIMIT 1"
    },
    {
        "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
        "sparql_query": "SELECT ?res WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/almaMater> ?res . }"
    },
    {
        "natural_language_question": "Who created Goofy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri }"
    }
]