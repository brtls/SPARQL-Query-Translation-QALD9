[
    {
        "context": {
            "natural_language_question": "Who is the founder of Penguin Books?",
            "sparql_query_kg1": "SELECT ?o1 WHERE { <http://www.wikidata.org/entity/Q1336200>  <http://www.wikidata.org/prop/direct/P112>  ?o1 .  }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Penguin_Books",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1336200"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/founder",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P112"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we need to produce a SPARQL query for DBpedia to find the founder of Penguin Books. We can use the mappings provided to translate the Wikidata query into a DBpedia query.\n\nHere is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?o1 WHERE {\n  <http://dbpedia.org/resource/Penguin_Books> dbo:founder ?o1 .\n}\n```\n\nThis query will retrieve the founder of Penguin Books from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Which films did Stanley Kubrick direct?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q2001>}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/director",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P57"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Stanley_Kubrick",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2001"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find the films directed by Stanley Kubrick, we can use the given entity and relation mapping. Here is the complete SPARQL query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:director res:Stanley_Kubrick .\n}\n```\n\nThis query selects distinct URIs (`?uri`) of films that have Stanley Kubrick as their director, using the DBpedia ontology and resource identifiers."
    },
    {
        "context": {
            "natural_language_question": "List all the musicals with music by Elton John.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q58483083 ; wdt:P86 wd:Q2808 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Musical",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2743"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/musicBy",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P86"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Elton_John",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2808"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for Knowledge Graph 2 (DBpedia) to list all musicals with music by Elton John:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Musical ;\n       dbo:musicBy res:Elton_John .\n}\n```\n\nThis query selects distinct URIs of musicals that have Elton John as the composer of the music. The `dbo:musicBy` property is used to link the musicals to Elton John."
    },
    {
        "context": {
            "natural_language_question": "Who developed Skype?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { wd:Q40984 wdt:P178 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Skype",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q40984"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/developer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P178"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information and the mapping between Wikidata and DBpedia, here is the corresponding SPARQL query for DBpedia to find out who developed Skype:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?uri WHERE {\n  res:Skype dbo:developer ?uri .\n}\n```\n\nThis query uses the DBpedia ontology to find the developer of Skype, which is mapped from the Wikidata property `P178` (developer) to the DBpedia property `dbo:developer`. The resource `res:Skype` corresponds to the Wikidata entity `Q40984`."
    },
    {
        "context": {
            "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q476028 ; wdt:P118 wd:Q82595 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/SoccerClub",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q476028"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/league",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P118"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Bundesliga",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q82595"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mappings, here is the corresponding SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:league res:Bundesliga .\n}\n```\n\nThis query retrieves a list of soccer clubs that play in the Bundesliga from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?movie wdt:P31 wd:Q11424 ; wdt:P57 wd:Q16297  ; wdt:P161 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/director",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P57"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/William_Shatner",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q16297"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, you need to create a SPARQL query for DBpedia to find all actors starring in movies directed by William Shatner. Based on the entity and relation mapping, the corresponding DBpedia properties and resources can be identified.\n\nHere is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?movie dbo:director res:William_Shatner ;\n         dbo:starring ?uri .\n}\n```\n\nThis query selects distinct actors (`?uri`) who starred in movies (`?movie`) directed by William Shatner."
    },
    {
        "context": {
            "natural_language_question": "What is the highest mountain?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Mountain",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8502"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/elevation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2044"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, let's translate the SPARQL query for Wikidata to DBpedia based on the given entity and relation mappings.\n\nGiven the SPARQL query for Wikidata:\n```sparql\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri wdt:P31 wd:Q8502 ;\n        wdt:P2044 ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1\n```\n\nAnd the entity and relation mappings:\n```json\n[\n  {\n    \"dbpedia_id\": \"http://dbpedia.org/ontology/Mountain\",\n    \"wikidata_ids\": [\n      \"http://www.wikidata.org/entity/Q8502\"\n    ]\n  },\n  {\n    \"dbpedia_id\": \"http://dbpedia.org/ontology/elevation\",\n    \"wikidata_ids\": [\n      \"http://www.wikidata.org/entity/P2044\"\n    ]\n  }\n]\n```\n\nLet's construct the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Mountain ;\n       dbo:elevation ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1\n```\n\nSo, the final, complete SPARQL query for DBpedia is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Mountain ;\n       dbo:elevation ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1\n```"
    },
    {
        "context": {
            "natural_language_question": "How many films did Leonardo DiCaprio star in?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri wdt:P31 wd:Q11424 ; wdt:P161 wd:Q38111 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Leonardo_DiCaprio",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q38111"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Certainly! Based on the provided context and entity-relation mapping, here is the SPARQL query for DBpedia to find out how many films Leonardo DiCaprio starred in:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE {\n  ?uri dbo:starring res:Leonardo_DiCaprio .\n}\n```\n\nThis query uses the DBpedia ontology and resource prefixes to count the distinct films in which Leonardo DiCaprio starred."
    },
    {
        "context": {
            "natural_language_question": "When was Olof Palme shot?",
            "sparql_query_kg1": "SELECT DISTINCT ?date WHERE {  <http://www.wikidata.org/entity/Q53713> <http://www.wikidata.org/prop/P570> ?date }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Olof_Palme",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q53713"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P570"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for DBpedia to find the date when Olof Palme was shot:\n\n```sparql\n<sparql>\nSELECT DISTINCT ?date WHERE {\n  <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date\n}\n</sparql>\n```\n\nThis query retrieves the death date of Olof Palme from the DBpedia knowledge graph using the provided entity and relation mappings."
    },
    {
        "context": {
            "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q34851> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q151973> . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Elizabeth_Taylor",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q34851"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Richard_Burton",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q151973"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and mappings provided, here is the SPARQL query for DBpedia to find movies that star both Liz Taylor and Richard Burton:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:starring res:Elizabeth_Taylor .\n  ?uri dbo:starring res:Richard_Burton .\n}\n```\n\nThe query uses the `dbo:starring` property to find movies that have both Elizabeth Taylor and Richard Burton as actors."
    },
    {
        "context": {
            "natural_language_question": "Who developed Minecraft?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q49740 wdt:P178 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Minecraft",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q49740"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/developer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P178"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find out who developed Minecraft, you can use the following query. This query leverages the provided entity and relation mapping to translate the Wikidata query into a DBpedia query.\n\nHere is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Minecraft dbo:developer ?uri .\n}\n```\n\nThis query selects the distinct URIs (?uri) of the developers of Minecraft by utilizing the DBpedia ontology and resource mappings provided."
    },
    {
        "context": {
            "natural_language_question": "How much did the Lego Movie cost?",
            "sparql_query_kg1": "SELECT DISTINCT ?val WHERE {  <http://www.wikidata.org/entity/Q2608065> <http://www.wikidata.org/prop/direct/P2130> ?val }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/The_Lego_Movie",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2608065"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/budget",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2769"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to get the budget of \"The Lego Movie,\" we need to use the entity and relation mapping provided. Here is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  <http://dbpedia.org/resource/The_Lego_Movie> dbo:budget ?val\n}\n```\n\nThis query retrieves the budget value for \"The Lego Movie\" from DBpedia using the specified resource and property."
    },
    {
        "context": {
            "natural_language_question": "For which label did Elvis record his first album?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?label WHERE { wd:Q59150527 wdt:P527 ?uri . ?uri wdt:P577 ?date . ?uri wdt:P264 ?label . } ORDER BY ?date LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Album",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q482994"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/artist",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P175"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Elvis_Presley",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q303"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/releaseDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P577"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/recordLabel",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P264"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To generate a SPARQL query for DBpedia based on the given natural language question and the provided SPARQL query for Wikidata, we need to map the Wikidata properties and entities to their corresponding DBpedia counterparts.\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?label WHERE {\n  res:Elvis_Presley dbo:artist ?uri .\n  ?uri dbo:releaseDate ?date .\n  ?uri dbo:recordLabel ?label .\n} ORDER BY ?date LIMIT 1\n```\n\nExplanation:\n- The entity `Elvis_Presley` in DBpedia is represented by `res:Elvis_Presley`.\n- The property `artist` in DBpedia is represented by `dbo:artist`.\n- The property `releaseDate` in DBpedia is represented by `dbo:releaseDate`.\n- The property `recordLabel` in DBpedia is represented by `dbo:recordLabel`.\n\nThis query selects the distinct label of the record label for Elvis Presley's first album, ordered by the release date and limited to the first result."
    },
    {
        "context": {
            "natural_language_question": "Give me the runtime of Toy Story.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?val WHERE { wd:Q171048 wdt:P2047 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Toy_Story",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q171048"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/runtime",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2047"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided context and mappings, here is the SPARQL query for DBpedia to get the runtime of Toy Story:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?val WHERE {\n  res:Toy_Story dbo:runtime ?val .\n}\n```\n\nThis query will retrieve the runtime of Toy Story from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q158852 ; wdt:P1303 wd:Q8338 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/occupation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P106"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Bandleader",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5280538",
                        "http://www.wikidata.org/entity/Q806349"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/instrument",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1303"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Trumpet",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8338"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for KG2 (DBpedia) to find all trumpet players that were bandleaders, you need to use the mappings from Wikidata to DBpedia provided in the Entity and Relation Mapping (ER2).\n\nGiven the mappings:\n- `http://www.wikidata.org/entity/P106` maps to `http://dbpedia.org/ontology/occupation`\n- `http://www.wikidata.org/entity/Q158852` (Trumpet player) maps to `http://dbpedia.org/resource/Trumpet`\n- `http://www.wikidata.org/entity/P1303` (Instrument) maps to `http://dbpedia.org/ontology/instrument`\n- `http://www.wikidata.org/entity/Q5280538` (Bandleader) and `http://www.wikidata.org/entity/Q806349` map to `http://dbpedia.org/resource/Bandleader`\n\nHere's the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:occupation res:Bandleader ;\n       dbo:instrument res:Trumpet .\n}\n```\n\nThis query selects distinct URIs of individuals who are both bandleaders and trumpet players according to DBpedia."
    },
    {
        "context": {
            "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P57> <http://www.wikidata.org/entity/Q315087> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . } ",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Julia_Roberts",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q40523"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/director",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P57"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Garry_Marshall",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q315087"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia based on the provided context, you need to map the Wikidata properties and entities to their corresponding DBpedia properties and entities. Using the given mappings, you can create the following SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Film .\n  ?uri dbo:starring res:Julia_Roberts .\n  ?uri dbo:director res:Garry_Marshall .\n}\n```\n\nThis query selects distinct URIs for films that are of type `Film`, star Julia Roberts, and are directed by Garry Marshall. The mappings from Wikidata to DBpedia are used to translate the properties and entities appropriately."
    },
    {
        "context": {
            "natural_language_question": "In which year was Rachel Stevens born?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?year WHERE { wd:Q241665 wdt:P569 ?date . BIND(YEAR(?date) as ?year) }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Rachel_Stevens",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q241665"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthYear",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P569"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information above, the SPARQL query for KG2 (DBpedia) to find the year Rachel Stevens was born would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?year WHERE {\n  res:Rachel_Stevens dbo:birthYear ?year .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the most frequent cause of death?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?s wdt:P509 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathCause",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P509"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the entity and relation mapping provided, the most frequent cause of death can be queried in DBpedia using the equivalent property for the cause of death. Here\u2019s the completed SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?uri\nWHERE {\n  ?s dbo:deathCause ?uri .\n}\nGROUP BY ?uri\nORDER BY DESC(COUNT(DISTINCT ?s))\nLIMIT 1\n```\n\nThis query selects the most frequent cause of death by counting the distinct subjects (people) associated with each cause of death and ordering them in descending order, then limiting the result to the top cause."
    },
    {
        "context": {
            "natural_language_question": "How high is the Yokohama Marine Tower?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?num WHERE { wd:Q1207989 wdt:P2048 ?num . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Yokohama_Marine_Tower",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1207989"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/height",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2048"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the entity and relation mapping, the SPARQL query for KG2 (DBpedia) to find the height of the Yokohama Marine Tower can be constructed as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?num WHERE {\n  res:Yokohama_Marine_Tower dbo:height ?num .\n}\n```\n\nSo, the final, complete SPARQL query for KG2 is:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?num WHERE {\n  res:Yokohama_Marine_Tower dbo:height ?num .\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "What is the highest mountain in Italy?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q8502 ; wdt:P17 wd:Q38 ; wdt:P2044 ?elevation . } ORDER BY DESC(?elevation) LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Mountain",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8502"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/locatedInArea",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P131"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Italy",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q38"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/elevation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2044"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for DBpedia to find the highest mountain in Italy:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:locatedInArea res:Italy ;\n        dbo:elevation ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1\n```\n\nThis query selects the distinct URI of the mountain located in Italy and orders the results by elevation in descending order, limiting the result to the highest mountain."
    },
    {
        "context": {
            "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?uri}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Albert_Einstein",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q937"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/doctoralAdvisor",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P184"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, here is the SPARQL query for DBpedia to find the doctoral supervisor of Albert Einstein:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Albert_Einstein dbo:doctoralAdvisor ?uri\n}\n```\n\nThis query uses the DBpedia ontology (dbo) and resource (res) prefixes to find the doctoral advisor of Albert Einstein."
    },
    {
        "context": {
            "natural_language_question": "What is Donald Trump's main business?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P488 wd:Q22686 ; wdt:P31/wdt:P279* wd:Q4830453 . MINUS { ?uri wdt:P576 ?closed } }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/owner",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P127"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Donald_Trump",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q22686"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that finds Donald Trump's main business, we need to map the entities and properties from Wikidata to DBpedia using the provided Entity and Relation Mapping (ER2).\n\nThe Wikidata query looks for businesses owned by Donald Trump (`wd:Q22686`) that are of a type related to business (`wd:Q4830453`). We need to translate this to DBpedia using the provided mappings.\n\nThe mappings we have are:\n- `http://dbpedia.org/ontology/owner` maps to `http://www.wikidata.org/entity/P127`\n- `http://dbpedia.org/resource/Donald_Trump` maps to `http://www.wikidata.org/entity/Q22686`\n\nGiven this information, we can write the DBpedia SPARQL query as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:owner res:Donald_Trump ;\n       rdf:type dbo:Organisation .\n}\n```\n\nHere's the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:owner res:Donald_Trump ;\n       rdf:type dbo:Organisation .\n}\n```\n\nThis query selects distinct URIs (`?uri`) that are owned by Donald Trump (`res:Donald_Trump`) and are of the type `dbo:Organisation`."
    },
    {
        "context": {
            "natural_language_question": "Who has Tom Cruise been married to?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?o1 WHERE { wd:Q37079 wdt:P26 ?o1 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/spouse",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P26"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Tom_Cruise",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q37079"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, here is the SPARQL query for DBpedia to find out who Tom Cruise has been married to:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?o1 WHERE {\n  res:Tom_Cruise dbo:spouse ?o1 .\n}\n```\n\nSo, the final SPARQL query for KG2 (DBpedia) is:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?o1 WHERE {\n  res:Tom_Cruise dbo:spouse ?o1 .\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "How many people live in Eurasia?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q5401 wdt:P1082 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Eurasia",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5401"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information and the context provided, here is the SPARQL query for DBpedia to find the population of Eurasia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:Eurasia dbo:populationTotal ?val .\n}\n```\n\nThis query uses the `dbo:populationTotal` property to retrieve the population value for the entity `res:Eurasia`."
    },
    {
        "context": {
            "natural_language_question": "Who is the author of the interpretation of dreams?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q726382 wdt:P50 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/The_Interpretation_of_Dreams",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q726382"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/author",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P50"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we need to create a SPARQL query for DBpedia to find the author of \"The Interpretation of Dreams.\" The equivalent DBpedia properties and resources are provided in the entity and relation mapping.\n\nThe Wikidata SPARQL query is:\n```\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nSELECT DISTINCT ?uri WHERE { wd:Q726382 wdt:P50 ?uri . }\n```\n\nUsing the mapping provided:\n- Wikidata Entity `Q726382` corresponds to DBpedia resource `http://dbpedia.org/resource/The_Interpretation_of_Dreams`.\n- Wikidata Property `P50` corresponds to DBpedia property `http://dbpedia.org/ontology/author`.\n\nWe can construct the DBpedia SPARQL query as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  res:The_Interpretation_of_Dreams dbo:author ?uri .\n}\n```\n\nSo, the final, complete SPARQL query for DBpedia is:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  res:The_Interpretation_of_Dreams dbo:author ?uri .\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "When was John Adams born?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q11806 wdt:P569 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/John_Adams",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11806"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P569"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia based on the given information, we need to map the Wikidata properties and entities to their corresponding DBpedia counterparts.\n\nGiven:\n- Wikidata Entity: `http://www.wikidata.org/entity/Q11806`\n- Wikidata Property: `http://www.wikidata.org/entity/P569`\n- DBpedia Entity: `http://dbpedia.org/resource/John_Adams`\n- DBpedia Property: `http://dbpedia.org/ontology/birthDate`\n\nThe equivalent SPARQL query for DBpedia would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:John_Adams dbo:birthDate ?val .\n}\n```\n\nThis query selects the distinct birth date of John Adams from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "how much is the total population of european union?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q458 wdt:P1082 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/European_Union",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q458"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To find the total population of the European Union using the DBpedia knowledge graph, you can use the mappings provided in the Entity and Relation Mapping (ER2). The Wikidata query provided can be translated to a DBpedia query as follows:\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:European_Union dbo:populationTotal ?uri .\n}\n```\n\nThis query retrieves the population total (`dbo:populationTotal`) for the European Union (`res:European_Union`) from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me the currency of China.",
            "sparql_query_kg1": "SELECT ?o1 WHERE {   <http://www.wikidata.org/entity/Q148>  <http://www.wikidata.org/prop/direct/P38>  ?o1 .  } ",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/China",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q148"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/currency",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P38"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information above, here is the SPARQL query for KG2 (DBpedia):\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?o1 WHERE {\n  <http://dbpedia.org/resource/China> dbo:currency ?o1 .\n}\n```\n\n</sparql>\n\nThis query retrieves the currency of China from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "When was the death of Shakespeare?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q692 wdt:P570 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/William_Shakespeare",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q692"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P570"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we need to produce a SPARQL query for DBpedia to retrieve the death date of William Shakespeare. Using the mappings provided, we can translate the Wikidata query to a DBpedia query.\n\nHere is the final, complete SPARQL query for KG2 (DBpedia):\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:William_Shakespeare dbo:deathDate ?uri .\n}\n```\n\nThis query retrieves the death date of William Shakespeare from DBpedia, using the appropriate prefixes and properties as mapped from Wikidata."
    },
    {
        "context": {
            "natural_language_question": "Which rockets were launched from Baikonur?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P279* wd:Q41291 . ?uri wdt:P1427 wd:Q177477  . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Rocket",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q41291"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/launchSite",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P448"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Baikonur_Cosmodrome",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q177477"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves the rockets launched from Baikonur Cosmodrome, we can use the entity and relation mappings provided.\n\nHere is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:launchSite res:Baikonur_Cosmodrome .\n}\n```\n\nThis query selects distinct URIs of rockets that have the `dbo:launchSite` property set to `res:Baikonur_Cosmodrome`."
    },
    {
        "context": {
            "natural_language_question": "Give me all islands that belong to Japan.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q23442 ; wdt:P17 wd:Q17 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Island",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q23442"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Japan",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q17"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for DBpedia to retrieve all islands that belong to Japan:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:Island res:Japan .\n}\n```\n\nThis query maps the Wikidata entities and relations to their corresponding DBpedia entities and relations based on the provided entity and relation mapping."
    },
    {
        "context": {
            "natural_language_question": "Who developed the video game World of Warcraft?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q131007 wdt:P178 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/World_of_Warcraft",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q131007"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/developer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P178"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, the goal is to produce a SPARQL query for DBpedia to find out who developed the video game \"World of Warcraft\". Based on the mappings and the context, we can construct the following SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:World_of_Warcraft dbo:developer ?uri .\n}\n```\n\nThis query selects distinct URIs (?uri) where the resource \"World_of_Warcraft\" has the developer (dbo:developer) relationship with the URI."
    },
    {
        "context": {
            "natural_language_question": "Give me all companies in the advertising industry.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q4830453 ; wdt:P452 wd:Q39809 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Company",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q4830453"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/industry",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P452"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Advertising",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q39809"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " ```\nGiven the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'.\n\nBased on the provided context and entity/relation mapping, here is the SPARQL query for DBpedia to get all companies in the advertising industry:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Company .\n  ?uri dbo:industry res:Advertising .\n}\n</sparql>\n```"
    },
    {
        "context": {
            "natural_language_question": "Which university did Angela Merkel attend?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { VALUES ?types { wd:Q3918 wd:Q875538 } wd:Q567 wdt:P69 ?uri . ?uri wdt:P31 ?types . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Angela_Merkel",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q567"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/almaMater",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P69"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find which university Angela Merkel attended, we need to map the Wikidata properties and entities to their corresponding DBpedia properties and resources using the provided Entity and Relation Mapping (ER2).\n\nGiven:\n- Angela Merkel's Wikidata ID is `wd:Q567` which maps to `http://dbpedia.org/resource/Angela_Merkel`.\n- The `P69` property in Wikidata maps to `http://dbpedia.org/ontology/almaMater`.\n\nUsing these mappings, the DBpedia query will look for the `almaMater` of Angela Merkel.\n\nHere is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Angela_Merkel dbo:almaMater ?uri .\n}\n```\n\nSo, the final, complete SPARQL query within the tags is:\n\n```<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Angela_Merkel dbo:almaMater ?uri .\n}\n</sparql>```"
    },
    {
        "context": {
            "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?type wdt:P279* wd:Q15416 . ?uri wdt:P161 wd:Q485310 . ?uri wdt:P31 ?type . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/TelevisionShow",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q15416"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Neil_Patrick_Harris",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q485310"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mappings provided, here's the SPARQL query for DBpedia to retrieve all TV shows with Neil Patrick Harris:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:TelevisionShow .\n  ?uri dbo:starring res:Neil_Patrick_Harris .\n}\n```\n\nThis query will retrieve all unique TV show entities (`?uri`) that are of type `dbo:TelevisionShow` and have Neil Patrick Harris (`res:Neil_Patrick_Harris`) as one of the stars."
    },
    {
        "context": {
            "natural_language_question": "Give me all movies with Tom Cruise.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P161 wd:Q37079. }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Tom_Cruise",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q37079"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, given the context and the mappings provided, here's the SPARQL query for DBpedia to get all movies with Tom Cruise:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:starring res:Tom_Cruise.\n}\n```\n\nThis query uses the DBpedia ontology and resources to find all films (`?uri`) where Tom Cruise is listed as a starring actor."
    },
    {
        "context": {
            "natural_language_question": "What country is Mount Everest in?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q513 wdt:P17 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Mount_Everest",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q513"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/locatedInArea",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P131"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q6256"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " ```\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  res:Mount_Everest dbo:locatedInArea ?uri .\n  ?uri rdf:type dbo:Country .\n}\n</sparql>\n```"
    },
    {
        "context": {
            "natural_language_question": "Where was JFK assassinated?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q9696 wdt:P20 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/John_F._Kennedy",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q9696"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P20"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To translate the given SPARQL query for Wikidata to DBpedia, we need to map the Wikidata entities and relations to their respective DBpedia counterparts.\n\nGiven the context:\n- Wikidata entity for John F. Kennedy: `wd:Q9696`\n- Wikidata property for place of death: `wdt:P20`\n- Mapping for DBpedia:\n  - John F. Kennedy: `http://dbpedia.org/resource/John_F._Kennedy`\n  - Place of death: `http://dbpedia.org/ontology/deathPlace`\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:John_F._Kennedy dbo:deathPlace ?uri .\n}\n```\n\nSo, the final, complete SPARQL query for DBpedia is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:John_F._Kennedy dbo:deathPlace ?uri .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Which river does the Brooklyn Bridge cross?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q125006> <http://www.wikidata.org/prop/direct/P177> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Brooklyn_Bridge",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q125006"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/crosses",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P177"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, the SPARQL query for DBpedia (KG2) to find out which river the Brooklyn Bridge crosses would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Brooklyn_Bridge dbo:crosses ?uri .\n}\n```\n\nThis query uses the DBpedia ontology and resource prefixes to map the relationship and entity provided in the Wikidata query."
    },
    {
        "context": {
            "natural_language_question": "Give all swimmers that were born in Moscow.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q10843402 ; wdt:P19 wd:Q649 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Swimmer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q10843402"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Moscow",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q649"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Certainly! Given the context and the mappings provided, here is the SPARQL query for DBpedia to find all swimmers that were born in Moscow:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:Swimmer res:Swimmer ;\n       dbo:birthPlace res:Moscow .\n}\n```\n\nThis query uses the provided entity and relation mappings to translate the Wikidata query into a DBpedia query."
    },
    {
        "context": {
            "natural_language_question": "What was the last movie with Alec Guinness?",
            "sparql_query_kg1": "SELECT DISTINCT ?s1 WHERE { ?s1  <http://www.wikidata.org/prop/direct/P31>  <http://www.wikidata.org/entity/Q11424> . ?s1  <http://www.wikidata.org/prop/direct/P161>  <http://www.wikidata.org/entity/Q103894> . ?s1 <http://www.wikidata.org/prop/direct/P577> ?o1 . }  order by DESC(?o1)  limit 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Alec_Guinness",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q103894"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/releaseDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P577"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, based on the provided context and mappings, here is the SPARQL query for DBpedia to find the last movie with Alec Guinness:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?movie WHERE {\n  ?movie dbo:starring res:Alec_Guinness .\n  ?movie dbo:releaseDate ?releaseDate .\n} ORDER BY DESC(?releaseDate) LIMIT 1\n```\n\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "What is the second highest mountain on Earth?",
            "sparql_query_kg1": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?res WHERE { ?res wdt:P31/wdt:P279* wd:Q8502 . ?res wdt:P2044 ?elevation . ?res wdt:P30/wdt:P361 wd:Q2 . } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Mountain",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8502"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/elevation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2044"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, let's translate the given SPARQL query for Wikidata into a SPARQL query for DBpedia.\n\nThe Wikidata query is:\n```sparql\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nSELECT ?res WHERE {\n  ?res wdt:P31/wdt:P279* wd:Q8502 .\n  ?res wdt:P2044 ?elevation .\n  ?res wdt:P30/wdt:P361 wd:Q2 .\n} ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1\n```\n\nMapping:\n- `wd:Q8502` (mountain) maps to `http://dbpedia.org/ontology/Mountain`\n- `wdt:P2044` (elevation) maps to `http://dbpedia.org/ontology/elevation`\n\nWe need to adjust the query to fit DBpedia's schema. Here is the translated query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nSELECT ?res WHERE {\n  ?res a dbo:Mountain .\n  ?res dbo:elevation ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1\n```\n\nSo, the final SPARQL query for DBpedia is:\n\n```sparql\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nSELECT ?res WHERE {\n  ?res a dbo:Mountain .\n  ?res dbo:elevation ?elevation .\n} ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1\n</sparql>\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the population of Cairo?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q85 wdt:P1082 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Cairo",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q85"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information above, here is the SPARQL query for DBpedia to find the population of Cairo:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:Cairo dbo:populationTotal ?val .\n}\n```\n\nThis query selects the population of Cairo from DBpedia using the `dbo:populationTotal` property mapped from Wikidata's `P1082`."
    },
    {
        "context": {
            "natural_language_question": "Which people were born in Heraklion?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P19 wd:Q160544 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Person",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q215627",
                        "http://www.wikidata.org/entity/Q5"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Heraklion",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q160544"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided context and mappings, here is the SPARQL query for DBpedia to find people born in Heraklion:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?uri WHERE {\n  ?uri rdf:type dbo:Person .\n  ?uri dbo:birthPlace res:Heraklion .\n}\n```\n\nThis query selects all entities (`?uri`) that are of type `dbo:Person` and have `res:Heraklion` as their `dbo:birthPlace`."
    },
    {
        "context": {
            "natural_language_question": "How many children did Benjamin Franklin have?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { wd:Q34969 wdt:P40 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Benjamin_Franklin",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q34969"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/child",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P40"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find out how many children Benjamin Franklin had, you can use the following query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT (COUNT(DISTINCT ?child) AS ?c) WHERE {\n  res:Benjamin_Franklin dbo:child ?child .\n}\n```\n\nThis query counts the distinct children of Benjamin Franklin as listed in the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q58226 wdt:P2044 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/D\u00fcsseldorf_Airport",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q58226"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/elevation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2044"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided context and mapping, here is the SPARQL query for DBpedia to find the elevation of D\u00fcsseldorf Airport:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?elevation WHERE {\n  res:D\u00fcsseldorf_Airport dbo:elevation ?elevation .\n}\n```\n\nThis query uses the `dbo:elevation` property to retrieve the elevation of the D\u00fcsseldorf Airport resource from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "In which country is Mecca located?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?res WHERE { wd:Q5806 wdt:P131+ ?res . ?res wdt:P31 wd:Q6256 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Mecca",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5806"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To create a SPARQL query for DBpedia that finds the country where Mecca is located, you need to use the provided entity and relation mappings. Here is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?country WHERE {\n  res:Mecca dbo:country ?country .\n}\n```\n\nThis query uses the DBpedia resource for Mecca and the DBpedia ontology property for \"country\" to find the country where Mecca is located."
    },
    {
        "context": {
            "natural_language_question": "How tall is Claudia Schiffer?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q76717 wdt:P2048 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Claudia_Schiffer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q76717"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/height",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2048"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To create a SPARQL query for DBpedia to find Claudia Schiffer's height, we need to use the mappings provided and translate the Wikidata query into a DBpedia query. Here's the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:Claudia_Schiffer dbo:height ?val .\n}\n```\n\nThis query retrieves the height of Claudia Schiffer from the DBpedia knowledge graph. The `dbo:height` property is used to get the height value associated with the resource `res:Claudia_Schiffer`."
    },
    {
        "context": {
            "natural_language_question": "Who wrote the book The Pillars of the Earth?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1163227 wdt:P50 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/The_Pillars_of_the_Earth",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1163227"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/author",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P50"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided and the entity and relation mapping, here is the SPARQL query for KG2 (DBpedia) to find the author of the book \"The Pillars of the Earth\":\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:The_Pillars_of_the_Earth dbo:author ?uri .\n}\n```\n\nThis query uses the DBpedia ontology (dbo) and resource (res) prefixes to find the author of the book \"The Pillars of the Earth.\""
    },
    {
        "context": {
            "natural_language_question": "What kind of music did Lou Reed play?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q189080> <http://www.wikidata.org/prop/direct/P136> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Lou_Reed",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q189080"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/genre",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P136"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mapping provided, here is the SPARQL query for DBpedia to find the kind of music Lou Reed played:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  <http://dbpedia.org/resource/Lou_Reed> dbo:genre ?uri .\n}\n```\n\nThis query will retrieve the distinct genres associated with Lou Reed from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me the birth place of Frank Sinatra.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q40912 wdt:P19 ?uri }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Frank_Sinatra",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q40912"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, based on the information provided, the SPARQL query for KG2 (DBpedia) to get the birth place of Frank Sinatra would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Frank_Sinatra dbo:birthPlace ?uri\n}\n```\n\nThis query will retrieve the birth place of Frank Sinatra from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Which city has the least inhabitants?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/>  SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q515 ; wdt:P1082 ?population . } ORDER BY ?population LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/City",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q515"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To generate the SPARQL query for DBpedia based on the given context and mappings, we need to translate the Wikidata query into a DBpedia query. The Wikidata query selects the city with the least inhabitants using the properties for cities and population. Here is the corresponding DBpedia query:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:City ;\n       dbo:populationTotal ?population .\n} ORDER BY ?population LIMIT 1\n```\n\nThis query selects cities (`dbo:City`) and orders them by their population (`dbo:populationTotal`) in ascending order, limiting the result to the city with the least population."
    },
    {
        "context": {
            "natural_language_question": "Which television shows were created by Walt Disney?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q7725310 ; wdt:P170 wd:Q8704 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/TelevisionShow",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q15416"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/creator",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P170"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Walt_Disney",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8704"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we can create a SPARQL query for DBpedia to find television shows created by Walt Disney. Based on the entity and relation mappings, we need to use the corresponding DBpedia properties and resources.\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:TelevisionShow ;\n       dbo:creator res:Walt_Disney .\n}\n```\n\nThis query selects distinct URIs of television shows that have a type of `dbo:TelevisionShow` and were created by `res:Walt_Disney`."
    },
    {
        "context": {
            "natural_language_question": "Give me all Swedish holidays.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P31 wd:Q1401522 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Holiday",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1445650"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Sweden",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q34"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to retrieve all Swedish holidays based on the given information, we can map the entities and relations from Wikidata to DBpedia. The provided SPARQL query for Wikidata and the entity mappings give us the necessary details to construct the query for DBpedia.\n\nHere is the final SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?uri WHERE {\n  ?uri dbo:country res:Sweden .\n  ?uri rdf:type dbo:Holiday .\n}\n```\n\nThis query selects all URIs that are of type `dbo:Holiday` and have a country property pointing to `res:Sweden`."
    },
    {
        "context": {
            "natural_language_question": "What is the net income of Apple?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q312 wdt:P2295 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Apple_Inc.",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q312"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/netIncome",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2295"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, here is the SPARQL query for KG2 (DBpedia) to get the net income of Apple:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Apple_Inc. dbo:netIncome ?uri .\n}\n```\n\nThis query uses the DBpedia resource for Apple Inc. and the DBpedia ontology property for netIncome to retrieve the desired information."
    },
    {
        "context": {
            "natural_language_question": "Where did Abraham Lincoln die?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q91 wdt:P20 ?uri } ",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Abraham_Lincoln",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q91"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P20"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, we need to translate the SPARQL query for Wikidata to a corresponding query for DBpedia. The Wikidata query retrieves the death place of Abraham Lincoln. Given the entity and relation mappings, we can construct the equivalent SPARQL query for DBpedia.\n\nHere is the translated SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Abraham_Lincoln dbo:deathPlace ?uri\n}\n```\n\nThis query uses the DBpedia ontology to find the death place of Abraham Lincoln."
    },
    {
        "context": {
            "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?country . ?country wdt:P36 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Himalayas",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5451"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/capital",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P36"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the given context, we need to translate the SPARQL query from Wikidata to DBpedia to find the capitals of all countries that the Himalayas run through. Here is the translated SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Himalayas dbo:country ?country .\n  ?country dbo:capital ?uri .\n}\n```\n\nThis query selects the distinct URIs of the capitals (`?uri`) of the countries (`?country`) that the Himalayas run through. The query uses the prefixes `dbo` for DBpedia ontology and `res` for DBpedia resources."
    },
    {
        "context": {
            "natural_language_question": "In which country is the Limerick Lake?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q6386177> <http://www.wikidata.org/prop/direct/P17> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Limerick_Lake",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q6386177"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the provided mappings, we need to construct a SPARQL query for DBpedia to find the country of the Limerick Lake. The Wikidata query provided is:\n\n```sparql\nSELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q6386177> <http://www.wikidata.org/prop/direct/P17> ?uri . }\n```\n\nUsing the Entity and Relation Mapping (ER2):\n\n```json\n[\n  {\n    \"dbpedia_id\": \"http://dbpedia.org/resource/Limerick_Lake\",\n    \"wikidata_ids\": [\n      \"http://www.wikidata.org/entity/Q6386177\"\n    ]\n  },\n  {\n    \"dbpedia_id\": \"http://dbpedia.org/ontology/country\",\n    \"wikidata_ids\": [\n      \"http://www.wikidata.org/entity/P17\"\n    ]\n  }\n]\n```\n\nWe can map the Wikidata entities and properties to their corresponding DBpedia resources and properties. The equivalent DBpedia query would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?uri .\n}\n```\n\nHere is the final, complete SPARQL query for DBpedia:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?uri .\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "How tall is Michael Jordan?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q41421 wdt:P2048 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Michael_Jordan",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q41421"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/height",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2048"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves the height of Michael Jordan, we need to use the provided entity and relation mappings. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:Michael_Jordan dbo:height ?val .\n}\n```\n\nThis query selects the distinct height value (`?val`) for the entity `Michael_Jordan` using the `dbo:height` property."
    },
    {
        "context": {
            "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
            "sparql_query_kg1": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P57 wd:Q43203 ; wdt:P161 wd:Q43203 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/director",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P57"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Clint_Eastwood",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q43203"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves the films starring Clint Eastwood which he directed himself, we need to utilize the entity and relation mappings provided. Based on the mappings, we can translate the Wikidata properties and entities to their DBpedia equivalents.\n\nHere's the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri\nWHERE {\n  ?uri dbo:director res:Clint_Eastwood ;\n       dbo:starring res:Clint_Eastwood .\n}\n```\n\nThis query selects distinct URIs (?uri) where Clint Eastwood is both the director (`dbo:director`) and starring (`dbo:starring`) in the films."
    },
    {
        "context": {
            "natural_language_question": "In which countries can you pay using the West African CFA franc?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P38 wd:Q861690 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/currency",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P38"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/West_African_CFA_franc",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q861690"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and instructions, here is the SPARQL query for DBpedia to find the countries where you can pay using the West African CFA franc:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:currency res:West_African_CFA_franc .\n}\n```\n\nThis query selects distinct URIs of entities that have the West African CFA franc as their currency, according to the DBpedia ontology."
    },
    {
        "context": {
            "natural_language_question": "how much is the population Iraq?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q796 wdt:P1082 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Iraq",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q796"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce the SPARQL query for KG2 (DBpedia) based on the given context, we need to retrieve the population of Iraq. The entity and relation mappings provided indicate that the DBpedia resource for Iraq is \"http://dbpedia.org/resource/Iraq\" and the property for population is \"http://dbpedia.org/ontology/populationTotal\".\n\nHere is the final, complete SPARQL query for KG2 (DBpedia):\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?val WHERE {\n  res:Iraq dbo:populationTotal ?val .\n}\n```\n\nThis query will retrieve the population of Iraq from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Which holidays are celebrated around the world?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q1445650 . ?uri wdt:P31 ?type . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Holiday",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1445650"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mappings between Wikidata and DBpedia, here is the SPARQL query for DBpedia to find which holidays are celebrated around the world:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Holiday .\n}\n```\n\nThis query will retrieve distinct URIs of holidays from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "Which Greek parties are pro-European?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q7278 ; wdt:P17 wd:Q41 ; wdt:P1142 wd:Q3781399 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/PoliticalParty",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q7278"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Greece",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q41"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/ideology",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1142"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Pro-Europeanism",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q3781399"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information and the mapping between Wikidata and DBpedia, the corresponding SPARQL query for DBpedia to find pro-European Greek parties would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:PoliticalParty ;\n       dbo:country res:Greece ;\n       dbo:ideology res:Pro-Europeanism .\n}\n```\n\nThis query selects distinct political parties (`?uri`) that have Greece as their country and pro-Europeanism as their ideology."
    },
    {
        "context": {
            "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
            "sparql_query_kg1": "SELECT DISTINCT ?date WHERE { <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Charmed",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q162371"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P569"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mappings from Wikidata to DBpedia, here is the equivalent SPARQL query for DBpedia to retrieve the birthdays of all actors of the television show \"Charmed\":\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?date WHERE {\n  <http://dbpedia.org/resource/Charmed> dbo:starring ?actor .\n  ?actor dbo:birthDate ?date .\n}\n```\n\nThis query selects the distinct birth dates of actors who starred in the television show \"Charmed\" as per the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q3235867 wdt:P170 ?painter . ?painter wdt:P135 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/The_Three_Dancers",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q3235867"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/author",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P50"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/movement",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P135"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia based on the given context and mappings, we need to map the relevant Wikidata properties to their corresponding DBpedia properties and construct the query accordingly.\n\nGiven the Natural Language Question: \"To which artistic movement did the painter of The Three Dancers belong?\"\n\nThe SPARQL Query for Wikidata is:\n```sparql\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nSELECT DISTINCT ?uri WHERE {\n  wd:Q3235867 wdt:P170 ?painter .\n  ?painter wdt:P135 ?uri .\n}\n```\n\nUsing the Entity and Relation Mapping (ER2), we can map:\n- `wd:Q3235867` (The Three Dancers) to `http://dbpedia.org/resource/The_Three_Dancers`\n- `wdt:P170` (creator) to `http://dbpedia.org/ontology/author`\n- `wdt:P135` (movement) to `http://dbpedia.org/ontology/movement`\n\nHere is the corresponding SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:The_Three_Dancers dbo:author ?painter .\n  ?painter dbo:movement ?uri .\n}\n```\n\nSo, the final complete SPARQL query for DBpedia is:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:The_Three_Dancers dbo:author ?painter .\n  ?painter dbo:movement ?uri .\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "Which actors were born in Germany?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Actor",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q33999"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Germany",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q183"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, here is the SPARQL query for DBpedia to find actors born in Germany:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Actor .\n  { ?uri dbo:birthPlace res:Germany . } UNION\n  { ?uri dbo:birthPlace ?place . ?place dbo:country res:Germany . }\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Who designed the Brooklyn Bridge?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q125006 wdt:P287 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Brooklyn_Bridge",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q125006"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/architect",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P84"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To translate the given SPARQL query for KG1 (Wikidata) into a SPARQL query for KG2 (DBpedia), we need to use the provided entity and relation mappings. The original query in Wikidata asks for the designer of the Brooklyn Bridge.\n\nGiven the mappings:\n- The Brooklyn Bridge in Wikidata is `http://www.wikidata.org/entity/Q125006`.\n- The equivalent in DBpedia is `http://dbpedia.org/resource/Brooklyn_Bridge`.\n- The property for the architect in Wikidata is `http://www.wikidata.org/entity/P84`.\n- The equivalent property in DBpedia is `http://dbpedia.org/ontology/architect`.\n\nBased on this information, the SPARQL query for DBpedia should look for the architect of the Brooklyn Bridge. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Brooklyn_Bridge dbo:architect ?uri .\n}\n```\n\nSo, the final, complete SPARQL query for KG2 (DBpedia) is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Brooklyn_Bridge dbo:architect ?uri .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Who wrote the Game of Thrones theme?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q23572> <http://www.wikidata.org/prop/direct/P86> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Game_of_Thrones",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q23572"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/composer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P86"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mapping provided, here is the SPARQL query for KG2 (DBpedia):\n\n```sparql\nSELECT DISTINCT ?uri WHERE {\n  <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri .\n}\n```\n\nThis query selects the distinct URIs of the composers of the \"Game of Thrones\" theme from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31/wdt:P279* wd:Q11424 ; wdt:P57 wd:Q56094 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/director",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P57"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Francis_Ford_Coppola",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q56094"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for KG2 (DBpedia) that retrieves all movies directed by Francis Ford Coppola, you need to use the entity and relation mappings provided. Here is the final SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Film ;\n       dbo:director res:Francis_Ford_Coppola .\n}\n```\n\nThis query retrieves all distinct URIs of films (`?uri`) that are of type `dbo:Film` and have Francis Ford Coppola as the director (`dbo:director res:Francis_Ford_Coppola`)."
    },
    {
        "context": {
            "natural_language_question": "What is the birth name of Adele?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?name WHERE { wd:Q23215 wdt:P1477 ?name. }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Adele",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q23215"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthName",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1477"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Certainly! Given the information provided, here is the SPARQL query for DBpedia to find the birth name of Adele:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?name WHERE {\n  res:Adele dbo:birthName ?name.\n}\n```\n\nThis query will retrieve the birth name of Adele from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What was the first Queen album?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q482994> . ?uri <http://www.wikidata.org/prop/direct/P175> <http://www.wikidata.org/entity/Q15862> . ?uri <http://www.wikidata.org/prop/direct/P577> ?date } ORDER BY ?date LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Album",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q482994"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/artist",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P175"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Queen_(band)",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q15862"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/releaseDate",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P577"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Sure, here is the SPARQL query for DBpedia based on the provided context and mappings:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Album .\n  ?uri dbo:artist res:Queen_(band) .\n  ?uri dbo:releaseDate ?date\n} ORDER BY ?date LIMIT 1\n```\n\nThis query will retrieve the first album by the band Queen from DBpedia, sorted by the release date."
    },
    {
        "context": {
            "natural_language_question": "What is the currency of the Czech Republic?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q213> <http://www.wikidata.org/prop/direct/P38> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Czech_Republic",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q213"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/currency",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P38"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves the currency of the Czech Republic, you can use the mappings provided in the Entity and Relation Mapping (ER2). The mapped entities and relations will be used to construct the query.\n\nGiven the information:\n- DBpedia entity for the Czech Republic: `http://dbpedia.org/resource/Czech_Republic`\n- DBpedia relation for currency: `http://dbpedia.org/ontology/currency`\n\nThe final SPARQL query for DBpedia would look like this:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Czech_Republic dbo:currency ?uri .\n}\n```\n\nThis query asks for the distinct URIs of the currencies associated with the Czech Republic."
    },
    {
        "context": {
            "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
            "sparql_query_kg1": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?uri WHERE {{ ?uri wdt:P19/wdt:P131* wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20 wd:Q64 . }}} UNION { ?uri wdt:P20/wdt:P131* wd:Q64 . { SELECT ?uri WHERE { ?uri wdt:P19 wd:Q1741 . }}} UNION { ?uri wdt:P19/wdt:P131+ wd:Q1741 . { SELECT ?uri WHERE { ?uri wdt:P20/wdt:P131+ wd:Q64 . }}}}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Vienna",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1741"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/deathPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P20"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Berlin",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q64"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided context and mappings, here is the equivalent SPARQL query for DBpedia to find all people born in Vienna and died in Berlin:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:birthPlace res:Vienna .\n  ?uri dbo:deathPlace res:Berlin .\n}\n```\n\nThis query uses the DBpedia ontology and resources to match the Wikidata query's functionality, selecting distinct URIs of individuals born in Vienna and died in Berlin."
    },
    {
        "context": {
            "natural_language_question": "Which bridges cross the Seine?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q12280 ; wdt:P177 wd:Q1471 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Bridge",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q12280"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/crosses",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P177"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Seine",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1471"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided context and the entity and relation mapping, here is the SPARQL query for DBpedia to find which bridges cross the Seine:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri a dbo:Bridge ;\n       dbo:crosses res:Seine .\n}\n```\n\nThis query uses the DBpedia ontology (`dbo:`) and resource (`res:`) prefixes to match bridges that cross the Seine, based on the mappings provided."
    },
    {
        "context": {
            "natural_language_question": "Which musician wrote the most books?",
            "sparql_query_kg1": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT DISTINCT ?uri  WHERE { ?uri wdt:P106 wd:Q639669 . ?x wdt:P31 wd:Q571 ; wdt:P50 ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(?x)) LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/occupation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P106"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Musician",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q639669"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/author",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P50"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Book",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q571"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that corresponds to the natural language question \"Which musician wrote the most books?\", we can use the given entity and relation mappings. Based on the provided Wikidata query and the mappings, the DBpedia query would look for musicians and their authored books, then order by the count of books authored.\n\nHere is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:occupation res:Musician .\n  ?x a dbo:Book ;\n     dbo:author ?uri .\n} GROUP BY ?uri\nORDER BY DESC(COUNT(?x))\nLIMIT 1\n```\n\nThis query finds musicians who have authored books and orders them by the number of books they have authored, returning the musician with the highest count."
    },
    {
        "context": {
            "natural_language_question": "Which television shows were created by John Cleese?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q5398426>  . { ?uri <http://www.wikidata.org/prop/direct/P170> <http://www.wikidata.org/entity/Q25014> . } UNION { ?uri <http://www.wikidata.org/prop/direct/P170>/<http://www.wikidata.org/prop/direct/P527> <http://www.wikidata.org/entity/Q25014> . }  }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/TelevisionShow",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q15416"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/creator",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P170"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/John_Cleese",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q25014"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for DBpedia to find the television shows created by John Cleese:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:TelevisionShow .\n  ?uri dbo:creator res:John_Cleese .\n}\n```\n\nThis query retrieves distinct television shows (`?uri`) that have the type `TelevisionShow` and were created by John Cleese."
    },
    {
        "context": {
            "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?uri WHERE { ?uri wdt:P106 wd:Q36180 . ?uri wdt:P166 wd:Q37922 . } ",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Writer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q36180"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/award",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P166"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Nobel_Prize_in_Literature",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q37922"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves all writers who won the Nobel Prize in Literature, we can use the mappings provided in the Entity and Relation Mapping (ER2).\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Writer .\n  ?uri dbo:award res:Nobel_Prize_in_Literature .\n}\n```\n\nThis query selects all distinct URIs (?uri) that are of the type `dbo:Writer` and have received the `res:Nobel_Prize_in_Literature` award.\n\nThe final, complete SPARQL query is as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Writer .\n  ?uri dbo:award res:Nobel_Prize_in_Literature .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Who discovered Ceres?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q596> <http://www.wikidata.org/prop/direct/P61> ?uri  . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Ceres_(dwarf_planet)",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q596"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/discoverer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P61"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, you need to translate the SPARQL query from Wikidata to DBpedia to find the discoverer of Ceres. Based on the Entity and Relation Mapping (ER2) provided, the equivalent properties and entities in DBpedia can be used.\n\nHere is the final, complete SPARQL query for DBpedia:\n\n```sparql\n<sparql>\nSELECT DISTINCT ?uri WHERE {\n  <http://dbpedia.org/resource/Ceres_(dwarf_planet)> <http://dbpedia.org/ontology/discoverer> ?uri .\n}\n</sparql>\n```\n\nThis query translates the Wikidata query to retrieve the discoverer of Ceres from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { ?res wdt:P106 wd:Q806349 . ?res wdt:P1303 wd:Q8338 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/occupation",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P106"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Bandleader",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q806349"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/instrument",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1303"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Trumpet",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q8338"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information and the mappings between Wikidata and DBpedia, here is the equivalent SPARQL query for DBpedia to retrieve a list of all bandleaders that play the trumpet:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?res WHERE {\n  ?res dbo:occupation res:Bandleader .\n  ?res dbo:instrument res:Trumpet .\n}\n```\n\nThis query uses the DBpedia ontology to find entities (`?res`) that have the occupation of `Bandleader` and play the instrument `Trumpet`, matching the structure and intent of the original Wikidata query."
    },
    {
        "context": {
            "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q3665646> . ?uri <http://www.wikidata.org/prop/direct/P2048> ?height .  FILTER(?height > 200)}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/BasketballPlayer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q3665646"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/height",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2048"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia (KG2) that retrieves all basketball players taller than 2 meters, we need to map the properties and entities from Wikidata to DBpedia using the provided mappings. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:BasketballPlayer .\n  ?uri dbo:height ?height .\n  FILTER(?height > 200)\n}\n```\n\nExplanation:\n1. We use the `dbo` prefix to refer to the DBpedia ontology.\n2. We select distinct URIs (`?uri`) that are of type `dbo:BasketballPlayer`.\n3. We retrieve the height using the `dbo:height` property.\n4. We filter the results to include only those basketball players whose height is greater than 200 cm.\n\nThis query will return all basketball players from DBpedia who are taller than 2 meters."
    },
    {
        "context": {
            "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q11424> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q48410> . ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q40523> . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Julia_Roberts",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q40523"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Richard_Gere",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q48410"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we need to create a SPARQL query for DBpedia that finds films in which both Julia Roberts and Richard Gere starred. Based on the mappings and the structure of the Wikidata query, here is the equivalent SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type <http://dbpedia.org/ontology/Film> .\n  ?uri dbo:starring <http://dbpedia.org/resource/Julia_Roberts> .\n  ?uri dbo:starring <http://dbpedia.org/resource/Richard_Gere> .\n}\n```\n\nThis query retrieves distinct URIs of films where both Julia Roberts and Richard Gere are listed as starring actors."
    },
    {
        "context": {
            "natural_language_question": "What is the capital of Canada?",
            "sparql_query_kg1": "SELECT DISTINCT ?o1 WHERE { <http://www.wikidata.org/entity/Q16>  <http://www.wikidata.org/prop/direct/P36>  ?o1 .  }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Canada",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q16"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/capital",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P36"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the information provided, we can construct a SPARQL query for DBpedia to find the capital of Canada. Using the mapping information, we know that the `dbpedia_id` for Canada is `http://dbpedia.org/resource/Canada` and the `dbpedia_id` for the capital relation is `http://dbpedia.org/ontology/capital`.\n\nHere is the SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?o1 WHERE {\n  res:Canada dbo:capital ?o1 .\n}\n```\n\nThis query will retrieve the capital of Canada from the DBpedia knowledge graph."
    },
    {
        "context": {
            "natural_language_question": "Which soccer players were born on Malta?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?uri wdt:P106 wd:Q937857 ; wdt:P19 ?birthPlace . ?birthPlace wdt:P17 wd:Q233 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/SoccerPlayer",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q937857"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/birthPlace",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P19"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Malta",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q233"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To generate a SPARQL query for DBpedia to find soccer players born in Malta, we need to use the entity and relation mappings provided. The relevant mappings are:\n\n- `http://dbpedia.org/ontology/SoccerPlayer` for soccer players.\n- `http://dbpedia.org/ontology/birthPlace` for the birthplace.\n- `http://dbpedia.org/resource/Malta` for the country Malta.\n\nGiven these mappings, the SPARQL query for DBpedia would look as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:birthPlace res:Malta .\n  ?uri rdf:type dbo:SoccerPlayer .\n}\n```\n\nThis query selects distinct URIs (`?uri`) representing soccer players (`dbo:SoccerPlayer`) who have a birthplace (`dbo:birthPlace`) matching Malta (`res:Malta`)."
    },
    {
        "context": {
            "natural_language_question": "What is the capital of Cameroon?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q1009> <http://www.wikidata.org/prop/direct/P36> ?uri}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Cameroon",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1009"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/capital",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P36"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia to find the capital of Cameroon, we need to use the corresponding DBpedia properties and entities based on the mapping provided.\n\nGiven the mapping:\n- Cameroon in Wikidata: `http://www.wikidata.org/entity/Q1009`\n- Cameroon in DBpedia: `http://dbpedia.org/resource/Cameroon`\n- Capital relation in Wikidata: `http://www.wikidata.org/entity/P36`\n- Capital relation in DBpedia: `http://dbpedia.org/ontology/capital`\n\nThe SPARQL query for DBpedia would look like this:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Cameroon dbo:capital ?uri\n}\n```\n\nThis query selects the distinct URIs of the capital of Cameroon using the DBpedia ontology and resource URIs."
    },
    {
        "context": {
            "natural_language_question": "How many programming languages are there?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE { ?sub wdt:P31/wdt:P279* wd:Q9143 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/ProgrammingLanguage",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q9143"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To translate the given Wikidata SPARQL query to a DBpedia SPARQL query, you need to map the Wikidata properties and entities to their corresponding DBpedia properties and entities. Given that the Wikidata entity for programming languages is `http://www.wikidata.org/entity/Q9143` and its corresponding DBpedia entity is `http://dbpedia.org/ontology/ProgrammingLanguage`, the DBpedia SPARQL query would look as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nSELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE {\n  ?sub rdf:type dbo:ProgrammingLanguage .\n}\n```\n\nHere's the process broken down:\n1. **Prefix**: Define the necessary prefixes.\n2. **Entity Mapping**: Replace the Wikidata entity (`wd:Q9143`) with the DBpedia entity (`dbo:ProgrammingLanguage`).\n3. **Counting**: Use `COUNT(DISTINCT ?sub)` to count the distinct programming languages.\n\nThe final, complete SPARQL query for DBpedia is:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nSELECT (COUNT(DISTINCT ?sub) AS ?count) WHERE {\n  ?sub rdf:type dbo:ProgrammingLanguage .\n}\n```"
    },
    {
        "context": {
            "natural_language_question": "Give me all cosmonauts.",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri  <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q11631> . { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q15180> } UNION { ?uri <http://www.wikidata.org/prop/direct/P27> <http://www.wikidata.org/entity/Q159> } }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Astronaut",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11631"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/nationality",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P27"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Russia",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2184",
                        "http://www.wikidata.org/entity/Q159"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Soviet_Union",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q15180"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the instructions, here is the SPARQL query for DBpedia (KG2) to retrieve all cosmonauts:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:nationality res:Russia .\n  ?uri dbo:nationality res:Soviet_Union .\n  ?uri dbo:nationality res:Soviet_Union .\n}\n```\n\nThis query selects all unique URIs that have a nationality of either Russia or the Soviet Union, which aligns with the criteria for cosmonauts as defined in the Wikidata query."
    },
    {
        "context": {
            "natural_language_question": "Who created Family Guy?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q5930> <http://www.wikidata.org/prop/direct/P170> ?uri}",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Family_Guy",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5930"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/creator",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P170"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Based on the provided information, the SPARQL query for DBpedia to find the creator of Family Guy would be:\n\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Family_Guy dbo:creator ?uri\n}\n</sparql>"
    },
    {
        "context": {
            "natural_language_question": "How much is the population of mexico city ?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q1489 wdt:P1082 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Mexico_City",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1489"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for KG2 (DBpedia) to find the population of Mexico City, we need to map the Wikidata query to the equivalent DBpedia query. Using the provided entity and relation mappings, we can construct the query as follows:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?population WHERE {\n  res:Mexico_City dbo:populationTotal ?population .\n}\n```\n\nThis query retrieves the population of Mexico City from DBpedia, utilizing the mapped entity and relation from Wikidata."
    },
    {
        "context": {
            "natural_language_question": "Who created Batman?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q2695156 wdt:P170 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Batman",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q2695156"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/creator",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P170"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To convert the given SPARQL query for Wikidata to a SPARQL query for DBpedia, we can use the provided entity and relation mappings. The Wikidata SPARQL query provided is:\n\n```sparql\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nSELECT DISTINCT ?uri WHERE { wd:Q2695156 wdt:P170 ?uri . }\n```\n\nUsing the mappings provided:\n- `wd:Q2695156` maps to `http://dbpedia.org/resource/Batman`.\n- `wdt:P170` maps to `http://dbpedia.org/ontology/creator`.\n\nThe equivalent SPARQL query for DBpedia would be:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  res:Batman dbo:creator ?uri .\n}\n```\n\nTherefore, the final, complete SPARQL query for DBpedia is:\n\n```sparql\n<sparql>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?uri WHERE {\n  res:Batman dbo:creator ?uri .\n}\n</sparql>\n```"
    },
    {
        "context": {
            "natural_language_question": "How many people live in the capital of Australia?",
            "sparql_query_kg1": "SELECT DISTINCT ?number WHERE { <http://www.wikidata.org/entity/Q408> <http://www.wikidata.org/prop/direct/P36> ?uri . ?uri <http://www.wikidata.org/prop/direct/P1082> ?number . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Australia",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q408"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/capital",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P36"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/populationTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1082"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce the SPARQL query for DBpedia (KG2) given the context and the mappings provided, we need to translate the Wikidata query into a DBpedia query. Here is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?number WHERE {\n  res:Australia dbo:capital ?uri .\n  ?uri dbo:populationTotal ?number .\n}\n```\n\nThis query retrieves the population of the capital of Australia from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/>  PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?val WHERE { wd:Q1198 wdt:P2046 ?val . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/North_Rhine-Westphalia",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q1198"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/areaTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2046"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided and the examples, here is the SPARQL query for KG2 (DBpedia) to find the total area of North Rhine-Westphalia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?val WHERE {\n  res:North_Rhine-Westphalia dbo:areaTotal ?val .\n}\n```\n\nThis query uses the DBpedia ontology to select the total area (`dbo:areaTotal`) for the resource `res:North_Rhine-Westphalia`."
    },
    {
        "context": {
            "natural_language_question": "How many employees does IBM have?",
            "sparql_query_kg1": "PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> SELECT ?emloyees WHERE { wd:Q37156 wdt:P1128 ?emloyees . } ",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/IBM",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q37156"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/numberOfEmployees",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P1128"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for KG2 (DBpedia) to find out how many employees IBM has:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?employees WHERE {\n  res:IBM dbo:numberOfEmployees ?employees .\n}\n```\n\nThis query uses the entity mapping from Wikidata to DBpedia to fetch the number of employees for IBM."
    },
    {
        "context": {
            "natural_language_question": "How much did Pulp Fiction cost?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?value WHERE { wd:Q104123 wdt:P2130 ?value . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Pulp_Fiction",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q104123"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/budget",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2769"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, here is the SPARQL query for DBpedia (KG2) to find out how much \"Pulp Fiction\" cost:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?value WHERE {\n  res:Pulp_Fiction dbo:budget ?value .\n}\n```\n\nThis query will retrieve the budget value for the movie \"Pulp Fiction\" from DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What movies does Jesse Eisenberg play in?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.wikidata.org/prop/direct/P161> <http://www.wikidata.org/entity/Q219512> . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/starring",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P161"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Jesse_Eisenberg",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q219512"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the mappings provided, the goal is to produce a SPARQL query for DBpedia (KG2) to find the movies in which Jesse Eisenberg plays a role.\n\nHere's the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri dbo:starring res:Jesse_Eisenberg .\n}\n```\n\nThis query uses the prefix `dbo` for DBpedia ontology and `res` for DBpedia resources. The `dbo:starring` property is used to find the movies in which Jesse Eisenberg has starred."
    },
    {
        "context": {
            "natural_language_question": "Give me all Danish movies.",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q11424 . ?uri wdt:P31 ?type ; wdt:P495 wd:Q35 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Film",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q11424"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Denmark",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q35"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To produce a SPARQL query for DBpedia that retrieves all Danish movies, we need to map the entities and relations from Wikidata to DBpedia using the given mappings. Here's the final SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Film .\n  ?uri dbo:country res:Denmark .\n}\n```\n\nExplanation:\n- `dbo:Film` corresponds to `wd:Q11424` from Wikidata.\n- `dbo:country` corresponds to `wdt:P17` from Wikidata.\n- `res:Denmark` corresponds to `wd:Q35` from Wikidata.\n\nThis query selects all distinct URIs (`?uri`) that are of type `dbo:Film` and have the `dbo:country` property set to `res:Denmark`."
    },
    {
        "context": {
            "natural_language_question": "To which countries does the Himalayan mountain system extend?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT DISTINCT ?uri WHERE { wd:Q5451 wdt:P17 ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Himalayas",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q5451"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P17"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To generate a SPARQL query for DBpedia to find out to which countries the Himalayan mountain system extends, you need to use the mapping provided in the Entity and Relation Mapping (ER2) section. The DBpedia resource for the Himalayas is `http://dbpedia.org/resource/Himalayas`, and the property for country is `http://dbpedia.org/ontology/country`.\n\nHere is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT DISTINCT ?uri WHERE {\n  res:Himalayas dbo:country ?uri .\n}\n```\n\nExplanation:\n- `PREFIX dbo: <http://dbpedia.org/ontology/>` defines the prefix for DBpedia ontology.\n- `PREFIX res: <http://dbpedia.org/resource/>` defines the prefix for DBpedia resources.\n- `SELECT DISTINCT ?uri` selects distinct URIs of the countries.\n- `res:Himalayas dbo:country ?uri .` specifies that the subject is the Himalayas and the property is `dbo:country`, linking it to the countries (`?uri`).\n\nThis query will retrieve the countries to which the Himalayan mountain system extends according to DBpedia."
    },
    {
        "context": {
            "natural_language_question": "What is the largest country in the world?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.wikidata.org/prop/direct/P31>/<http://www.wikidata.org/prop/direct/P279>* <http://www.wikidata.org/entity/Q3624078> . ?uri <http://www.wikidata.org/prop/direct/P2046> ?area . } ORDER BY DESC(?area) LIMIT 1",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/Country",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q6256"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/areaTotal",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P2046"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the context and the Entity and Relation Mapping (ER2), we need to produce a SPARQL query for DBpedia (KG2) to find the largest country in the world by area.\n\nHere is the final, complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\n\nSELECT DISTINCT ?uri WHERE {\n  ?uri rdf:type dbo:Country .\n  ?uri dbo:areaTotal ?area .\n} ORDER BY DESC(?area) LIMIT 1\n```"
    },
    {
        "context": {
            "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
            "sparql_query_kg1": "PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> SELECT ?res WHERE { wd:Q567 wdt:P69 ?res . ?res wdt:P31/wdt:P279* wd:Q3918 . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Angela_Merkel",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q567"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/almaMater",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P69"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " To create a SPARQL query for DBpedia to find the alma mater of Angela Merkel, we can use the provided entity and relation mappings. Here is the complete SPARQL query for DBpedia:\n\n```sparql\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\n\nSELECT ?res WHERE {\n  res:Angela_Merkel dbo:almaMater ?res .\n  ?res rdf:type dbo:EducationalInstitution .\n}\n```\n\nThis query retrieves the alma mater of Angela Merkel from DBpedia, ensuring that the result is an educational institution."
    },
    {
        "context": {
            "natural_language_question": "Who created Goofy?",
            "sparql_query_kg1": "SELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111135> <http://www.wikidata.org/prop/direct/P170> ?uri . }",
            "kg1_name": "Wikidata",
            "kg2_name": "DBpedia",
            "er2": [
                {
                    "dbpedia_id": "http://dbpedia.org/resource/Goofy",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/Q111135"
                    ]
                },
                {
                    "dbpedia_id": "http://dbpedia.org/ontology/creator",
                    "wikidata_ids": [
                        "http://www.wikidata.org/entity/P170"
                    ]
                }
            ],
            "instruction": "\"Given the information above, produce a SPARQL query for KG2. In your answer please highlight the final, complete SPARQL query within the tags '<sparql>' and '</sparql>'. Here are 4 examples: \n            Example 1: Q: How many films did Hal Roach produce? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT (COUNT(?uri) as ?c) WHERE { ?uri wdt:P162 wd:Q72792 . };\n            DBpedia: SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> };\n            Example 2: Q: List all boardgames by GMT. \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT ?uri WHERE { ?uri wdt:P31 wd:Q131436 . };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            SELECT ?uri WHERE { ?uri dbo:publisher res:GMT_Games };\n            Example 3: Q: Which organizations were founded in 1950? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?type wdt:P279* wd:Q43229 . ?uri wdt:P31 ?type . ?uri wdt:P571 ?foundedAt . FILTER CONTAINS(STR(?foundedAt), '1950') };\n            DBpedia: PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } \n            UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, '^1950') };\n            Example 4: Q: Which U.S. state has the highest density? \n            Wikidata: PREFIX wdt: <http://www.wikidata.org/prop/direct/> PREFIX wd: <http://www.wikidata.org/entity/> \n            SELECT DISTINCT ?uri WHERE { ?uri wdt:P31 wd:Q35657 ; wdt:P2046 ?area ; wdt:P1082 ?population . BIND((?population/?area) AS ?density) . } ORDER BY DESC(?density) LIMIT 1;\n            DBpedia: PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        },
        "sparql_query_kg2": " Given the information provided, we need to create a SPARQL query for DBpedia to find the creator of Goofy. The Wikidata query provided is:\n\n```sparql\nSELECT DISTINCT ?uri WHERE { <http://www.wikidata.org/entity/Q111135> <http://www.wikidata.org/prop/direct/P170> ?uri . }\n```\n\nUsing the Entity and Relation Mapping (ER2), we can map the Wikidata IDs to DBpedia IDs. The relevant mappings are:\n\n- `<http://www.wikidata.org/entity/Q111135>` maps to `<http://dbpedia.org/resource/Goofy>`\n- `<http://www.wikidata.org/prop/direct/P170>` maps to `<http://dbpedia.org/ontology/creator>`\n\nGiven this mapping, the equivalent SPARQL query for DBpedia would be:\n\n```sparql\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . }\n```\n\nSo, the final, complete SPARQL query for DBpedia is:\n\n<sparql>\nSELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . }\n</sparql>"
    }
]