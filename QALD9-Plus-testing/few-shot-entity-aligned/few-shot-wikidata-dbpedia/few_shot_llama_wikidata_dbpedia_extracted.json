[
  {
    "natural_language_question": "Who is the founder of Penguin Books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?o1 . }"
  },
  {
    "natural_language_question": "Which films did Stanley Kubrick direct?",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri dbo:director <http://dbpedia.org/resource/Stanley_Kubrick> }"
  },
  {
    "natural_language_question": "List all the musicals with music by Elton John.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:Musical ; dbo:composer ?composer . FILTER (?composer = res:Elton_John) }"
  },
  {
    "natural_language_question": "Who developed Skype?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:developer <http://dbpedia.org/resource/Skype> }"
  },
  {
    "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:SoccerClub ?league . FILTER (?league = res:Bundesliga || ?league dbo:league res:Bundesliga) . }"
  },
  {
    "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?movie a dbo:Movie ; dbo:director <http://dbpedia.org/resource/William_Shatner> ; dbo:starring ?uri . }"
  },
  {
    "natural_language_question": "What is the highest mountain?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Mountain ; dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "How many films did Leonardo DiCaprio star in?",
    "sparql_query_kg2": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/Film> <http://dbpedia.org/resource/Leonardo_DiCaprio> . }"
  },
  {
    "natural_language_question": "When was Olof Palme shot?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbo:deathDate ?date . }"
  },
  {
    "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring res:Elizabeth_Taylor . ?uri dbo:starring res:Richard_Burton . }"
  },
  {
    "natural_language_question": "Who developed Minecraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:developer <http://dbpedia.org/resource/Minecraft>. }"
  },
  {
    "natural_language_question": "How much did the Lego Movie cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/The_Lego_Movie> dbo:budget ?val }"
  },
  {
    "natural_language_question": "For which label did Elvis record his first album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT ?label WHERE { ?album a dbo:Album . ?artist dbo:artistName \"Elvis Presley\" . ?album dbo:artist ?artist . ?album dbo:recordLabel ?label . }"
  },
  {
    "natural_language_question": "Give me the runtime of Toy Story.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Toy_Story> dbo:runtime ?val . }"
  },
  {
    "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:occupation res:Bandleader ; dbo:instrument res:Trumpet . }"
  },
  {
    "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:director res:Garry_Marshall . ?uri dbo:starring res:Julia_Roberts . }"
  },
  {
    "natural_language_question": "In which year was Rachel Stevens born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?year WHERE { <http://dbpedia.org/resource/Rachel_Stevens> dbo:birthYear ?year }"
  },
  {
    "natural_language_question": "What is the most frequent cause of death?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbo:deathCause ?uri . } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
  },
  {
    "natural_language_question": "How high is the Yokohama Marine Tower?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?num WHERE { ?x dbo:height ?num . ?x <http://dbpedia.org/resource/Yokohama_Marine_Tower> . }"
  },
  {
    "natural_language_question": "What is the highest mountain in Italy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:Mountain ; dbo:locatedInArea res:Italy . ?uri dbo:elevation ?elevation . FILTER (STR(?elevation) > 0) } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:doctoralAdvisor <http://dbpedia.org/resource/Albert_Einstein> . }"
  },
  {
    "natural_language_question": "What is Donald Trump's main business?",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Donald_Trump> }"
  },
  {
    "natural_language_question": "Who has Tom Cruise been married to?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { ?o1 dbo:spouse <http://dbpedia.org/resource/Tom_Cruise> }"
  },
  {
    "natural_language_question": "How many people live in Eurasia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT (COUNT(DISTINCT ?val) AS ?c) WHERE { ?uri dbo:populationTotal ?val . ?uri <http://dbpedia.org/resource/Eurasia> }"
  },
  {
    "natural_language_question": "Who is the author of the interpretation of dreams?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Interpretation_of_Dreams dbo:author ?uri . }"
  },
  {
    "natural_language_question": "When was John Adams born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/John_Adams> dbo:birthDate ?val }"
  },
  {
    "natural_language_question": "how much is the total population of european union?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?totalPopulation WHERE { res:European_Union dbo:populationTotal ?totalPopulation }"
  },
  {
    "natural_language_question": "Give me the currency of China.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbo:currency ?o1 . }"
  },
  {
    "natural_language_question": "When was the death of Shakespeare?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:deathDate ?date }"
  },
  {
    "natural_language_question": "Which rockets were launched from Baikonur?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:Rocket ?launchSite . ?launchSite a dbo:LaunchSite ; dbo:location res:Baikonur_Cosmodrome . }"
  },
  {
    "natural_language_question": "Give me all islands that belong to Japan.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:island ?island . ?island dbo:country res:Japan }"
  },
  {
    "natural_language_question": "Who developed the video game World of Warcraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri . }"
  },
  {
    "natural_language_question": "Give me all companies in the advertising industry.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Advertising . }"
  },
  {
    "natural_language_question": "Which university did Angela Merkel attend?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { VALUES ?label { \"Angela Merkel\" } ?uri rdfs:label ?label . FILTER (regex(?label, ?label)) OPTIONAL { ?uri dbo:almaMater ?uni . ?uni rdfs:label ?label2 . FILTER (regex(?label2, \"University of Leipzig\")) } }"
  },
  {
    "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . ?uri dbo:TelevisionShow ?type . }"
  },
  {
    "natural_language_question": "Give me all movies with Tom Cruise.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?film WHERE { ?film rdf:type dbo:Film ; dbo:starring <http://dbpedia.org/resource/Tom_Cruise> }"
  },
  {
    "natural_language_question": "What country is Mount Everest in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?country WHERE { res:Mount_Everest dbo:locatedInArea ?country }"
  },
  {
    "natural_language_question": "Where was JFK assassinated?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri }"
  },
  {
    "natural_language_question": "Which river does the Brooklyn Bridge cross?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:crosses <http://dbpedia.org/resource/Brooklyn_Bridge> }"
  },
  {
    "natural_language_question": "Give all swimmers that were born in Moscow.",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri dbo:Swimmer res:Moscow . }"
  },
  {
    "natural_language_question": "What was the last movie with Alec Guinness?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:filmType res:Alec_Guinness . ?uri dbo:releaseDate ?date . FILTER (xsd:date(?date) > xsd:date(\"1900-01-01\")) } ORDER BY DESC(?date) LIMIT 1"
  },
  {
    "natural_language_question": "What is the second highest mountain on Earth?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbo:Mountain ; dbo:elevation ?elevation . ?uri dbo:locatedOn ?continent . ?continent rdfs:label ?label . FILTER regex(?label, \"Asia\") } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
  },
  {
    "natural_language_question": "What is the population of Cairo?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX owl: <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Cairo> dbo:populationTotal ?val . OPTIONAL { <http://dbpedia.org/resource/Cairo> owl:sameAs ?resource } }"
  },
  {
    "natural_language_question": "Which people were born in Heraklion?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:birthPlace res:Heraklion }"
  },
  {
    "natural_language_question": "How many children did Benjamin Franklin have?",
    "sparql_query_kg2": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Benjamin_Franklin> }"
  },
  {
    "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbo:elevation ?uri }"
  },
  {
    "natural_language_question": "In which country is Mecca located?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?country WHERE { dbpedia:Mecca dbo:country ?country }"
  },
  {
    "natural_language_question": "How tall is Claudia Schiffer?",
    "sparql_query_kg2": "PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?height WHERE { <http://dbpedia.org/resource/Claudia_Schiffer> dbo:height ?height }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbpedia:subclassOf* dbpedia:Holiday }"
  },
  {
    "natural_language_question": "What kind of music did Lou Reed play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:genre res:Lou_Reed . }"
  },
  {
    "natural_language_question": "Give me the birth place of Frank Sinatra.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Frank_Sinatra dbo:birthPlace ?uri }"
  },
  {
    "natural_language_question": "Which city has the least inhabitants?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:type dbo:City ; dbo:populationTotal ?population . } ORDER BY ?population LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by Walt Disney?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri a dbo:TelevisionShow. ?uri dbo:creator res:Walt_Disney. }"
  },
  {
    "natural_language_question": "Give me all Swedish holidays.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday . OPTIONAL { ?uri dbo:country dbp:Sweden } }"
  },
  {
    "natural_language_question": "What is the net income of Apple?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { wd:Q312 dbo:netIncome ?uri }"
  },
  {
    "natural_language_question": "Where did Abraham Lincoln die?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abraham_Lincoln> dbo:deathPlace ?uri }"
  },
  {
    "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?country ; dbo:capital ?uri }"
  },
  {
    "natural_language_question": "In which country is the Limerick Lake?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> dbo:country ?uri }"
  },
  {
    "natural_language_question": "How tall is Michael Jordan?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { ?entity dbo:height ?val . ?entity <http://dbpedia.org/resource/Michael_Jordan> . }"
  },
  {
    "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Clint_Eastwood ; dbo:starring res:Clint_Eastwood ; dbo:director res:Clint_Eastwood . }"
  },
  {
    "natural_language_question": "In which countries can you pay using the West African CFA franc?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
  },
  {
    "natural_language_question": "how much is the population Iraq?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Iraq> dbo:populationTotal ?val }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday . }"
  },
  {
    "natural_language_question": "Which Greek parties are pro-European?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:politicalPartyOf res:Greece ; dbo:ideology res:Pro-Europeanism . }"
  },
  {
    "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?actor ?birthDate WHERE { ?actor rdf:type dbo:Person ; dbo:starring <http://dbpedia.org/resource/Charmed> ; dbp:birthDate ?birthDate . }"
  },
  {
    "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?movement WHERE { res:The_Three_Dancers dbo:author ?painter . ?painter dbo:movement ?movement . }"
  },
  {
    "natural_language_question": "Which actors were born in Germany?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?actor WHERE { ?actor dbo:birthPlace res:Germany . }"
  },
  {
    "natural_language_question": "Who designed the Brooklyn Bridge?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri }"
  },
  {
    "natural_language_question": "Who wrote the Game of Thrones theme?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/composer> ?uri . }"
  },
  {
    "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:director <http://dbpedia.org/resource/Francis_Ford_Coppola> . ?uri a dbo:Film . }"
  },
  {
    "natural_language_question": "What is the birth name of Adele?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?name WHERE { res:Adele dbo:birthName ?name }"
  },
  {
    "natural_language_question": "What was the first Queen album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Album . ?uri dbo:artist res:Queen_(band) . ?uri dbo:releaseDate ?date . ORDER BY ?date LIMIT 1 }"
  },
  {
    "natural_language_question": "What is the currency of the Czech Republic?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency <http://dbpedia.org/resource/Czech_Republic> }"
  },
  {
    "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri rdf:type dbo:Person . UNION { ?uri dbo:birthPlace <http://dbpedia.org/resource/Vienna> . ?uri dbo:deathPlace <http://dbpedia.org/resource/Berlin> . } UNION { ?uri dbo:birthPlace ?birthPlace . ?birthPlace rdfs:label ?label . FILTER (regex(str(?label), 'Vienna')) } UNION { ?uri dbo:deathPlace ?deathPlace . ?deathPlace rdfs:label ?label . FILTER (regex(str(?label), 'Berlin')) } }"
  },
  {
    "natural_language_question": "Which bridges cross the Seine?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Bridge ?bridge; dbp:rivers ?river. FILTER(?river = <http://dbpedia.org/resource/Seine>) }"
  },
  {
    "natural_language_question": "Which musician wrote the most books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri (COUNT(DISTINCT ?book) AS ?count) WHERE { ?uri rdf:type dbo:Musician . ?uri dbo:publisher ?uri . ?book dbo:author ?uri . ?book dbo:publisher ?uri . } GROUP BY ?uri ORDER BY DESC(?count) LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by John Cleese?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:creator res:John_Cleese . ?uri rdf:type dbo:TelevisionShow . }"
  },
  {
    "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns/> SELECT ?uri WHERE { ?uri rdf:type dbo:Writer . ?uri dbo:award <http://dbpedia.org/resource/Nobel_Prize_in_Literature> . }"
  },
  {
    "natural_language_question": "Who discovered Ceres?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:discoverer <http://dbpedia.org/resource/Ceres_(dwarf_planet)> }"
  },
  {
    "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?res WHERE { ?res rdf:type dbo:Bandleader . ?res dbp:instrument <http://dbpedia.org/resource/Trumpet> . }"
  },
  {
    "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer . ?uri dbo:height ?height . FILTER(?height > 200) }"
  },
  {
    "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:starring res:Julia_Roberts . ?uri dbo:starring res:Richard_Gere . }"
  },
  {
    "natural_language_question": "What is the capital of Canada?",
    "sparql_query_kg2": "SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?o1 . }"
  },
  {
    "natural_language_question": "Which soccer players were born on Malta?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:SoccerPlayer ?birthPlace . ?birthPlace dbo:birthPlace res:Malta . }"
  },
  {
    "natural_language_question": "What is the capital of Cameroon?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:capital <http://dbpedia.org/resource/Cameroon> }"
  },
  {
    "natural_language_question": "How many programming languages are there?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { { ?uri rdf:type dbo:ProgrammingLanguage . } UNION { ?uri rdf:type ?class . ?class dbo:subClassOf+ dbo:ProgrammingLanguage . } }"
  },
  {
    "natural_language_question": "Give me all cosmonauts.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Astronaut . ?uri rdfs:member ?astronaut . { ?astronaut dbo:nationality res:Soviet_Union } UNION { ?astronaut dbo:nationality res:Russia } }"
  },
  {
    "natural_language_question": "Who created Family Guy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }"
  },
  {
    "natural_language_question": "How much is the population of mexico city ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Mexico_City dbo:populationTotal ?uri }"
  },
  {
    "natural_language_question": "Who created Batman?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT ?creator WHERE { res:Batman dbo:creator ?creator . }"
  },
  {
    "natural_language_question": "How many people live in the capital of Australia?",
    "sparql_query_kg2": "SELECT (COUNT(DISTINCT ?uri) AS ?number) WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Australia> . ?uri <http://dbpedia.org/ontology/populationTotal> ?number . }"
  },
  {
    "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> dbo:areaTotal ?val }"
  },
  {
    "natural_language_question": "How many employees does IBM have?",
    "sparql_query_kg2": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/numberOfEmployees> <http://dbpedia.org/resource/IBM> }"
  },
  {
    "natural_language_question": "How much did Pulp Fiction cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?value WHERE { <http://dbpedia.org/resource/Pulp_Fiction> dbo:budget ?value . ?value dbo:amount ?amount . }"
  },
  {
    "natural_language_question": "What movies does Jesse Eisenberg play in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Jesse_Eisenberg> }"
  },
  {
    "natural_language_question": "Give me all Danish movies.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:country res:Denmark ; dbo:filmType dbo:Film . }"
  },
  {
    "natural_language_question": "To which countries does the Himalayan mountain system extend?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?uri }"
  },
  {
    "natural_language_question": "What is the largest country in the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:country dbpedia:Russia ; rdfs:subClassOf* dbo:Country . ?uri dbp:area ?area . } ORDER BY DESC(?area) LIMIT 1"
  },
  {
    "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?res WHERE { ?res rdfs:subClassOf* dbo:University . }"
  },
  {
    "natural_language_question": "Who created Goofy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Goofy dbo:creator ?uri . }"
  }
]