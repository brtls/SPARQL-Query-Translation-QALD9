[
  {
    "natural_language_question": "Who is the founder of Penguin Books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?founder WHERE { ?resource rdf:type dbo:Company ; dbo:founder ?founder . FILTER (REGEX(STR(?resource), 'Penguin_Books', 'i')) . FILTER (lang(?founder) = 'en') . }"
  },
  {
    "natural_language_question": "Which films did Stanley Kubrick direct?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director <http://dbpedia.org/resource/Stanley_Kubrick> }"
  },
  {
    "natural_language_question": "List all the musicals with music by Elton John.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri a dbo:Musical . ?uri dbo:musicBy <http://dbpedia.org/resource/Elton_John> }"
  },
  {
    "natural_language_question": "Who developed Skype?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { res:Skype dbo:developer ?uri }"
  },
  {
    "natural_language_question": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:SoccerClub ; dbo:category ?category FILTER regex(?category, 'Bundesliga') }"
  },
  {
    "natural_language_question": "Give me all actors starring in movies directed by William Shatner.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?actor WHERE { ?movie dbo:director res:William_Shatner. ?movie rdf:type dbo:Film. ?movie dbo:actor ?actor. FILTER(!bound(?actor) || ?actor != res:William_Shatner) }"
  },
  {
    "natural_language_question": "What is the highest mountain?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:Mountain ?uri dbo:elevation ?elevation }"
  },
  {
    "natural_language_question": "How many films did Leonardo DiCaprio star in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Leonardo_DiCaprio>. }"
  },
  {
    "natural_language_question": "When was Olof Palme shot?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns# SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> dbo:deathDate ?date }"
  },
  {
    "natural_language_question": "Which movies star both Liz Taylor and Richard Burton?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Elizabeth_Taylor> . ?uri dbo:starring <http://dbpedia.org/resource/Richard_Burton> . }"
  },
  {
    "natural_language_question": "Who developed Minecraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:Minecraft dbo:developer ?uri ?uri dbo:Person | dbo:Developer | dbo:VideoGameDeveloper | dbo:VideoGameDesigner }"
  },
  {
    "natural_language_question": "How much did the Lego Movie cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?val WHERE { res:The_Lego_Movie dbo:budget ?val }"
  },
  {
    "natural_language_question": "For which label did Elvis record his first album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?label WHERE { ?album dbo:releaseDate \"1954-03-23\" . ?album dbo:recordLabel ?label . ?artist rdf:type dbo:Artist . ?artist dbo:artistName \"Elvis Presley\" . ?album dbo:artist ?artist . }"
  },
  {
    "natural_language_question": "Give me the runtime of Toy Story.",
    "sparql_query_kg2": "SELECT ?val WHERE { <http://dbpedia.org/resource/Toy_Story> <http://dbpedia.org/ontology/runtime> ?val . }"
  },
  {
    "natural_language_question": "Give me a list of all trumpet players that were bandleaders.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Occupation . ?uri dbo:instrument res:Trumpet . ?uri rdf:type res:Bandleader . }"
  },
  {
    "natural_language_question": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:director <http://dbpedia.org/resource/Garry_Marshall> . ?uri dbo:starring <http://dbpedia.org/resource/Julia_Roberts> . ?uri a dbo:Film . }"
  },
  {
    "natural_language_question": "In which year was Rachel Stevens born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?year WHERE { <http://dbpedia.org/resource/Rachel_Stevens> dbo:birthYear ?year . }"
  },
  {
    "natural_language_question": "What is the most frequent cause of death?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?s dbo:deathCause ?uri } GROUP BY ?uri ORDER BY DESC(COUNT(DISTINCT ?s)) LIMIT 1"
  },
  {
    "natural_language_question": "How high is the Yokohama Marine Tower?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num. }"
  },
  {
    "natural_language_question": "What is the highest mountain in Italy?",
    "sparql_query_kg2": "PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbpedia:Mountain ; dbpedia:locatedInArea <http://dbpedia.org/resource/Italy> ; dbp:elevation ?elevation . } ORDER BY DESC(?elevation) LIMIT 1"
  },
  {
    "natural_language_question": "Who was the doctoral supervisor of Albert Einstein?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri dbo:doctoralAdvisor res:Albert_Einstein . }"
  },
  {
    "natural_language_question": "What is Donald Trump's main business?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Donald_Trump> ; <http://dbpedia.org/ontology/domain> ?domain . FILTER regex(?domain, 'business') }"
  },
  {
    "natural_language_question": "Who has Tom Cruise been married to?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?o1 WHERE { res:Tom_Cruise dbo:spouse ?o1 }"
  },
  {
    "natural_language_question": "How many people live in Eurasia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?val) AS ?c) WHERE { ?uri dbo:populationTotal ?val }"
  },
  {
    "natural_language_question": "Who is the author of the interpretation of dreams?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/The_Interpretation_of_Dreams> dbo:author ?uri }"
  },
  {
    "natural_language_question": "When was John Adams born?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date . }"
  },
  {
    "natural_language_question": "how much is the total population of european union?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?population WHERE { res:European_Union dbo:populationTotal ?population . }"
  },
  {
    "natural_language_question": "Give me the currency of China.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?o1 WHERE { <http://dbpedia.org/resource/China> dbo:currency ?o1 . }"
  },
  {
    "natural_language_question": "When was the death of Shakespeare?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Shakespeare> dbo:deathDate ?uri }"
  },
  {
    "natural_language_question": "Which rockets were launched from Baikonur?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Rocket { ?uri dbo:launchSite <http://dbpedia.org/resource/Baikonur_Cosmodrome> }"
  },
  {
    "natural_language_question": "Give me all islands that belong to Japan.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Island ; dbo:partOf res:Japan }"
  },
  {
    "natural_language_question": "Who developed the video game World of Warcraft?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?developer WHERE { res:World_of_Warcraft dbo:developer ?developer }"
  },
  {
    "natural_language_question": "Give me all companies in the advertising industry.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Company ; dbo:industry res:Advertising . }"
  },
  {
    "natural_language_question": "Which university did Angela Merkel attend?",
    "sparql_query_kg2": "SELECT ?uri WHERE { <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/almaMater> ?uri }"
  },
  {
    "natural_language_question": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:starring <http://dbpedia.org/resource/Neil_Patrick_Harris> . ?uri a dbo:TelevisionShow . }"
  },
  {
    "natural_language_question": "Give me all movies with Tom Cruise.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Tom_Cruise . }"
  },
  {
    "natural_language_question": "What country is Mount Everest in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?mountEverest dbo:locatedInArea ?uri . ?uri a dbo:Country . }"
  },
  {
    "natural_language_question": "Where was JFK assassinated?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . }"
  },
  {
    "natural_language_question": "Which river does the Brooklyn Bridge cross?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:crosses <http://dbpedia.org/resource/Brooklyn_Bridge> }"
  },
  {
    "natural_language_question": "Give all swimmers that were born in Moscow.",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> . ?uri a <http://dbpedia.org/ontology/Swimmer> }"
  },
  {
    "natural_language_question": "What was the last movie with Alec Guinness?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:starring res:Alec_Guinness ; dbo:releaseDate ?releaseDate . } ORDER BY DESC(?releaseDate) LIMIT 1"
  },
  {
    "natural_language_question": "What is the second highest mountain on Earth?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?res WHERE { ?res dbo:mountain ?elevation . FILTER (?elevation > 8848) } ORDER BY DESC(?elevation) LIMIT 1 OFFSET 1"
  },
  {
    "natural_language_question": "What is the population of Cairo?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?val WHERE { ?uri dbo:populationTotal ?val . ?uri <http://dbpedia.org/resource/Cairo> . }"
  },
  {
    "natural_language_question": "Which people were born in Heraklion?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Person. ?uri dbo:birthPlace <http://dbpedia.org/resource/Heraklion>. }"
  },
  {
    "natural_language_question": "How many children did Benjamin Franklin have?",
    "sparql_query_kg2": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Benjamin_Franklin> . }"
  },
  {
    "natural_language_question": "how much is the elevation of D\u00fcsseldorf Airport ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?elevationValue WHERE { <http://dbpedia.org/resource/D\u00fcsseldorf_Airport> dbo:elevation ?elevationValue . }"
  },
  {
    "natural_language_question": "In which country is Mecca located?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?country WHERE { ?mecca a dbo:City . ?mecca dbo:country ?country . FILTER (strstarts(str(?mecca), 'http://dbpedia.org/resource/Mecca')). }"
  },
  {
    "natural_language_question": "How tall is Claudia Schiffer?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?val WHERE { res:Claudia_Schiffer dbo:height ?val . }"
  },
  {
    "natural_language_question": "Who wrote the book The Pillars of the Earth?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }"
  },
  {
    "natural_language_question": "What kind of music did Lou Reed play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:genre res:Lou_Reed }"
  },
  {
    "natural_language_question": "Give me the birth place of Frank Sinatra.",
    "sparql_query_kg2": "SELECT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Frank_Sinatra> }"
  },
  {
    "natural_language_question": "Which city has the least inhabitants?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:City ; dbp:populationTotal ?population . } ORDER BY ?population LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by Walt Disney?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:creator res:Walt_Disney . ?uri a dbo:TelevisionShow }"
  },
  {
    "natural_language_question": "Give me all Swedish holidays.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbo:Holiday ?holiday . ?holiday dbo:country <http://dbpedia.org/resource/Sweden> }"
  },
  {
    "natural_language_question": "What is the net income of Apple?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { ?uri dbo:netIncome ?income . FILTER regex(iri(?uri), 'Apple_Inc') }"
  },
  {
    "natural_language_question": "Where did Abraham Lincoln die?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri }"
  },
  {
    "natural_language_question": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?country . ?country dbo:capital ?uri . }"
  },
  {
    "natural_language_question": "In which country is the Limerick Lake?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Limerick_Lake> <http://www.wikidata.org/prop/direct/P17> ?uri }"
  },
  {
    "natural_language_question": "How tall is Michael Jordan?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?val WHERE { <http://dbpedia.org/resource/Michael_Jordan> dbo:height ?val }"
  },
  {
    "natural_language_question": "Which films starring Clint Eastwood did he direct himself?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Clint_Eastwood ; dbo:starring ?movie . }"
  },
  {
    "natural_language_question": "In which countries can you pay using the West African CFA franc?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:currency res:West_African_CFA_franc }"
  },
  {
    "natural_language_question": "how much is the population Iraq?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?val WHERE { <http://dbpedia.org/resource/Iraq> dbo:populationTotal ?val }"
  },
  {
    "natural_language_question": "Which holidays are celebrated around the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:category ?category . FILTER (regex(?category, 'Holiday')) . }"
  },
  {
    "natural_language_question": "Which Greek parties are pro-European?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri rdf:type dbo:PoliticalParty ; dbo:country res:Greece ; dbo:ideology res:Pro-Europeanism . }"
  },
  {
    "natural_language_question": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?date WHERE { ?actor dbo:starring <http://dbpedia.org/resource/Charmed> ; dbo:birthDate ?date . }"
  },
  {
    "natural_language_question": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?movement WHERE { res:The_Three_Dancers dbo:author ?artist . ?artist dbo:movement ?movement . }"
  },
  {
    "natural_language_question": "Which actors were born in Germany?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:genre ?genre . ?genre dbp:country res:Germany . ?uri dbo:birthPlace ?place . }"
  },
  {
    "natural_language_question": "Who designed the Brooklyn Bridge?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:architect <http://dbpedia.org/resource/Brooklyn_Bridge> }"
  },
  {
    "natural_language_question": "Who wrote the Game of Thrones theme?",
    "sparql_query_kg2": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Game_of_Thrones> }"
  },
  {
    "natural_language_question": "Give me all movies directed by Francis Ford Coppola.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:director res:Francis_Ford_Coppola ; a dbo:Film . }"
  },
  {
    "natural_language_question": "What is the birth name of Adele?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?name WHERE { res:Adele dbo:birthName ?name }"
  },
  {
    "natural_language_question": "What was the first Queen album?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?album dbo:artist ?artist . ?artist rdfs:label \"Queen\"@en . ?album dbo:releaseDate ?date . FILTER ( ?date = ( GROUP_CONCAT(?date) AS ?dates ) ) }"
  },
  {
    "natural_language_question": "What is the currency of the Czech Republic?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Czech_Republic dbo:currency ?uri . }"
  },
  {
    "natural_language_question": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbo:birthPlace <http://dbpedia.org/resource/Vienna> . ?uri dbo:deathPlace <http://dbpedia.org/resource/Berlin> . }"
  },
  {
    "natural_language_question": "Which bridges cross the Seine?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:Bridge . ?uri dbo:crosses ?crosses . ?crosses dbp:rivers ?rivers . FILTER (CONTAINS(STR(?rivers), 'Seine')) }"
  },
  {
    "natural_language_question": "Which musician wrote the most books?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?musician (COUNT(DISTINCT ?book) AS ?bookCount) WHERE { ?musician dbo:occupation res:Musician . ?book dbo:author ?musician . } GROUP BY ?musician ORDER BY DESC(?bookCount) LIMIT 1"
  },
  {
    "natural_language_question": "Which television shows were created by John Cleese?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:hasCreator res:John_Cleese . ?uri a dbo:TelevisionShow . }"
  },
  {
    "natural_language_question": "Give me all writers that won the Nobel Prize in literature.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { ?uri dbo:Writer ?award . ?award dbp:winner ?noble . FILTER(regex(str(?noble), \"Nobel Prize in Literature\")) }"
  },
  {
    "natural_language_question": "Who discovered Ceres?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:discoverer <http://dbpedia.org/resource/Ceres_(dwarf_planet)> . }"
  },
  {
    "natural_language_question": "Give me a list of all bandleaders that play trumpet.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?res WHERE { ?res dbo:occupation <http://dbpedia.org/resource/Bandleader> . ?res dbo:instrument <http://dbpedia.org/resource/Trumpet> . }"
  },
  {
    "natural_language_question": "Show me all basketball players that are higher than 2 meters.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri a dbo:BasketballPlayer . ?uri dbo:height ?height . FILTER(?height > \"2.00\"^^xsd:float) }"
  },
  {
    "natural_language_question": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?f1 dbo:starring res:Julia_Roberts . ?f2 dbo:starring res:Richard_Gere . FILTER(?f1 = ?f2) }"
  },
  {
    "natural_language_question": "What is the capital of Canada?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?o1 WHERE { <http://dbpedia.org/resource/Canada> dbo:capital ?o1 . }"
  },
  {
    "natural_language_question": "Which soccer players were born on Malta?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:SoccerPlayer ?birthPlace . ?birthPlace dbo:country res:Malta . }"
  },
  {
    "natural_language_question": "What is the capital of Cameroon?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:capital <http://dbpedia.org/resource/Cameroon> }"
  },
  {
    "natural_language_question": "How many programming languages are there?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?uri) AS ?count) WHERE { ?uri a dbo:ProgrammingLanguage }"
  },
  {
    "natural_language_question": "Give me all cosmonauts.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:Astronaut ?info . }"
  },
  {
    "natural_language_question": "Who created Family Guy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:creator res:Family_Guy }"
  },
  {
    "natural_language_question": "How much is the population of mexico city ?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mexico_City dbo:populationTotal ?uri }"
  },
  {
    "natural_language_question": "Who created Batman?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbo:creator <http://dbpedia.org/resource/Batman> }"
  },
  {
    "natural_language_question": "How many people live in the capital of Australia?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?number WHERE { ?uri dbo:capital <http://dbpedia.org/resource/Australia> . ?uri dbo:populationTotal ?number . }"
  },
  {
    "natural_language_question": "how big is the total area of North Rhine- Westphalia?",
    "sparql_query_kg2": "SELECT ?val WHERE { <http://dbpedia.org/resource/North_Rhine-Westphalia> <http://dbpedia.org/ontology/areaTotal> ?val . }"
  },
  {
    "natural_language_question": "How many employees does IBM have?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT (COUNT(DISTINCT ?uri) AS ?emloyees) WHERE { ?uri dbo:numberOfEmployees <http://dbpedia.org/resource/IBM> . }"
  },
  {
    "natural_language_question": "How much did Pulp Fiction cost?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> SELECT (xsd:float(?value) AS ?answer) WHERE { <http://dbpedia.org/resource/Pulp_Fiction> dbo:budget ?value . }"
  },
  {
    "natural_language_question": "What movies does Jesse Eisenberg play in?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri dbo:starring res:Jesse_Eisenberg }"
  },
  {
    "natural_language_question": "Give me all Danish movies.",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:country res:Denmark . }"
  },
  {
    "natural_language_question": "To which countries does the Himalayan mountain system extend?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbo:country ?uri . }"
  },
  {
    "natural_language_question": "What is the largest country in the world?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { ?uri a dbo:Country ; owl:sameAs <http://dbpedia.org/class/yago/Country108546813> ; dbo:areaTotal ?area } ORDER BY DESC(?area) LIMIT 1"
  },
  {
    "natural_language_question": "What is the alma mater of the chancellor of Germany Angela Merkel?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT ?almaMater WHERE { ?almaMater <http://dbpedia.org/ontology/almaMater> ?michigan . ?michigan dbo:chancellor <http://dbpedia.org/resource/Angela_Merkel> . }"
  },
  {
    "natural_language_question": "Who created Goofy?",
    "sparql_query_kg2": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> dbo:creator ?uri }"
  }
]